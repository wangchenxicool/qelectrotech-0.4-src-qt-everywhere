!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABOUTQET_H	aboutqet.h	19;"	d
ABSTRACTPARTELLIPSE_H	editor/graphicspart/abstractpartellipse.h	19;"	d
ARC_EDITOR_H	editor/arceditor.h	19;"	d
AUTONUMEROTATION_H	autonumerotation.h	19;"	d
AUTONUMSELECTORWIDGET_H	ui/autonumselectorwidget.h	19;"	d
Abort	qet.h	/^		Abort,   \/\/\/< abort the whole operation, ignoring the curent item$/;"	e	enum:QET::Action
AboutQET	aboutqet.cpp	/^AboutQET::AboutQET(QWidget *parent) : QDialog(parent) {$/;"	f	class:AboutQET
AboutQET	aboutqet.h	/^class AboutQET : public QDialog {$/;"	c
Absolute	qet.h	/^		Absolute,                   \/\/\/< the length is absolute and should be applied as is$/;"	e	enum:QET::TitleBlockColumnLength
AbstractPartEllipse	editor/graphicspart/abstractpartellipse.cpp	/^AbstractPartEllipse::AbstractPartEllipse(QETElementEditor *editor, QGraphicsItem *parent) :$/;"	f	class:AbstractPartEllipse
AbstractPartEllipse	editor/graphicspart/abstractpartellipse.h	/^class AbstractPartEllipse : public CustomElementGraphicPart$/;"	c
Action	qet.h	/^	enum Action {$/;"	g	namespace:QET
Add	qeticons.cpp	/^		QIcon Add;$/;"	m	namespace:QET::Icons	file:
AddAllChild	genericpanel.h	/^		AddAllChild                   =  63,$/;"	e	enum:GenericPanel::PanelOption
AddAllChildElements	genericpanel.h	/^		AddAllChildElements           =  56,$/;"	e	enum:GenericPanel::PanelOption
AddAllChildTemplates	genericpanel.h	/^		AddAllChildTemplates          =   6,$/;"	e	enum:GenericPanel::PanelOption
AddChildDiagrams	genericpanel.h	/^		AddChildDiagrams              =   1,$/;"	e	enum:GenericPanel::PanelOption
AddChildElements	genericpanel.h	/^		AddChildElements              =  32,$/;"	e	enum:GenericPanel::PanelOption
AddChildElementsCategories	genericpanel.h	/^		AddChildElementsCategories    =  16,$/;"	e	enum:GenericPanel::PanelOption
AddChildElementsCollections	genericpanel.h	/^		AddChildElementsCollections   =   8,$/;"	e	enum:GenericPanel::PanelOption
AddChildElementsContainers	genericpanel.h	/^		AddChildElementsContainers    =  24,$/;"	e	enum:GenericPanel::PanelOption
AddChildTemplates	genericpanel.h	/^		AddChildTemplates             =   4,$/;"	e	enum:GenericPanel::PanelOption
AddChildTemplatesCollection	genericpanel.h	/^		AddChildTemplatesCollection   =   2,$/;"	e	enum:GenericPanel::PanelOption
AddExtraInfo	qetgraphicsitem/crossrefitem.cpp	/^void CrossRefItem::AddExtraInfo(QPainter &painter) {$/;"	f	class:CrossRefItem
AddItemCommand	diagramcommands.h	/^		AddItemCommand(QGI item, Diagram *diagram, const QPointF &pos = QPointF(), QUndoCommand *parent = NULL) :$/;"	f	class:AddItemCommand
AddItemCommand	diagramcommands.h	/^class AddItemCommand : public QUndoCommand {$/;"	c
AddLinkDialog	richtext/richtexteditor.cpp	/^AddLinkDialog::AddLinkDialog(RichTextEditor *editor, QWidget *parent) :$/;"	f	class:qdesigner_internal::AddLinkDialog
AddLinkDialog	richtext/richtexteditor.cpp	/^class AddLinkDialog : public QDialog$/;"	c	namespace:qdesigner_internal	file:
AddLinkDialog	richtext/ui_addlinkdialog.h	/^    class AddLinkDialog: public Ui_AddLinkDialog {};$/;"	c	namespace:Ui
AddLinkDialog	ui/ui_addlinkdialog.h	/^    class AddLinkDialog: public Ui_AddLinkDialog {};$/;"	c	namespace:Ui
AddPartCommand	editor/editorcommands.cpp	/^AddPartCommand::AddPartCommand($/;"	f	class:AddPartCommand
AddPartCommand	editor/editorcommands.h	/^class AddPartCommand : public ElementEditionCommand {$/;"	c
Alert	qetgraphicsitem/conductor.h	/^	enum Highlight { None, Normal, Alert };$/;"	e	enum:Conductor::Highlight
AliasItem	genericpanel.h	/^		AliasItem,$/;"	e	enum:GenericPanel::MetaData
AlignedFreeTerminals	qetgraphicsitem/element.cpp	/^QList <QPair <Terminal *, Terminal *> > Element::AlignedFreeTerminals() const$/;"	f	class:Element
All	diagramcontent.h	/^		All = 255,$/;"	e	enum:DiagramContent::Filter
All	genericpanel.h	/^		All                           = 127$/;"	e	enum:GenericPanel::PanelOption
All	qet.h	/^		All                               =  127$/;"	e	enum:QET::ItemType
AllDiagrams	projectview.h	/^		AllDiagrams = 6$/;"	e	enum:ProjectView::ProjectSaveOption
AllDiagramsButCurrent	projectview.h	/^		AllDiagramsButCurrent = 4,$/;"	e	enum:ProjectView::ProjectSaveOption
AllReport	qetgraphicsitem/element.h	/^				   AllReport = 6,$/;"	e	enum:Element::kind
Allowed	qeticons.cpp	/^		QIcon Allowed;$/;"	m	namespace:QET::Icons	file:
Alphabetical	diagramcontext.h	/^		Alphabetical,$/;"	e	enum:DiagramContext::KeyOrder
AnyConductor	diagramcontent.h	/^		AnyConductor = 112,$/;"	e	enum:DiagramContent::Filter
ApplicationExit	qeticons.cpp	/^		QIcon ApplicationExit;$/;"	m	namespace:QET::Icons	file:
ArcEditor	editor/arceditor.cpp	/^ArcEditor::ArcEditor(QETElementEditor *editor, PartArc *arc, QWidget *parent) :$/;"	f	class:ArcEditor
ArcEditor	editor/arceditor.h	/^class ArcEditor : public ElementItemEditor {$/;"	c
ArrowLeft	qeticons.cpp	/^		QIcon ArrowLeft;$/;"	m	namespace:QET::Icons	file:
ArrowLeftDouble	qeticons.cpp	/^		QIcon ArrowLeftDouble;$/;"	m	namespace:QET::Icons	file:
ArrowRight	qeticons.cpp	/^		QIcon ArrowRight;$/;"	m	namespace:QET::Icons	file:
ArrowRightDouble	qeticons.cpp	/^		QIcon ArrowRightDouble;$/;"	m	namespace:QET::Icons	file:
AutoNum	qeticons.cpp	/^		QIcon AutoNum;$/;"	m	namespace:QET::Icons	file:
AutoNumerotation	autonumerotation.cpp	/^AutoNumerotation::AutoNumerotation(Diagram *d):$/;"	f	class:AutoNumerotation
AutoNumerotation	autonumerotation.h	/^class AutoNumerotation: public QObject$/;"	c
Autoconnect	qeticons.cpp	/^		QIcon Autoconnect;$/;"	m	namespace:QET::Icons	file:
Autonum	ui/projectpropertiesdialog.h	/^			Autonum = 2$/;"	e	enum:ProjectPropertiesDialog::Page
AutonumSelectorWidget	ui/autonumselectorwidget.cpp	/^AutonumSelectorWidget::AutonumSelectorWidget(const QStringList &items, QWidget *parent) :$/;"	f	class:AutonumSelectorWidget
AutonumSelectorWidget	ui/autonumselectorwidget.h	/^class AutonumSelectorWidget : public QWidget$/;"	c
AutonumSelectorWidget	ui/ui_autonumselectorwidget.h	/^    class AutonumSelectorWidget: public Ui_AutonumSelectorWidget {};$/;"	c	namespace:Ui
BASIC_MOVE_ELEMENTS_HANDLER	basicmoveelementshandler.h	19;"	d
BORDERPROPERTIESWIDGET_H	ui/borderpropertieswidget.h	19;"	d
BORDERTITLEBLOCK_H	bordertitleblock.h	19;"	d
BORDER_PROPERTIES_H	borderproperties.h	19;"	d
BasicMoveElementsHandler	basicmoveelementshandler.cpp	/^BasicMoveElementsHandler::BasicMoveElementsHandler(QObject *parent) :$/;"	f	class:BasicMoveElementsHandler
BasicMoveElementsHandler	basicmoveelementshandler.h	/^class BasicMoveElementsHandler : public MoveElementsHandler {$/;"	c
BeginFilter	qet.h	/^		BeginFilter,$/;"	e	enum:QET::Filtering
Behavior	editor/elementscene.h	/^	enum Behavior { Normal, PasteArea };$/;"	g	class:ElementScene
BigWeight	editor/graphicspart/customelementgraphicpart.h	/^		enum LineWeight {NoneWeight, ThinWeight, NormalWeight, UltraWeight, BigWeight};$/;"	e	enum:CustomElementGraphicPart::LineWeight
BlackColor	editor/graphicspart/customelementgraphicpart.h	/^		enum Color {BlackColor, WhiteColor, GreenColor, RedColor, BlueColor};$/;"	e	enum:CustomElementGraphicPart::Color
BlackFilling	editor/graphicspart/customelementgraphicpart.h	/^		enum Filling { NoneFilling, BlackFilling, WhiteFilling, GreenFilling, RedFilling, BlueFilling};$/;"	e	enum:CustomElementGraphicPart::Filling
BlueColor	editor/graphicspart/customelementgraphicpart.h	/^		enum Color {BlackColor, WhiteColor, GreenColor, RedColor, BlueColor};$/;"	e	enum:CustomElementGraphicPart::Color
BlueFilling	editor/graphicspart/customelementgraphicpart.h	/^		enum Filling { NoneFilling, BlackFilling, WhiteFilling, GreenFilling, RedFilling, BlueFilling};$/;"	e	enum:CustomElementGraphicPart::Filling
BorderArea	qet.h	/^		BorderArea,      \/\/\/< Export the diagram along with its border and title block$/;"	e	enum:QET::DiagramArea
BorderOptions	diagram.h	/^		enum BorderOptions { EmptyBorder, TitleBlock, Columns };$/;"	g	class:Diagram
BorderProperties	borderproperties.cpp	/^BorderProperties::BorderProperties() :$/;"	f	class:BorderProperties
BorderProperties	borderproperties.h	/^class BorderProperties {$/;"	c
BorderPropertiesWidget	ui/borderpropertieswidget.cpp	/^BorderPropertiesWidget::BorderPropertiesWidget(const BorderProperties &bp, QWidget *parent) :$/;"	f	class:BorderPropertiesWidget
BorderPropertiesWidget	ui/borderpropertieswidget.h	/^class BorderPropertiesWidget : public QWidget$/;"	c
BorderPropertiesWidget	ui/ui_borderpropertieswidget.h	/^    class BorderPropertiesWidget: public Ui_BorderPropertiesWidget {};$/;"	c	namespace:Ui
BorderTitleBlock	bordertitleblock.cpp	/^BorderTitleBlock::BorderTitleBlock(QObject *parent) :$/;"	f	class:BorderTitleBlock
BorderTitleBlock	bordertitleblock.h	/^class BorderTitleBlock : public QObject {$/;"	c
Both	qet.h	/^		Both = 3        \/\/\/< Invalid segment$/;"	e	enum:QET::ConductorSegmentType
Bottom	properties/xrefproperties.h	/^		Bottom,$/;"	e	enum:XRefProperties::SnapTo
BringForward	editor/editorcommands.h	/^		BringForward, \/\/\/< Bring primitives to the foreground so they have the highest zValue$/;"	e	enum:ChangeZValueCommand::Option
BringForward	qeticons.cpp	/^		QIcon BringForward;$/;"	m	namespace:QET::Icons	file:
CEGP	editor/graphicspart/customelementgraphicpart.h	/^typedef CustomElementGraphicPart CEGP;$/;"	t
CHANGEELEMENTINFORMATIONCOMMAND_H	undocommand/changeelementinformationcommand.h	19;"	d
COL_OFFSET	titleblock/templateview.cpp	28;"	d	file:
COMMENTITEM_H	qetgraphicsitem/commentitem.h	19;"	d
CONDUCTORAUTONUMEROTATION_H	conductorautonumerotation.h	19;"	d
CONDUCTORPROPERTIESDIALOG_H	ui/conductorpropertiesdialog.h	20;"	d
CONDUCTORPROPERTIESWIDGET_H	ui/conductorpropertieswidget.h	19;"	d
CONDUCTOR_H	qetgraphicsitem/conductor.h	19;"	d
CONDUCTOR_PROFILE_H	conductorprofile.h	19;"	d
CONDUCTOR_PROPERTIES_H	conductorproperties.h	19;"	d
CONDUCTOR_SEGMENT_H	conductorsegment.h	19;"	d
CONDUCTOR_SEGMENT_PROFILE_H	conductorsegmentprofile.h	19;"	d
CONDUCTOR_TEXT_ITEM_H	qetgraphicsitem/conductortextitem.h	19;"	d
CONFIGPAGE_H	configpage.h	19;"	d
CONFIG_DIALOG_H	configdialog.h	19;"	d
CONFIG_PAGES_H	configpages.h	19;"	d
CONTACTS	qetgraphicsitem/crossrefitem.h	/^	enum CONTACTS {$/;"	g	class:CrossRefItem
CREATEDXF_H	createdxf.h	19;"	d
CROSSREFITEM_H	qetgraphicsitem/crossrefitem.h	19;"	d
CUSTOM_ELEMENT_EDITOR_H	editor/qetelementeditor.h	19;"	d
CUSTOM_ELEMENT_GRAPHIC_PART_H	editor/graphicspart/customelementgraphicpart.h	19;"	d
CUSTOM_ELEMENT_H	qetgraphicsitem/customelement.h	19;"	d
CUSTOM_ELEMENT_PART_H	editor/graphicspart/customelementpart.h	19;"	d
Cancel	qeticons.cpp	/^		QIcon Cancel;$/;"	m	namespace:QET::Icons	file:
Category	newelementwizard.h	/^	enum WizardState { Category, Filename, Names };$/;"	e	enum:NewElementWizard::WizardState
ChangeBorderCommand	diagramcommands.cpp	/^ChangeBorderCommand::ChangeBorderCommand(Diagram *dia, const BorderProperties &old_bp, const BorderProperties &new_bp, QUndoCommand *parent) :$/;"	f	class:ChangeBorderCommand
ChangeBorderCommand	diagramcommands.h	/^class ChangeBorderCommand : public QUndoCommand {$/;"	c
ChangeConductorCommand	diagramcommands.cpp	/^ChangeConductorCommand::ChangeConductorCommand($/;"	f	class:ChangeConductorCommand
ChangeConductorCommand	diagramcommands.h	/^class ChangeConductorCommand : public QUndoCommand {$/;"	c
ChangeConductorPropertiesCommand	diagramcommands.cpp	/^ChangeConductorPropertiesCommand::ChangeConductorPropertiesCommand(Conductor *c, QUndoCommand *parent) :$/;"	f	class:ChangeConductorPropertiesCommand
ChangeConductorPropertiesCommand	diagramcommands.h	/^class ChangeConductorPropertiesCommand : public QUndoCommand {$/;"	c
ChangeDiagramTextCommand	diagramcommands.cpp	/^ChangeDiagramTextCommand::ChangeDiagramTextCommand($/;"	f	class:ChangeDiagramTextCommand
ChangeDiagramTextCommand	diagramcommands.h	/^class ChangeDiagramTextCommand : public QUndoCommand {$/;"	c
ChangeElementInformationCommand	undocommand/changeelementinformationcommand.cpp	/^ChangeElementInformationCommand::ChangeElementInformationCommand(Element *elmt, DiagramContext &old_info, DiagramContext &new_info, QUndoCommand *parent) :$/;"	f	class:ChangeElementInformationCommand
ChangeElementInformationCommand	undocommand/changeelementinformationcommand.h	/^class ChangeElementInformationCommand : public QUndoCommand$/;"	c
ChangeInformationsCommand	editor/editorcommands.cpp	/^ChangeInformationsCommand::ChangeInformationsCommand(ElementScene *elmt, const QString &old_infos, const QString &new_infos, QUndoCommand *parent) :$/;"	f	class:ChangeInformationsCommand
ChangeInformationsCommand	editor/editorcommands.h	/^class ChangeInformationsCommand : public ElementEditionCommand {$/;"	c
ChangeInnerPoints	qet.h	/^		ChangeInnerPoints = -4,$/;"	e	enum:QET::OperationAreas
ChangeNamesCommand	editor/editorcommands.cpp	/^ChangeNamesCommand::ChangeNamesCommand($/;"	f	class:ChangeNamesCommand
ChangeNamesCommand	editor/editorcommands.h	/^class ChangeNamesCommand : public ElementEditionCommand {$/;"	c
ChangePartCommand	editor/editorcommands.cpp	/^ChangePartCommand::ChangePartCommand($/;"	f	class:ChangePartCommand
ChangePartCommand	editor/editorcommands.h	/^class ChangePartCommand : public ElementEditionCommand {$/;"	c
ChangePolygonPointsCommand	editor/editorcommands.cpp	/^ChangePolygonPointsCommand::ChangePolygonPointsCommand($/;"	f	class:ChangePolygonPointsCommand
ChangePolygonPointsCommand	editor/editorcommands.h	/^class ChangePolygonPointsCommand : public ElementEditionCommand {$/;"	c
ChangePropertiesCommand	editor/editorcommands.cpp	/^ChangePropertiesCommand::ChangePropertiesCommand(ElementScene *scene, QString type, DiagramContext info, QUndoCommand *parent) :$/;"	f	class:ChangePropertiesCommand
ChangePropertiesCommand	editor/editorcommands.h	/^class ChangePropertiesCommand : public ElementEditionCommand {$/;"	c
ChangeSeveralConductorsPropertiesCommand	diagramcommands.cpp	/^ChangeSeveralConductorsPropertiesCommand::ChangeSeveralConductorsPropertiesCommand(QList<Conductor *>c, QUndoCommand *parent) :$/;"	f	class:ChangeSeveralConductorsPropertiesCommand
ChangeSeveralConductorsPropertiesCommand	diagramcommands.h	/^class ChangeSeveralConductorsPropertiesCommand : public QUndoCommand {$/;"	c
ChangeShapeStyleCommand	diagramcommands.cpp	/^ChangeShapeStyleCommand::ChangeShapeStyleCommand(QetShapeItem *shape, Qt::PenStyle &old_, Qt::PenStyle &new_, QUndoCommand *parent):$/;"	f	class:ChangeShapeStyleCommand
ChangeShapeStyleCommand	diagramcommands.h	/^class ChangeShapeStyleCommand : public QUndoCommand {$/;"	c
ChangeTemplateInformationsCommand	titleblock/templatecommands.cpp	/^ChangeTemplateInformationsCommand::ChangeTemplateInformationsCommand(TitleBlockTemplate *tbt, const QString &old_info, const QString &new_info, QUndoCommand *parent) :$/;"	f	class:ChangeTemplateInformationsCommand
ChangeTemplateInformationsCommand	titleblock/templatecommands.h	/^class ChangeTemplateInformationsCommand : public QUndoCommand {$/;"	c
ChangeTitleBlockCommand	diagramcommands.cpp	/^ChangeTitleBlockCommand::ChangeTitleBlockCommand($/;"	f	class:ChangeTitleBlockCommand
ChangeTitleBlockCommand	diagramcommands.h	/^class ChangeTitleBlockCommand : public QUndoCommand {$/;"	c
ChangeZValueCommand	editor/editorcommands.cpp	/^ChangeZValueCommand::ChangeZValueCommand($/;"	f	class:ChangeZValueCommand
ChangeZValueCommand	editor/editorcommands.h	/^class ChangeZValueCommand : public ElementEditionCommand {$/;"	c
Circle	qet.h	/^		Circle,    \/\/\/< Circle$/;"	e	enum:Qet::EndType
Clean	richtext/richtexteditor_p.h	/^    enum State { Clean, RichTextChanged, SourceChanged };$/;"	e	enum:qdesigner_internal::RichTextEditorDialog::State
Color	editor/graphicspart/customelementgraphicpart.h	/^		enum Color {BlackColor, WhiteColor, GreenColor, RedColor, BlueColor};$/;"	g	class:CustomElementGraphicPart
ColorAction	richtext/richtexteditor.cpp	/^ColorAction::ColorAction(QObject *parent):$/;"	f	class:qdesigner_internal::ColorAction
ColorAction	richtext/richtexteditor.cpp	/^class ColorAction : public QAction$/;"	c	namespace:qdesigner_internal	file:
Columns	diagram.h	/^		enum BorderOptions { EmptyBorder, TitleBlock, Columns };$/;"	e	enum:Diagram::BorderOptions
CommentItem	qetgraphicsitem/commentitem.cpp	/^CommentItem::CommentItem(Element *elmt) :$/;"	f	class:CommentItem
CommentItem	qetgraphicsitem/commentitem.h	/^class CommentItem : public QGraphicsObject$/;"	c
Conductor	qetgraphicsitem/conductor.cpp	/^Conductor::Conductor(Terminal *p1, Terminal* p2) :$/;"	f	class:Conductor
Conductor	qetgraphicsitem/conductor.h	/^class Conductor : public QObject, public QGraphicsPathItem {$/;"	c
Conductor	qeticons.cpp	/^		QIcon Conductor;$/;"	m	namespace:QET::Icons	file:
ConductorAutoNumerotation	conductorautonumerotation.cpp	/^ConductorAutoNumerotation::ConductorAutoNumerotation(Conductor *conductor, Diagram *diagram, QUndoCommand *parent_undo) :$/;"	f	class:ConductorAutoNumerotation
ConductorAutoNumerotation	conductorautonumerotation.h	/^class ConductorAutoNumerotation$/;"	c
ConductorBend	qetgraphicsitem/conductor.h	/^typedef QPair<QPointF, Qt::Corner> ConductorBend;$/;"	t
ConductorProfile	conductorprofile.cpp	/^ConductorProfile::ConductorProfile() {$/;"	f	class:ConductorProfile
ConductorProfile	conductorprofile.cpp	/^ConductorProfile::ConductorProfile(Conductor *conductor) {$/;"	f	class:ConductorProfile
ConductorProfile	conductorprofile.cpp	/^ConductorProfile::ConductorProfile(const ConductorProfile &c) {$/;"	f	class:ConductorProfile
ConductorProfile	conductorprofile.h	/^class ConductorProfile {$/;"	c
ConductorProfilesGroup	qetgraphicsitem/conductor.h	/^typedef QHash<Qt::Corner, ConductorProfile> ConductorProfilesGroup;$/;"	t
ConductorProperties	conductorproperties.cpp	/^ConductorProperties::ConductorProperties() :$/;"	f	class:ConductorProperties
ConductorProperties	conductorproperties.h	/^class ConductorProperties {$/;"	c
ConductorPropertiesDialog	ui/conductorpropertiesdialog.cpp	/^ConductorPropertiesDialog::ConductorPropertiesDialog(Conductor *conductor, QWidget *parent) :$/;"	f	class:ConductorPropertiesDialog
ConductorPropertiesDialog	ui/conductorpropertiesdialog.h	/^class ConductorPropertiesDialog : public QDialog$/;"	c
ConductorPropertiesDialog	ui/ui_conductorpropertiesdialog.h	/^    class ConductorPropertiesDialog: public Ui_ConductorPropertiesDialog {};$/;"	c	namespace:Ui
ConductorPropertiesWidget	ui/conductorpropertieswidget.cpp	/^ConductorPropertiesWidget::ConductorPropertiesWidget(QWidget *parent) :$/;"	f	class:ConductorPropertiesWidget
ConductorPropertiesWidget	ui/conductorpropertieswidget.cpp	/^ConductorPropertiesWidget::ConductorPropertiesWidget(const ConductorProperties &properties, QWidget *parent) :$/;"	f	class:ConductorPropertiesWidget
ConductorPropertiesWidget	ui/conductorpropertieswidget.h	/^class ConductorPropertiesWidget : public QWidget$/;"	c
ConductorPropertiesWidget	ui/ui_conductorpropertieswidget.h	/^    class ConductorPropertiesWidget: public Ui_ConductorPropertiesWidget {};$/;"	c	namespace:Ui
ConductorSegment	conductorsegment.cpp	/^ConductorSegment::ConductorSegment($/;"	f	class:ConductorSegment
ConductorSegment	conductorsegment.h	/^class ConductorSegment {$/;"	c
ConductorSegmentProfile	conductorsegmentprofile.h	/^	ConductorSegmentProfile(ConductorSegment *segment) :$/;"	f	class:ConductorSegmentProfile
ConductorSegmentProfile	conductorsegmentprofile.h	/^	ConductorSegmentProfile(qreal l, bool ori = true) :$/;"	f	class:ConductorSegmentProfile
ConductorSegmentProfile	conductorsegmentprofile.h	/^class ConductorSegmentProfile {$/;"	c
ConductorSegmentType	qet.h	/^	enum ConductorSegmentType {$/;"	g	namespace:QET
ConductorSettings	qeticons.cpp	/^		QIcon ConductorSettings;$/;"	m	namespace:QET::Icons	file:
ConductorTextItem	qetgraphicsitem/conductortextitem.cpp	/^ConductorTextItem::ConductorTextItem(Conductor *parent_conductor) :$/;"	f	class:ConductorTextItem
ConductorTextItem	qetgraphicsitem/conductortextitem.cpp	/^ConductorTextItem::ConductorTextItem(const QString &text, Conductor *parent_conductor) :$/;"	f	class:ConductorTextItem
ConductorTextItem	qetgraphicsitem/conductortextitem.h	/^class ConductorTextItem : public DiagramTextItem {$/;"	c
ConductorType	conductorproperties.h	/^	enum ConductorType { Single, Multi };$/;"	g	class:ConductorProperties
Conductors	diagram.h	/^		enum NumerotationType { Conductors };$/;"	e	enum:Diagram::NumerotationType
ConductorsToMove	diagramcontent.h	/^		ConductorsToMove = 16,$/;"	e	enum:DiagramContent::Filter
ConductorsToUpdate	diagramcontent.h	/^		ConductorsToUpdate = 32,$/;"	e	enum:DiagramContent::Filter
ConfigDialog	configdialog.cpp	/^ConfigDialog::ConfigDialog(QWidget *parent) : QDialog(parent) {$/;"	f	class:ConfigDialog
ConfigDialog	configdialog.h	/^class ConfigDialog : public QDialog {$/;"	c
ConfigPage	configpage.h	/^	ConfigPage(QWidget *parent) : QWidget(parent) {};$/;"	f	class:ConfigPage
ConfigPage	configpage.h	/^class ConfigPage : public QWidget {$/;"	c
Configure	qeticons.cpp	/^		QIcon Configure;$/;"	m	namespace:QET::Icons	file:
ConfigureToolbars	qeticons.cpp	/^		QIcon ConfigureToolbars;$/;"	m	namespace:QET::Icons	file:
Contacts	properties/xrefproperties.h	/^		Contacts$/;"	e	enum:XRefProperties::DisplayHas
CopyFile	qeticons.cpp	/^		QIcon CopyFile;$/;"	m	namespace:QET::Icons	file:
Createdxf	createdxf.cpp	/^Createdxf::Createdxf()$/;"	f	class:Createdxf
Createdxf	createdxf.h	/^class Createdxf$/;"	c
Cross	properties/xrefproperties.h	/^		Cross,$/;"	e	enum:XRefProperties::DisplayHas
CrossRefItem	qetgraphicsitem/crossrefitem.cpp	/^CrossRefItem::CrossRefItem(Element *elmt) :$/;"	f	class:CrossRefItem
CrossRefItem	qetgraphicsitem/crossrefitem.h	/^class CrossRefItem : public QGraphicsObject$/;"	c
CurrentDate	titleblockproperties.h	/^		CurrentDate   \/\/\/< use the current date$/;"	e	enum:TitleBlockProperties::DateManagement
CurrentDiagram	projectview.h	/^		CurrentDiagram = 2,$/;"	e	enum:ProjectView::ProjectSaveOption
CustomElement	qetgraphicsitem/customelement.cpp	/^CustomElement::CustomElement(const ElementsLocation &location, QGraphicsItem *qgi, int *state) :$/;"	f	class:CustomElement
CustomElement	qetgraphicsitem/customelement.h	/^class CustomElement : public FixedElement {$/;"	c
CustomElementGraphicPart	editor/graphicspart/customelementgraphicpart.cpp	/^CustomElementGraphicPart::CustomElementGraphicPart(QETElementEditor *editor, QGraphicsItem *parent) :$/;"	f	class:CustomElementGraphicPart
CustomElementGraphicPart	editor/graphicspart/customelementgraphicpart.h	/^class CustomElementGraphicPart : public QGraphicsObject, public CustomElementPart$/;"	c
CustomElementPart	editor/graphicspart/customelementpart.h	/^	CustomElementPart(QETElementEditor *editor) : element_editor(editor) {}$/;"	f	class:CustomElementPart
CustomElementPart	editor/graphicspart/customelementpart.h	/^class CustomElementPart {$/;"	c
CutDiagramCommand	diagramcommands.cpp	/^CutDiagramCommand::CutDiagramCommand($/;"	f	class:CutDiagramCommand
CutDiagramCommand	diagramcommands.h	/^class CutDiagramCommand : public DeleteElementsCommand {$/;"	c
CutPartsCommand	editor/editorcommands.cpp	/^CutPartsCommand::CutPartsCommand($/;"	f	class:CutPartsCommand
CutPartsCommand	editor/editorcommands.h	/^class CutPartsCommand : public DeletePartsCommand {$/;"	c
CutTemplateCellsCommand	titleblock/templatecommands.cpp	/^CutTemplateCellsCommand::CutTemplateCellsCommand(TitleBlockTemplate *tb_template, QUndoCommand *parent) :$/;"	f	class:CutTemplateCellsCommand
CutTemplateCellsCommand	titleblock/templatecommands.h	/^class CutTemplateCellsCommand : public TitleBlockTemplateCommand {$/;"	c
DEFAULT_COLS_HELPER_CELLS_HEIGHT	titleblock/templateview.cpp	31;"	d	file:
DEFAULT_PREVIEW_HELPER_CELL_HEIGHT	titleblock/templateview.cpp	30;"	d	file:
DEFAULT_PREVIEW_WIDTH	titleblock/templateview.cpp	29;"	d	file:
DEFAULT_ROWS_HELPER_CELLS_WIDTH	titleblock/templateview.cpp	32;"	d	file:
DIAGRAMCONTEXTWIDGET_H	diagramcontextwidget.h	19;"	d
DIAGRAMFOLIOLIST_H	diagramfoliolist.h	19;"	d
DIAGRAMPROPERTIESDIALOG_H	ui/diagrampropertiesdialog.h	19;"	d
DIAGRAMSELECTION_H	ui/diagramselection.h	19;"	d
DIAGRAMS_CHOOSER_H	diagramschooser.h	19;"	d
DIAGRAMVIEW_H	diagramview.h	19;"	d
DIAGRAM_COMMANDS_H	diagramcommands.h	19;"	d
DIAGRAM_CONTENT_H	diagramcontent.h	19;"	d
DIAGRAM_CONTEXT_H	diagramcontext.h	19;"	d
DIAGRAM_H	diagram.h	19;"	d
DIAGRAM_IMAGE_ITEM_H	qetgraphicsitem/diagramimageitem.h	19;"	d
DIAGRAM_POSITION_H	diagramposition.h	19;"	d
DIAGRAM_PRINT_DIALOG_H	diagramprintdialog.h	19;"	d
DIAGRAM_TEXT_ITEM_H	qetgraphicsitem/diagramtextitem.h	19;"	d
DIALOGAUTONUM_H	ui/dialogautonum.h	19;"	d
DIALOGWAITING_H	ui/dialogwaiting.h	20;"	d
DVEVENTADDIMAGE_H	dvevent/dveventaddimage.h	19;"	d
DVEVENTADDSHAPE_H	dvevent/dveventaddshape.h	19;"	d
DVEVENTADDTEXT_H	dvevent/dveventaddtext.h	19;"	d
DVEVENTINTERFACE_H	dvevent/dveventinterface.h	19;"	d
DVEventAddImage	dvevent/dveventaddimage.cpp	/^DVEventAddImage::DVEventAddImage(DiagramView *dv) :$/;"	f	class:DVEventAddImage
DVEventAddImage	dvevent/dveventaddimage.h	/^class DVEventAddImage : public DVEventInterface$/;"	c
DVEventAddShape	dvevent/dveventaddshape.cpp	/^DVEventAddShape::DVEventAddShape(DiagramView *dv, QetShapeItem::ShapeType shape_type) :$/;"	f	class:DVEventAddShape
DVEventAddShape	dvevent/dveventaddshape.h	/^class DVEventAddShape : public DVEventInterface$/;"	c
DVEventAddText	dvevent/dveventaddtext.cpp	/^DVEventAddText::DVEventAddText(DiagramView *dv) :$/;"	f	class:DVEventAddText
DVEventAddText	dvevent/dveventaddtext.h	/^class DVEventAddText : public DVEventInterface$/;"	c
DVEventInterface	dvevent/dveventinterface.cpp	/^DVEventInterface::DVEventInterface(DiagramView *dv) :$/;"	f	class:DVEventInterface
DVEventInterface	dvevent/dveventinterface.h	/^class DVEventInterface$/;"	c
DashdottedStyle	editor/graphicspart/customelementgraphicpart.h	/^		enum LineStyle {NormalStyle, DashedStyle, DottedStyle, DashdottedStyle};$/;"	e	enum:CustomElementGraphicPart::LineStyle
DashedStyle	editor/graphicspart/customelementgraphicpart.h	/^		enum LineStyle {NormalStyle, DashedStyle, DottedStyle, DashdottedStyle};$/;"	e	enum:CustomElementGraphicPart::LineStyle
DateManagement	titleblockproperties.h	/^	enum DateManagement {$/;"	g	class:TitleBlockProperties
DecreasingLength	diagramcontext.h	/^		DecreasingLength$/;"	e	enum:DiagramContext::KeyOrder
DefaultConductor	qeticons.cpp	/^		QIcon DefaultConductor;$/;"	m	namespace:QET::Icons	file:
Delay	qetgraphicsitem/crossrefitem.h	/^		Delay    = 48$/;"	e	enum:CrossRefItem::CONTACTS
DelayOff	qetgraphicsitem/crossrefitem.h	/^		DelayOff = 32,$/;"	e	enum:CrossRefItem::CONTACTS
DelayOn	qetgraphicsitem/crossrefitem.h	/^		DelayOn  = 16,$/;"	e	enum:CrossRefItem::CONTACTS
DeleteElementsCommand	diagramcommands.cpp	/^DeleteElementsCommand::DeleteElementsCommand($/;"	f	class:DeleteElementsCommand
DeleteElementsCommand	diagramcommands.h	/^class DeleteElementsCommand : public QUndoCommand {$/;"	c
DeletePartsCommand	editor/editorcommands.cpp	/^DeletePartsCommand::DeletePartsCommand($/;"	f	class:DeletePartsCommand
DeletePartsCommand	editor/editorcommands.h	/^class DeletePartsCommand : public ElementEditionCommand {$/;"	c
Diagram	diagram.cpp	/^Diagram::Diagram(QETProject *project) :$/;"	f	class:Diagram
Diagram	diagram.h	/^class Diagram : public QGraphicsScene$/;"	c
Diagram	qet.h	/^		Diagram                           =   32,$/;"	e	enum:QET::ItemType
Diagram	qeticons.cpp	/^		QIcon Diagram;$/;"	m	namespace:QET::Icons	file:
Diagram	ui/projectpropertiesdialog.h	/^			Diagram = 1,$/;"	e	enum:ProjectPropertiesDialog::Page
DiagramAdd	qeticons.cpp	/^		QIcon DiagramAdd;$/;"	m	namespace:QET::Icons	file:
DiagramArea	qet.h	/^	enum DiagramArea {$/;"	g	namespace:QET
DiagramContent	diagramcontent.cpp	/^DiagramContent::DiagramContent() {$/;"	f	class:DiagramContent
DiagramContent	diagramcontent.cpp	/^DiagramContent::DiagramContent(const DiagramContent &other) :$/;"	f	class:DiagramContent
DiagramContent	diagramcontent.h	/^class DiagramContent {$/;"	c
DiagramContext	diagramcontext.h	/^class DiagramContext {$/;"	c
DiagramContextWidget	diagramcontextwidget.cpp	/^DiagramContextWidget::DiagramContextWidget(QWidget *parent) :$/;"	f	class:DiagramContextWidget
DiagramContextWidget	diagramcontextwidget.h	/^class DiagramContextWidget : public QWidget {$/;"	c
DiagramDelete	qeticons.cpp	/^		QIcon DiagramDelete;$/;"	m	namespace:QET::Icons	file:
DiagramFolioList	diagramfoliolist.cpp	/^DiagramFolioList::DiagramFolioList( QETProject *project) :$/;"	f	class:DiagramFolioList
DiagramFolioList	diagramfoliolist.h	/^class DiagramFolioList : public Diagram$/;"	c
DiagramImageItem	qetgraphicsitem/diagramimageitem.cpp	/^DiagramImageItem::DiagramImageItem(QetGraphicsItem *parent_item):$/;"	f	class:DiagramImageItem
DiagramImageItem	qetgraphicsitem/diagramimageitem.cpp	/^DiagramImageItem::DiagramImageItem(const QPixmap &pixmap, QetGraphicsItem *parent_item):$/;"	f	class:DiagramImageItem
DiagramImageItem	qetgraphicsitem/diagramimageitem.h	/^class DiagramImageItem : public QetGraphicsItem {$/;"	c
DiagramPosition	diagramposition.cpp	/^DiagramPosition::DiagramPosition(const QString &letter, unsigned int number) {$/;"	f	class:DiagramPosition
DiagramPosition	diagramposition.h	/^class DiagramPosition {$/;"	c
DiagramPrintDialog	diagramprintdialog.cpp	/^DiagramPrintDialog::DiagramPrintDialog(QETProject *project, QWidget *parent) :$/;"	f	class:DiagramPrintDialog
DiagramPrintDialog	diagramprintdialog.h	/^class DiagramPrintDialog : public QWidget {$/;"	c
DiagramPropertiesDialog	ui/diagrampropertiesdialog.cpp	/^DiagramPropertiesDialog::DiagramPropertiesDialog(Diagram *diagram, QWidget *parent) :$/;"	f	class:DiagramPropertiesDialog
DiagramPropertiesDialog	ui/diagrampropertiesdialog.h	/^class DiagramPropertiesDialog : public QDialog {$/;"	c
DiagramTextItem	qetgraphicsitem/diagramtextitem.cpp	/^DiagramTextItem::DiagramTextItem(QGraphicsItem *parent) :$/;"	f	class:DiagramTextItem
DiagramTextItem	qetgraphicsitem/diagramtextitem.cpp	/^DiagramTextItem::DiagramTextItem(const QString &text, QGraphicsItem *parent) :$/;"	f	class:DiagramTextItem
DiagramTextItem	qetgraphicsitem/diagramtextitem.h	/^class DiagramTextItem : public QGraphicsTextItem {$/;"	c
DiagramView	diagramview.cpp	/^DiagramView::DiagramView(Diagram *diagram, QWidget *parent) :$/;"	f	class:DiagramView
DiagramView	diagramview.h	/^class DiagramView : public QGraphicsView {$/;"	c
DiagramsChooser	diagramschooser.cpp	/^DiagramsChooser::DiagramsChooser(QETProject *project, QWidget *parent) :$/;"	f	class:DiagramsChooser
DiagramsChooser	diagramschooser.h	/^class DiagramsChooser : public QScrollArea {$/;"	c
DialogAutoNum	ui/dialogautonum.cpp	/^DialogAutoNum::DialogAutoNum(Diagram *dg, QWidget *parent) :$/;"	f	class:DialogAutoNum
DialogAutoNum	ui/dialogautonum.h	/^class DialogAutoNum : public QDialog$/;"	c
DialogAutoNum	ui/ui_dialogautonum.h	/^    class DialogAutoNum: public Ui_DialogAutoNum {};$/;"	c	namespace:Ui
DialogCancel	qeticons.cpp	/^		QIcon DialogCancel;$/;"	m	namespace:QET::Icons	file:
DialogInformation	qeticons.cpp	/^		QIcon DialogInformation;$/;"	m	namespace:QET::Icons	file:
DialogOk	qeticons.cpp	/^		QIcon DialogOk;$/;"	m	namespace:QET::Icons	file:
DialogWaiting	ui/dialogwaiting.cpp	/^DialogWaiting::DialogWaiting(QWidget *parent) :$/;"	f	class:DialogWaiting
DialogWaiting	ui/dialogwaiting.h	/^class DialogWaiting : public QDialog$/;"	c
DialogWaiting	ui/ui_dialogwaiting.h	/^    class DialogWaiting: public Ui_DialogWaiting {};$/;"	c	namespace:Ui
Diamond	qet.h	/^		Diamond    \/\/\/< Diamond$/;"	e	enum:Qet::EndType
Disabled	titleblockcell.h	/^		Disabled,     \/\/\/< the cell span parameters should not applied at all$/;"	e	enum:TitleBlockCell::TemplateCellSpanState
DisplayElementsPreview	genericpanel.h	/^		DisplayElementsPreview        =  64,$/;"	e	enum:GenericPanel::PanelOption
DisplayHas	properties/xrefproperties.h	/^	enum DisplayHas {$/;"	g	class:XRefProperties
DocumentClose	qeticons.cpp	/^		QIcon DocumentClose;$/;"	m	namespace:QET::Icons	file:
DocumentExport	qeticons.cpp	/^		QIcon DocumentExport;$/;"	m	namespace:QET::Icons	file:
DocumentImport	qeticons.cpp	/^		QIcon DocumentImport;$/;"	m	namespace:QET::Icons	file:
DocumentNew	qeticons.cpp	/^		QIcon DocumentNew;$/;"	m	namespace:QET::Icons	file:
DocumentOpen	qeticons.cpp	/^		QIcon DocumentOpen;$/;"	m	namespace:QET::Icons	file:
DocumentOpenRecent	qeticons.cpp	/^		QIcon DocumentOpenRecent;$/;"	m	namespace:QET::Icons	file:
DocumentPrint	qeticons.cpp	/^		QIcon DocumentPrint;$/;"	m	namespace:QET::Icons	file:
DocumentPrintFrame	qeticons.cpp	/^		QIcon DocumentPrintFrame;$/;"	m	namespace:QET::Icons	file:
DocumentSave	qeticons.cpp	/^		QIcon DocumentSave;$/;"	m	namespace:QET::Icons	file:
DocumentSaveAll	qeticons.cpp	/^		QIcon DocumentSaveAll;$/;"	m	namespace:QET::Icons	file:
DocumentSaveAs	qeticons.cpp	/^		QIcon DocumentSaveAs;$/;"	m	namespace:QET::Icons	file:
DottedStyle	editor/graphicspart/customelementgraphicpart.h	/^		enum LineStyle {NormalStyle, DashedStyle, DottedStyle, DashdottedStyle};$/;"	e	enum:CustomElementGraphicPart::LineStyle
EDITOR_COMMANDS_H	editor/editorcommands.h	19;"	d
ELEMENTFACTORY_H	factory/elementfactory.h	19;"	d
ELEMENTFIXE_H	qetgraphicsitem/fixedelement.h	19;"	d
ELEMENTINFOPARTWIDGET_H	ui/elementinfopartwidget.h	19;"	d
ELEMENTINFOWIDGET_H	ui/elementinfowidget.h	19;"	d
ELEMENTPRIMITIVEDECORATOR_H	editor/elementprimitivedecorator.h	19;"	d
ELEMENTPROPERTIESEDITORWIDGET_H	editor/ui/elementpropertieseditorwidget.h	19;"	d
ELEMENTPROPERTIESWIDGET_H	ui/elementpropertieswidget.h	19;"	d
ELEMENTPROVIDER_H	elementprovider.h	19;"	d
ELEMENTSELECTORWIDGET_H	ui/elementselectorwidget.h	19;"	d
ELEMENTS_CATEGORIES_LIST_H	elementscategorieslist.h	19;"	d
ELEMENTS_CATEGORIES_WIDGET_H	elementscategorieswidget.h	19;"	d
ELEMENTS_CATEGORY_DELETER_H	elementscategorydeleter.h	19;"	d
ELEMENTS_CATEGORY_EDITOR_H	elementscategoryeditor.h	19;"	d
ELEMENTS_CATEGORY_H	elementscategory.h	19;"	d
ELEMENTS_COLLECTION_CACHE_H	elementscollectioncache.h	19;"	d
ELEMENTS_COLLECTION_H	elementscollection.h	19;"	d
ELEMENTS_COLLECTION_ITEM_H	elementscollectionitem.h	19;"	d
ELEMENTS_LOCATION_H	elementslocation.h	19;"	d
ELEMENTS_MOVER_H	elementsmover.h	19;"	d
ELEMENTS_PANEL_WIDGET_H	elementspanelwidget.h	19;"	d
ELEMENT_CONTENT_H	editor/elementcontent.h	19;"	d
ELEMENT_DEFINITION_H	elementdefinition.h	19;"	d
ELEMENT_DELETER_H	elementdeleter.h	19;"	d
ELEMENT_DIALOG_H	elementdialog.h	19;"	d
ELEMENT_H	qetgraphicsitem/element.h	19;"	d
ELEMENT_ITEM_EDITOR_H	editor/elementitemeditor.h	19;"	d
ELEMENT_SCENE_H	editor/elementscene.h	19;"	d
ELEMENT_TEXTS_MOVER_H	elementtextsmover.h	19;"	d
ELEMENT_TEXT_ITEM_H	qetgraphicsitem/elementtextitem.h	19;"	d
ELEMENT_VIEW_H	editor/elementview.h	19;"	d
ELLIPSE_EDITOR_H	editor/ellipseeditor.h	19;"	d
ENABLE_PANEL_DND_CHECKS	elementspanel.cpp	40;"	d	file:
ENABLE_PANEL_WIDGET_DND_CHECKS	elementspanelwidget.cpp	41;"	d	file:
EPS	qeticons.cpp	/^		QIcon EPS;$/;"	m	namespace:QET::Icons	file:
ESEVENTADDARC_H	editor/esevent/eseventaddarc.h	19;"	d
ESEVENTADDELLIPSE_H	editor/esevent/eseventaddellipse.h	19;"	d
ESEVENTADDLINE_H	editor/esevent/eseventaddline.h	19;"	d
ESEVENTADDPOLYGON_H	editor/esevent/eseventaddpolygon.h	19;"	d
ESEVENTADDRECT_H	editor/esevent/eseventaddrect.h	19;"	d
ESEVENTADDTERMINAL_H	editor/esevent/eseventaddterminal.h	19;"	d
ESEVENTADDTEXTFIELD_H	editor/esevent/eseventaddtextfield.h	19;"	d
ESEVENTADDTEXT_H	editor/esevent/eseventaddtext.h	19;"	d
ESEVENTINTERFACE_H	editor/esevent/eseventinterface.h	19;"	d
ESEventAddArc	editor/esevent/eseventaddarc.cpp	/^ESEventAddArc::ESEventAddArc(ElementScene *scene) :$/;"	f	class:ESEventAddArc
ESEventAddArc	editor/esevent/eseventaddarc.h	/^class ESEventAddArc : public ESEventInterface$/;"	c
ESEventAddEllipse	editor/esevent/eseventaddellipse.cpp	/^ESEventAddEllipse::ESEventAddEllipse(ElementScene *scene) :$/;"	f	class:ESEventAddEllipse
ESEventAddEllipse	editor/esevent/eseventaddellipse.h	/^class ESEventAddEllipse : public ESEventInterface$/;"	c
ESEventAddLine	editor/esevent/eseventaddline.cpp	/^ESEventAddLine::ESEventAddLine(ElementScene *scene) :$/;"	f	class:ESEventAddLine
ESEventAddLine	editor/esevent/eseventaddline.h	/^class ESEventAddLine : public ESEventInterface$/;"	c
ESEventAddPolygon	editor/esevent/eseventaddpolygon.cpp	/^ESEventAddPolygon::ESEventAddPolygon(ElementScene *scene) :$/;"	f	class:ESEventAddPolygon
ESEventAddPolygon	editor/esevent/eseventaddpolygon.h	/^class ESEventAddPolygon : public ESEventInterface$/;"	c
ESEventAddRect	editor/esevent/eseventaddrect.cpp	/^ESEventAddRect::ESEventAddRect(ElementScene *scene) :$/;"	f	class:ESEventAddRect
ESEventAddRect	editor/esevent/eseventaddrect.h	/^class ESEventAddRect : public ESEventInterface$/;"	c
ESEventAddTerminal	editor/esevent/eseventaddterminal.cpp	/^ESEventAddTerminal::ESEventAddTerminal(ElementScene *scene) :$/;"	f	class:ESEventAddTerminal
ESEventAddTerminal	editor/esevent/eseventaddterminal.h	/^class ESEventAddTerminal : public ESEventInterface$/;"	c
ESEventAddText	editor/esevent/eseventaddtext.cpp	/^ESEventAddText::ESEventAddText(ElementScene *scene) :$/;"	f	class:ESEventAddText
ESEventAddText	editor/esevent/eseventaddtext.h	/^class ESEventAddText : public ESEventInterface$/;"	c
ESEventAddTextField	editor/esevent/eseventaddtextfield.cpp	/^ESEventAddTextField::ESEventAddTextField(ElementScene *scene) :$/;"	f	class:ESEventAddTextField
ESEventAddTextField	editor/esevent/eseventaddtextfield.h	/^class ESEventAddTextField : public ESEventInterface$/;"	c
ESEventInterface	editor/esevent/eseventinterface.cpp	/^ESEventInterface::ESEventInterface(ElementScene *scene) :$/;"	f	class:ESEventInterface
ESEventInterface	editor/esevent/eseventinterface.h	/^class ESEventInterface$/;"	c
EXPORTDIALOG_H	exportdialog.h	19;"	d
EXPORT_PROPERTIES_H	exportproperties.h	19;"	d
EXPORT_PROPERTIES_WIDGET_H	exportpropertieswidget.h	19;"	d
East	qet.h	/^					  East,$/;"	e	enum:Qet::Orientation
East	qeticons.cpp	/^		QIcon East;$/;"	m	namespace:QET::Icons	file:
EditClear	qeticons.cpp	/^		QIcon EditClear;$/;"	m	namespace:QET::Icons	file:
EditClearLocationBar	qeticons.cpp	/^		QIcon EditClearLocationBar;$/;"	m	namespace:QET::Icons	file:
EditCopy	qeticons.cpp	/^		QIcon EditCopy;$/;"	m	namespace:QET::Icons	file:
EditCut	qeticons.cpp	/^		QIcon EditCut;$/;"	m	namespace:QET::Icons	file:
EditDelete	qeticons.cpp	/^		QIcon EditDelete;$/;"	m	namespace:QET::Icons	file:
EditPaste	qeticons.cpp	/^		QIcon EditPaste;$/;"	m	namespace:QET::Icons	file:
EditRedo	qeticons.cpp	/^		QIcon EditRedo;$/;"	m	namespace:QET::Icons	file:
EditRename	qeticons.cpp	/^		QIcon EditRename;$/;"	m	namespace:QET::Icons	file:
EditSelectAll	qeticons.cpp	/^		QIcon EditSelectAll;$/;"	m	namespace:QET::Icons	file:
EditTableCellMerge	qeticons.cpp	/^		QIcon EditTableCellMerge;$/;"	m	namespace:QET::Icons	file:
EditTableCellSplit	qeticons.cpp	/^		QIcon EditTableCellSplit;$/;"	m	namespace:QET::Icons	file:
EditTableDeleteColumn	qeticons.cpp	/^		QIcon EditTableDeleteColumn;$/;"	m	namespace:QET::Icons	file:
EditTableDeleteRow	qeticons.cpp	/^		QIcon EditTableDeleteRow;$/;"	m	namespace:QET::Icons	file:
EditTableInsertColumnLeft	qeticons.cpp	/^		QIcon EditTableInsertColumnLeft;$/;"	m	namespace:QET::Icons	file:
EditTableInsertColumnRight	qeticons.cpp	/^		QIcon EditTableInsertColumnRight;$/;"	m	namespace:QET::Icons	file:
EditTableInsertRowAbove	qeticons.cpp	/^		QIcon EditTableInsertRowAbove;$/;"	m	namespace:QET::Icons	file:
EditTableInsertRowUnder	qeticons.cpp	/^		QIcon EditTableInsertRowUnder;$/;"	m	namespace:QET::Icons	file:
EditText	qeticons.cpp	/^		QIcon EditText;$/;"	m	namespace:QET::Icons	file:
EditUndo	qeticons.cpp	/^		QIcon EditUndo;$/;"	m	namespace:QET::Icons	file:
Element	qet.h	/^		Element                           =    1,$/;"	e	enum:QET::ItemType
Element	qetgraphicsitem/element.cpp	/^Element::Element(QGraphicsItem *parent) :$/;"	f	class:Element
Element	qetgraphicsitem/element.h	/^class Element : public QetGraphicsItem {	$/;"	c
Element	qeticons.cpp	/^		QIcon Element;$/;"	m	namespace:QET::Icons	file:
ElementContent	editor/elementcontent.h	/^typedef QList<QGraphicsItem *> ElementContent;$/;"	t
ElementDefinition	elementdefinition.h	/^	ElementDefinition(ElementsCategory *category = 0, ElementsCollection *collection = 0) : ElementsCollectionItem(category), parent_category_(category), parent_collection_(collection) {};$/;"	f	class:ElementDefinition
ElementDefinition	elementdefinition.h	/^class ElementDefinition : public ElementsCollectionItem {$/;"	c
ElementDelete	qeticons.cpp	/^		QIcon ElementDelete;$/;"	m	namespace:QET::Icons	file:
ElementDeleter	elementdeleter.cpp	/^ElementDeleter::ElementDeleter(const ElementsLocation &elmt_path, QWidget *parent) :$/;"	f	class:ElementDeleter
ElementDeleter	elementdeleter.h	/^class ElementDeleter : public QWidget {$/;"	c
ElementDialog	elementdialog.cpp	/^ElementDialog::ElementDialog(uint mode, QWidget *parentWidget, QObject *parent) :$/;"	f	class:ElementDialog
ElementDialog	elementdialog.h	/^class ElementDialog : public QObject {$/;"	c
ElementEdit	qeticons.cpp	/^		QIcon ElementEdit;$/;"	m	namespace:QET::Icons	file:
ElementEditionCommand	editor/editorcommands.cpp	/^ElementEditionCommand::ElementEditionCommand(ElementScene *scene, ElementView *view, QUndoCommand *parent):$/;"	f	class:ElementEditionCommand
ElementEditionCommand	editor/editorcommands.cpp	/^ElementEditionCommand::ElementEditionCommand(const QString &text, ElementScene *scene, ElementView *view, QUndoCommand *parent):$/;"	f	class:ElementEditionCommand
ElementEditionCommand	editor/editorcommands.h	/^class ElementEditionCommand : public QUndoCommand$/;"	c
ElementFactory	factory/elementfactory.h	/^		ElementFactory() {}$/;"	f	class:ElementFactory
ElementFactory	factory/elementfactory.h	/^class ElementFactory$/;"	c
ElementInfoPartWidget	ui/elementinfopartwidget.cpp	/^ElementInfoPartWidget::ElementInfoPartWidget(QString key, QString translated_key, QWidget *parent):$/;"	f	class:ElementInfoPartWidget
ElementInfoPartWidget	ui/elementinfopartwidget.h	/^class ElementInfoPartWidget : public QWidget {$/;"	c
ElementInfoPartWidget	ui/ui_elementinfopartwidget.h	/^    class ElementInfoPartWidget: public Ui_ElementInfoPartWidget {};$/;"	c	namespace:Ui
ElementInfoWidget	ui/elementinfowidget.cpp	/^ElementInfoWidget::ElementInfoWidget(Element *elmt, QWidget *parent) :$/;"	f	class:ElementInfoWidget
ElementInfoWidget	ui/elementinfowidget.h	/^class ElementInfoWidget : public QWidget {$/;"	c
ElementInfoWidget	ui/ui_elementinfowidget.h	/^    class ElementInfoWidget: public Ui_ElementInfoWidget {};$/;"	c	namespace:Ui
ElementItemEditor	editor/elementitemeditor.cpp	/^ElementItemEditor::ElementItemEditor(QETElementEditor *editor, QWidget *parent) :$/;"	f	class:ElementItemEditor
ElementItemEditor	editor/elementitemeditor.h	/^class ElementItemEditor : public QWidget$/;"	c
ElementNew	qeticons.cpp	/^		QIcon ElementNew;$/;"	m	namespace:QET::Icons	file:
ElementPrimitiveDecorator	editor/elementprimitivedecorator.cpp	/^ElementPrimitiveDecorator::ElementPrimitiveDecorator(QGraphicsItem *parent):$/;"	f	class:ElementPrimitiveDecorator
ElementPrimitiveDecorator	editor/elementprimitivedecorator.h	/^class ElementPrimitiveDecorator : public QGraphicsObject {$/;"	c
ElementPropertiesEditorWidget	editor/ui/elementpropertieseditorwidget.cpp	/^ElementPropertiesEditorWidget::ElementPropertiesEditorWidget(QString &basic_type, DiagramContext &dc, QWidget *parent) :$/;"	f	class:ElementPropertiesEditorWidget
ElementPropertiesEditorWidget	editor/ui/elementpropertieseditorwidget.h	/^class ElementPropertiesEditorWidget : public QDialog$/;"	c
ElementPropertiesEditorWidget	ui/ui_elementpropertieseditorwidget.h	/^    class ElementPropertiesEditorWidget: public Ui_ElementPropertiesEditorWidget {};$/;"	c	namespace:Ui
ElementProvider	elementprovider.cpp	/^ElementProvider::ElementProvider(Diagram *diag) {$/;"	f	class:ElementProvider
ElementProvider	elementprovider.cpp	/^ElementProvider::ElementProvider(QETProject *prj, Diagram *diagram)$/;"	f	class:ElementProvider
ElementProvider	elementprovider.h	/^class ElementProvider$/;"	c
ElementScene	editor/elementscene.cpp	/^ElementScene::ElementScene(QETElementEditor *editor, QObject *parent) :$/;"	f	class:ElementScene
ElementScene	editor/elementscene.h	/^class ElementScene : public QGraphicsScene {$/;"	c
ElementSelectorWidget	ui/elementselectorwidget.cpp	/^ElementSelectorWidget::ElementSelectorWidget(QList <Element *> elmt_list, QWidget *parent) :$/;"	f	class:ElementSelectorWidget
ElementSelectorWidget	ui/elementselectorwidget.h	/^class ElementSelectorWidget : public QWidget$/;"	c
ElementSelectorWidget	ui/ui_elementselectorwidget.h	/^    class ElementSelectorWidget: public Ui_ElementSelectorWidget {};$/;"	c	namespace:Ui
ElementTextFields	diagramcontent.h	/^		ElementTextFields = 4,$/;"	e	enum:DiagramContent::Filter
ElementTextItem	qetgraphicsitem/elementtextitem.cpp	/^ElementTextItem::ElementTextItem(Element *parent_element) :$/;"	f	class:ElementTextItem
ElementTextItem	qetgraphicsitem/elementtextitem.cpp	/^ElementTextItem::ElementTextItem(const QString &text, Element *parent_element) :$/;"	f	class:ElementTextItem
ElementTextItem	qetgraphicsitem/elementtextitem.h	/^class ElementTextItem : public DiagramTextItem {$/;"	c
ElementTextsMover	elementtextsmover.cpp	/^ElementTextsMover::ElementTextsMover() :$/;"	f	class:ElementTextsMover
ElementTextsMover	elementtextsmover.h	/^class ElementTextsMover {$/;"	c
ElementView	editor/elementview.cpp	/^ElementView::ElementView(ElementScene *scene, QWidget *parent) :$/;"	f	class:ElementView
ElementView	editor/elementview.h	/^class ElementView : public QGraphicsView {$/;"	c
Elements	diagramcontent.h	/^		Elements = 1,$/;"	e	enum:DiagramContent::Filter
ElementsAndConductorsSentence	qet.cpp	/^QString QET::ElementsAndConductorsSentence(int elements_count, int conductors_count, int texts_count, int images_count, int shapes_count) {$/;"	f	class:QET
ElementsArea	qet.h	/^		ElementsArea     \/\/\/< Export the content of the diagram only$/;"	e	enum:QET::DiagramArea
ElementsCategoriesList	elementscategorieslist.cpp	/^ElementsCategoriesList::ElementsCategoriesList(bool display_elements, uint selectables, QWidget *parent) :$/;"	f	class:ElementsCategoriesList
ElementsCategoriesList	elementscategorieslist.h	/^class ElementsCategoriesList : public GenericPanel {$/;"	c
ElementsCategoriesWidget	elementscategorieswidget.cpp	/^ElementsCategoriesWidget::ElementsCategoriesWidget(QWidget *parent) : QWidget(parent) {$/;"	f	class:ElementsCategoriesWidget
ElementsCategoriesWidget	elementscategorieswidget.h	/^class ElementsCategoriesWidget : public QWidget {$/;"	c
ElementsCategory	elementscategory.cpp	/^ElementsCategory::ElementsCategory(ElementsCategory *parent, ElementsCollection *collection) :$/;"	f	class:ElementsCategory
ElementsCategory	elementscategory.h	/^class ElementsCategory : public ElementsCollectionItem {$/;"	c
ElementsCategory	qet.h	/^		ElementsCategory                  =    2,$/;"	e	enum:QET::ItemType
ElementsCategoryDeleter	elementscategorydeleter.cpp	/^ElementsCategoryDeleter::ElementsCategoryDeleter(const ElementsLocation &category_path, QWidget *parent) :$/;"	f	class:ElementsCategoryDeleter
ElementsCategoryDeleter	elementscategorydeleter.h	/^class ElementsCategoryDeleter : public QWidget {$/;"	c
ElementsCategoryEditor	elementscategoryeditor.cpp	/^ElementsCategoryEditor::ElementsCategoryEditor(const ElementsLocation &category_path, bool edit, QWidget *parent) :$/;"	f	class:ElementsCategoryEditor
ElementsCategoryEditor	elementscategoryeditor.h	/^class ElementsCategoryEditor : public QDialog {$/;"	c
ElementsCollection	elementscollection.cpp	/^ElementsCollection::ElementsCollection(ElementsCollectionItem *parent) :$/;"	f	class:ElementsCollection
ElementsCollection	elementscollection.h	/^class ElementsCollection : public ElementsCollectionItem {$/;"	c
ElementsCollection	qet.h	/^		ElementsCollection                =    4,$/;"	e	enum:QET::ItemType
ElementsCollectionCache	elementscollectioncache.cpp	/^ElementsCollectionCache::ElementsCollectionCache(const QString &database_path, QObject *parent) :$/;"	f	class:ElementsCollectionCache
ElementsCollectionCache	elementscollectioncache.h	/^class ElementsCollectionCache : public QObject {$/;"	c
ElementsCollectionItem	elementscollectionitem.h	/^	ElementsCollectionItem(ElementsCollectionItem *parent = 0) : QObject(parent) {};$/;"	f	class:ElementsCollectionItem
ElementsCollectionItem	elementscollectionitem.h	/^class ElementsCollectionItem : public QObject {$/;"	c
ElementsCollectionItem	qet.h	/^		ElementsCollectionItem            =    7,$/;"	e	enum:QET::ItemType
ElementsContainer	qet.h	/^		ElementsContainer                 =    6,$/;"	e	enum:QET::ItemType
ElementsLocation	elementslocation.cpp	/^ElementsLocation::ElementsLocation() : project_(0) {$/;"	f	class:ElementsLocation
ElementsLocation	elementslocation.cpp	/^ElementsLocation::ElementsLocation(const ElementsLocation &other) :$/;"	f	class:ElementsLocation
ElementsLocation	elementslocation.cpp	/^ElementsLocation::ElementsLocation(const QString &p, QETProject *pr) :$/;"	f	class:ElementsLocation
ElementsLocation	elementslocation.h	/^class ElementsLocation {$/;"	c
ElementsMover	elementsmover.cpp	/^ElementsMover::ElementsMover() :$/;"	f	class:ElementsMover
ElementsMover	elementsmover.h	/^class ElementsMover {$/;"	c
ElementsPanel	elementspanel.cpp	/^ElementsPanel::ElementsPanel(QWidget *parent) :$/;"	f	class:ElementsPanel
ElementsPanel	elementspanel.h	/^class ElementsPanel : public GenericPanel {$/;"	c
ElementsPanelWidget	elementspanelwidget.cpp	/^ElementsPanelWidget::ElementsPanelWidget(QWidget *parent) : QWidget(parent) {$/;"	f	class:ElementsPanelWidget
ElementsPanelWidget	elementspanelwidget.h	/^class ElementsPanelWidget : public QWidget {$/;"	c
Ellipse	qetgraphicsitem/qetshapeitem.h	/^					Ellipse	  =2,$/;"	e	enum:QetShapeItem::ShapeType
EllipseEditor	editor/ellipseeditor.cpp	/^EllipseEditor::EllipseEditor(QETElementEditor *editor, PartEllipse *ellipse, QWidget *parent) :$/;"	f	class:EllipseEditor
EllipseEditor	editor/ellipseeditor.h	/^class EllipseEditor : public ElementItemEditor {$/;"	c
EmptyBorder	diagram.h	/^		enum BorderOptions { EmptyBorder, TitleBlock, Columns };$/;"	e	enum:Diagram::BorderOptions
EmptyCell	titleblockcell.h	/^		EmptyCell,$/;"	e	enum:TitleBlockCell::TemplateCellType
Enabled	titleblockcell.h	/^		Enabled,      \/\/\/< the cell span parameters should be applied without restriction$/;"	e	enum:TitleBlockCell::TemplateCellSpanState
EndFilter	qet.h	/^		EndFilter$/;"	e	enum:QET::Filtering
EndLineCircle	qeticons.cpp	/^		QIcon EndLineCircle;$/;"	m	namespace:QET::Icons	file:
EndLineDiamond	qeticons.cpp	/^		QIcon EndLineDiamond;$/;"	m	namespace:QET::Icons	file:
EndLineNone	qeticons.cpp	/^		QIcon EndLineNone;$/;"	m	namespace:QET::Icons	file:
EndLineSimple	qeticons.cpp	/^		QIcon EndLineSimple;$/;"	m	namespace:QET::Icons	file:
EndLineTriangle	qeticons.cpp	/^		QIcon EndLineTriangle;$/;"	m	namespace:QET::Icons	file:
EndType	qet.h	/^	enum EndType {$/;"	g	class:Qet
Erase	qet.h	/^		Erase,   \/\/\/< Erase the target content$/;"	e	enum:QET::Action
ExportConfigPage	configpages.cpp	/^ExportConfigPage::ExportConfigPage(QWidget *parent) : ConfigPage(parent) {$/;"	f	class:ExportConfigPage
ExportConfigPage	configpages.h	/^class ExportConfigPage : public ConfigPage {$/;"	c
ExportDiagramLine	exportdialog.cpp	/^ExportDialog::ExportDiagramLine::ExportDiagramLine(Diagram *dia, QSize diagram_size) {$/;"	f	class:ExportDialog::ExportDiagramLine
ExportDiagramLine	exportdialog.h	/^	class ExportDiagramLine {$/;"	c	class:ExportDialog
ExportDialog	exportdialog.cpp	/^ExportDialog::ExportDialog(QETProject *project, QWidget *parent) : QDialog(parent) {$/;"	f	class:ExportDialog
ExportDialog	exportdialog.h	/^class ExportDialog : public QDialog {$/;"	c
ExportProperties	exportproperties.cpp	/^ExportProperties::ExportProperties() :$/;"	f	class:ExportProperties
ExportProperties	exportproperties.h	/^class ExportProperties {$/;"	c
ExportPropertiesWidget	exportpropertieswidget.cpp	/^ExportPropertiesWidget::ExportPropertiesWidget(QWidget *parent) : QWidget(parent) {$/;"	f	class:ExportPropertiesWidget
ExportPropertiesWidget	exportpropertieswidget.cpp	/^ExportPropertiesWidget::ExportPropertiesWidget(const ExportProperties &export_properties, QWidget *parent) : QWidget(parent) {$/;"	f	class:ExportPropertiesWidget
ExportPropertiesWidget	exportpropertieswidget.h	/^class ExportPropertiesWidget : public QWidget {$/;"	c
FILE_ELEMENTS_CATEGORY_H	fileelementscategory.h	19;"	d
FILE_ELEMENTS_COLLECTION_H	fileelementscollection.h	19;"	d
FILE_ELEMENT_DEFINITION	fileelementdefinition.h	19;"	d
FileElementDefinition	fileelementdefinition.cpp	/^FileElementDefinition::FileElementDefinition(const QString &uri, FileElementsCategory *category, FileElementsCollection *collection) :$/;"	f	class:FileElementDefinition
FileElementDefinition	fileelementdefinition.h	/^class FileElementDefinition : public ElementDefinition {$/;"	c
FileElementsCategory	fileelementscategory.cpp	/^FileElementsCategory::FileElementsCategory(const QString &path, FileElementsCategory *parent, FileElementsCollection *coll) :$/;"	f	class:FileElementsCategory
FileElementsCategory	fileelementscategory.h	/^class FileElementsCategory : public ElementsCategory {$/;"	c
FileElementsCollection	fileelementscollection.cpp	/^FileElementsCollection::FileElementsCollection(const QString &path, ElementsCollectionItem *parent) :$/;"	f	class:FileElementsCollection
FileElementsCollection	fileelementscollection.h	/^class FileElementsCollection : public ElementsCollection {$/;"	c
FileOpenDiscard	qetproject.h	/^		FileOpenDiscard       = 5  \/\/\/ the user cancelled the file opening$/;"	e	enum:QETProject::ProjectState
FileOpenFailed	qetproject.h	/^		FileOpenFailed        = 1, \/\/\/ file opening failed$/;"	e	enum:QETProject::ProjectState
Filename	newelementwizard.h	/^	enum WizardState { Category, Filename, Names };$/;"	e	enum:NewElementWizard::WizardState
Filling	editor/graphicspart/customelementgraphicpart.h	/^		enum Filling { NoneFilling, BlackFilling, WhiteFilling, GreenFilling, RedFilling, BlueFilling};$/;"	g	class:CustomElementGraphicPart
Filter	diagramcontent.h	/^	enum Filter {$/;"	g	class:DiagramContent
Filtering	qet.h	/^	enum Filtering {$/;"	g	namespace:QET
FixedElement	qetgraphicsitem/fixedelement.cpp	/^FixedElement::FixedElement(QGraphicsItem *parent) : Element(parent) {$/;"	f	class:FixedElement
FixedElement	qetgraphicsitem/fixedelement.h	/^class FixedElement : public Element {$/;"	c
Folder	qeticons.cpp	/^		QIcon Folder;$/;"	m	namespace:QET::Icons	file:
FolderDelete	qeticons.cpp	/^		QIcon FolderDelete;$/;"	m	namespace:QET::Icons	file:
FolderEdit	qeticons.cpp	/^		QIcon FolderEdit;$/;"	m	namespace:QET::Icons	file:
FolderNew	qeticons.cpp	/^		QIcon FolderNew;$/;"	m	namespace:QET::Icons	file:
FolioNum	numerotationcontextcommands.cpp	/^FolioNum::FolioNum (Diagram *d):$/;"	f	class:FolioNum
FolioNum	numerotationcontextcommands.h	/^class FolioNum: public NumStrategy$/;"	c
Forbidden	qeticons.cpp	/^		QIcon Forbidden;$/;"	m	namespace:QET::Icons	file:
FreeScaling	qet.h	/^		FreeScaling,              \/\/\/< do not interfer with the default scaling process$/;"	e	enum:QET::ScalingMethod
FullScreenEnter	qeticons.cpp	/^		QIcon FullScreenEnter;$/;"	m	namespace:QET::Icons	file:
FullScreenExit	qeticons.cpp	/^		QIcon FullScreenExit;$/;"	m	namespace:QET::Icons	file:
GENERIC_PANEL_H	genericpanel.h	19;"	d
GHOST_ELEMENT_H	qetgraphicsitem/ghostelement.h	19;"	d
GeneralConfigurationPage	configpages.cpp	/^GeneralConfigurationPage::GeneralConfigurationPage(QWidget *parent) : ConfigPage(parent) {$/;"	f	class:GeneralConfigurationPage
GeneralConfigurationPage	configpages.h	/^class GeneralConfigurationPage : public ConfigPage {$/;"	c
GenericPanel	genericpanel.cpp	/^GenericPanel::GenericPanel(QWidget *parent) :$/;"	f	class:GenericPanel
GenericPanel	genericpanel.h	/^class GenericPanel : public QTreeWidget {$/;"	c
GeometryKeyC	richtext/richtexteditor.cpp	/^static const char GeometryKeyC[] = "Geometry";$/;"	v	file:
GhostElement	qetgraphicsitem/ghostelement.cpp	/^GhostElement::GhostElement($/;"	f	class:GhostElement
GhostElement	qetgraphicsitem/ghostelement.h	/^class GhostElement : public CustomElement {$/;"	c
GoDown	qeticons.cpp	/^		QIcon GoDown;$/;"	m	namespace:QET::Icons	file:
GoUp	qeticons.cpp	/^		QIcon GoUp;$/;"	m	namespace:QET::Icons	file:
GreenColor	editor/graphicspart/customelementgraphicpart.h	/^		enum Color {BlackColor, WhiteColor, GreenColor, RedColor, BlueColor};$/;"	e	enum:CustomElementGraphicPart::Color
GreenFilling	editor/graphicspart/customelementgraphicpart.h	/^		enum Filling { NoneFilling, BlackFilling, WhiteFilling, GreenFilling, RedFilling, BlueFilling};$/;"	e	enum:CustomElementGraphicPart::Filling
GridLayoutAnimation	titleblock/gridlayoutanimation.cpp	/^GridLayoutAnimation::GridLayoutAnimation(QGraphicsGridLayout *grid, QObject *parent) :$/;"	f	class:GridLayoutAnimation
GridLayoutAnimation	titleblock/gridlayoutanimation.h	/^class GridLayoutAnimation : public QVariantAnimation {$/;"	c
Ground	qeticons.cpp	/^		QIcon Ground;$/;"	m	namespace:QET::Icons	file:
HelpLine	qetgraphicsitem/terminal.cpp	/^QLineF Terminal::HelpLine() const$/;"	f	class:Terminal
HelperCell	titleblock/helpercell.cpp	/^HelperCell::HelperCell(QGraphicsItem *parent) :$/;"	f	class:HelperCell
HelperCell	titleblock/helpercell.h	/^class HelperCell : public QGraphicsObject, public QGraphicsLayoutItem {$/;"	c
Hide	qeticons.cpp	/^		QIcon Hide;$/;"	m	namespace:QET::Icons	file:
Highlight	qetgraphicsitem/conductor.h	/^	enum Highlight { None, Normal, Alert };$/;"	g	class:Conductor
Home	qeticons.cpp	/^		QIcon Home;$/;"	m	namespace:QET::Icons	file:
Horizontal	qet.h	/^		Horizontal = 1, \/\/\/< Horizontal segment $/;"	e	enum:QET::ConductorSegmentType
HotSpot	qeticons.cpp	/^		QIcon HotSpot;$/;"	m	namespace:QET::Icons	file:
HtmlTextEdit	richtext/richtexteditor.cpp	/^    HtmlTextEdit(QWidget *parent = 0)$/;"	f	class:qdesigner_internal::HtmlTextEdit
HtmlTextEdit	richtext/richtexteditor.cpp	/^class HtmlTextEdit : public QTextEdit$/;"	c	namespace:qdesigner_internal	file:
HundredNum	numerotationcontextcommands.cpp	/^HundredNum::HundredNum (Diagram *d):$/;"	f	class:HundredNum
HundredNum	numerotationcontextcommands.h	/^class HundredNum: public NumStrategy$/;"	c
INDEPENDENT_TEXT_ITEM_H	qetgraphicsitem/independenttextitem.h	19;"	d
INTEGRATION_MOVE_ELEMENTS_HANDLER_H	integrationmoveelementshandler.h	19;"	d
INTERACTIVE_MOVE_ELEMENTS_HANDLER_H	interactivemoveelementshandler.h	19;"	d
Icons	qeticons.cpp	/^	namespace Icons {$/;"	n	namespace:QET	file:
Icons	qeticons.h	/^	namespace Icons {$/;"	n	namespace:QET
Ignore	qet.h	/^		Ignore,  \/\/\/< Skip the current item$/;"	e	enum:QET::Action
Images	diagramcontent.h	/^		Images = 8,$/;"	e	enum:DiagramContent::Filter
IncludeHelperItems	editor/elementscene.h	/^		IncludeHelperItems = 4,$/;"	e	enum:ElementScene::ItemOption
IncludeTerminals	editor/elementscene.h	/^		IncludeTerminals = 2,$/;"	e	enum:ElementScene::ItemOption
IndependentTextItem	qetgraphicsitem/independenttextitem.cpp	/^IndependentTextItem::IndependentTextItem() :$/;"	f	class:IndependentTextItem
IndependentTextItem	qetgraphicsitem/independenttextitem.cpp	/^IndependentTextItem::IndependentTextItem(const QString &text) :$/;"	f	class:IndependentTextItem
IndependentTextItem	qetgraphicsitem/independenttextitem.h	/^class IndependentTextItem : public DiagramTextItem {$/;"	c
InsertImage	qeticons.cpp	/^		QIcon InsertImage;$/;"	m	namespace:QET::Icons	file:
Instance	factory/elementfactory.h	/^		static ElementFactory* Instance() {$/;"	f	class:ElementFactory
IntegrationMoveElementsHandler	integrationmoveelementshandler.cpp	/^IntegrationMoveElementsHandler::IntegrationMoveElementsHandler(QWidget *parent) :$/;"	f	class:IntegrationMoveElementsHandler
IntegrationMoveElementsHandler	integrationmoveelementshandler.h	/^class IntegrationMoveElementsHandler : public BasicMoveElementsHandler {$/;"	c
IntegrationMoveTitleBlockTemplatesHandler	titleblock/integrationmovetemplateshandler.cpp	/^IntegrationMoveTitleBlockTemplatesHandler::IntegrationMoveTitleBlockTemplatesHandler(QWidget *parent) :$/;"	f	class:IntegrationMoveTitleBlockTemplatesHandler
IntegrationMoveTitleBlockTemplatesHandler	titleblock/integrationmovetemplateshandler.h	/^class IntegrationMoveTitleBlockTemplatesHandler : public MoveTitleBlockTemplatesHandler {$/;"	c
InteractiveMoveElementsHandler	interactivemoveelementshandler.cpp	/^InteractiveMoveElementsHandler::InteractiveMoveElementsHandler(QWidget *parent) :$/;"	f	class:InteractiveMoveElementsHandler
InteractiveMoveElementsHandler	interactivemoveelementshandler.h	/^class InteractiveMoveElementsHandler : public BasicMoveElementsHandler {$/;"	c
Item	genericpanel.h	/^		Item = Qt::UserRole + 1,$/;"	e	enum:GenericPanel::MetaData
ItemOption	editor/elementscene.h	/^	enum ItemOption {$/;"	g	class:ElementScene
ItemResizerCommand	diagramcommands.cpp	/^ItemResizerCommand::ItemResizerCommand (QetGraphicsItem *qgi, qreal &old_, qreal &new_, const QString &text, QUndoCommand *parent):$/;"	f	class:ItemResizerCommand
ItemResizerCommand	diagramcommands.h	/^class ItemResizerCommand : public QUndoCommand {$/;"	c
ItemType	qet.h	/^	enum ItemType {$/;"	g	namespace:QET
KeyOrder	diagramcontext.h	/^	enum KeyOrder {$/;"	g	class:DiagramContext
KeyReleaseEvent	dvevent/dveventinterface.cpp	/^bool DVEventInterface::KeyReleaseEvent(QKeyEvent *event) {$/;"	f	class:DVEventInterface
KeyReleaseEvent	editor/esevent/eseventinterface.cpp	/^bool ESEventInterface::KeyReleaseEvent(QKeyEvent *event) {$/;"	f	class:ESEventInterface
LINE_EDITOR_H	editor/lineeditor.h	19;"	d
LINKSINGLEELEMENTWIDGET_H	ui/linksingleelementwidget.h	19;"	d
Label	properties/xrefproperties.h	/^		Label$/;"	e	enum:XRefProperties::SnapTo
Line	qetgraphicsitem/qetshapeitem.h	/^	enum ShapeType {Line	  =0,$/;"	e	enum:QetShapeItem::ShapeType
LineEditor	editor/lineeditor.cpp	/^LineEditor::LineEditor(QETElementEditor *editor, PartLine *line, QWidget *parent) :$/;"	f	class:LineEditor
LineEditor	editor/lineeditor.h	/^class LineEditor : public ElementItemEditor$/;"	c
LineStyle	editor/graphicspart/customelementgraphicpart.h	/^		enum LineStyle {NormalStyle, DashedStyle, DottedStyle, DashdottedStyle};$/;"	g	class:CustomElementGraphicPart
LineWeight	editor/graphicspart/customelementgraphicpart.h	/^		enum LineWeight {NoneWeight, ThinWeight, NormalWeight, UltraWeight, BigWeight};$/;"	g	class:CustomElementGraphicPart
LinkElementsCommand	diagramcommands.cpp	/^LinkElementsCommand::LinkElementsCommand(Element *elmt1, Element *elmt2, QUndoCommand *parent) :$/;"	f	class:LinkElementsCommand
LinkElementsCommand	diagramcommands.cpp	/^LinkElementsCommand::LinkElementsCommand(Element *elmt1, QList<Element *> &elmtList, QUndoCommand *parent) :$/;"	f	class:LinkElementsCommand
LinkElementsCommand	diagramcommands.h	/^class LinkElementsCommand : public QUndoCommand {$/;"	c
LinkSingleElementWidget	ui/linksingleelementwidget.cpp	/^LinkSingleElementWidget::LinkSingleElementWidget(Element *elmt, QWidget *parent) :$/;"	f	class:LinkSingleElementWidget
LinkSingleElementWidget	ui/linksingleelementwidget.h	/^class LinkSingleElementWidget : public QWidget$/;"	c
LinkSingleElementWidget	ui/ui_linksingleelementwidget.h	/^    class LinkSingleElementWidget: public Ui_LinkSingleElementWidget {};$/;"	c	namespace:Ui
LogoCell	titleblockcell.h	/^		LogoCell$/;"	e	enum:TitleBlockCell::TemplateCellType
Lower	editor/editorcommands.h	/^		Lower,        \/\/\/< Send primitives one layer below their current one; zValues are decremented$/;"	e	enum:ChangeZValueCommand::Option
Lower	qeticons.cpp	/^		QIcon Lower;$/;"	m	namespace:QET::Icons	file:
MASTERELEMENT_H	qetgraphicsitem/masterelement.h	19;"	d
MASTERPROPERTIESWIDGET_H	ui/masterpropertieswidget.h	19;"	d
MODIFY_TITLE_BLOCK_CELL_COMMAND_ID	titleblock/templatecommands.h	20;"	d
MOVE_ELEMENTS_DESCRIPTION_H	moveelementsdescription.h	19;"	d
MOVE_ELEMENTS_HANDLER_H	moveelementshandler.h	19;"	d
Main	ui/projectpropertiesdialog.h	/^			Main    = 0,$/;"	e	enum:ProjectPropertiesDialog::Page
Managed	qet.h	/^		Managed, \/\/\/< the current item was handled by the Strategy object: do not treat it and continue$/;"	e	enum:QET::Action
Master	qetgraphicsitem/element.h	/^				   Master = 8,$/;"	e	enum:Element::kind
MasterElement	qetgraphicsitem/masterelement.cpp	/^MasterElement::MasterElement(const ElementsLocation &location, QGraphicsItem *qgi, int *state) :$/;"	f	class:MasterElement
MasterElement	qetgraphicsitem/masterelement.h	/^class MasterElement : public CustomElement$/;"	c
MasterPropertiesWidget	ui/masterpropertieswidget.cpp	/^MasterPropertiesWidget::MasterPropertiesWidget(Element *elmt, QWidget *parent) :$/;"	f	class:MasterPropertiesWidget
MasterPropertiesWidget	ui/masterpropertieswidget.h	/^class MasterPropertiesWidget : public QWidget$/;"	c
MasterPropertiesWidget	ui/ui_masterpropertieswidget.h	/^    class MasterPropertiesWidget: public Ui_MasterPropertiesWidget {};$/;"	c	namespace:Ui
MergeCellsCommand	titleblock/templatecommands.cpp	/^MergeCellsCommand::MergeCellsCommand(const TitleBlockTemplateCellsSet &merged_cells, TitleBlockTemplate *tbtemplate, QUndoCommand *parent) :$/;"	f	class:MergeCellsCommand
MergeCellsCommand	titleblock/templatecommands.h	/^class MergeCellsCommand : public TitleBlockTemplateCommand {$/;"	c
MessageBox	qetmessagebox.h	/^	namespace MessageBox {$/;"	n	namespace:QET
MetaData	genericpanel.h	/^	enum MetaData {$/;"	g	class:GenericPanel
MetaTypeId	elementslocation.cpp	/^int ElementsLocation::MetaTypeId = qRegisterMetaType<ElementsLocation>("ElementsLocation");$/;"	m	class:ElementsLocation	file:
MetaTypeId	elementslocation.h	/^	static int MetaTypeId; \/\/\/< Id of the corresponding Qt meta type$/;"	m	class:ElementsLocation
MetaTypeId	nameslist.cpp	/^int NamesList::MetaTypeId = qRegisterMetaType<NamesList>("NamesList");$/;"	m	class:NamesList	file:
MetaTypeId	nameslist.h	/^	static int MetaTypeId;$/;"	m	class:NamesList
MetaTypeId	titleblock/templatelocation.cpp	/^int TitleBlockTemplateLocation::MetaTypeId = qRegisterMetaType<TitleBlockTemplateLocation>("TitleBlockTemplateLocation");$/;"	m	class:TitleBlockTemplateLocation	file:
MetaTypeId	titleblock/templatelocation.h	/^	static int MetaTypeId; \/\/\/< Id of the corresponding Qt meta type$/;"	m	class:TitleBlockTemplateLocation
ModifyTemplateDimension	titleblock/templatecommands.cpp	/^ModifyTemplateDimension::ModifyTemplateDimension(TitleBlockTemplate *tbtemplate, QUndoCommand *parent) :$/;"	f	class:ModifyTemplateDimension
ModifyTemplateDimension	titleblock/templatecommands.h	/^class ModifyTemplateDimension : public TitleBlockTemplateCommand {$/;"	c
ModifyTemplateGridCommand	titleblock/templatecommands.cpp	/^ModifyTemplateGridCommand::ModifyTemplateGridCommand(TitleBlockTemplate *tbtemplate, QUndoCommand *parent) :$/;"	f	class:ModifyTemplateGridCommand
ModifyTemplateGridCommand	titleblock/templatecommands.h	/^class ModifyTemplateGridCommand : public TitleBlockTemplateCommand {$/;"	c
ModifyTitleBlockCellCommand	titleblock/templatecommands.cpp	/^ModifyTitleBlockCellCommand::ModifyTitleBlockCellCommand(TitleBlockCell *cell, QUndoCommand *parent) :$/;"	f	class:ModifyTitleBlockCellCommand
ModifyTitleBlockCellCommand	titleblock/templatecommands.h	/^class ModifyTitleBlockCellCommand : public QUndoCommand {$/;"	c
MoveArea	qet.h	/^		MoveArea = -2,$/;"	e	enum:QET::OperationAreas
MoveConductorsTextsCommand	diagramcommands.cpp	/^MoveConductorsTextsCommand::MoveConductorsTextsCommand($/;"	f	class:MoveConductorsTextsCommand
MoveConductorsTextsCommand	diagramcommands.h	/^class MoveConductorsTextsCommand : public QUndoCommand {$/;"	c
MoveElementsCommand	diagramcommands.cpp	/^MoveElementsCommand::MoveElementsCommand($/;"	f	class:MoveElementsCommand
MoveElementsCommand	diagramcommands.h	/^class MoveElementsCommand : public QUndoCommand {$/;"	c
MoveElementsDescription	moveelementsdescription.cpp	/^MoveElementsDescription::MoveElementsDescription(QObject *parent) :$/;"	f	class:MoveElementsDescription
MoveElementsDescription	moveelementsdescription.h	/^class MoveElementsDescription : public QObject {$/;"	c
MoveElementsHandler	moveelementshandler.h	/^	MoveElementsHandler(QObject * = 0) {};$/;"	f	class:MoveElementsHandler
MoveElementsHandler	moveelementshandler.h	/^class MoveElementsHandler : public QObject {$/;"	c
MoveElementsTextsCommand	diagramcommands.cpp	/^MoveElementsTextsCommand::MoveElementsTextsCommand($/;"	f	class:MoveElementsTextsCommand
MoveElementsTextsCommand	diagramcommands.h	/^class MoveElementsTextsCommand : public QUndoCommand {$/;"	c
MoveFile	qeticons.cpp	/^		QIcon MoveFile;$/;"	m	namespace:QET::Icons	file:
MovePartsCommand	editor/editorcommands.cpp	/^MovePartsCommand::MovePartsCommand($/;"	f	class:MovePartsCommand
MovePartsCommand	editor/editorcommands.h	/^class MovePartsCommand : public ElementEditionCommand {$/;"	c
MoveTitleBlockTemplatesHandler	titleblock/movetemplateshandler.h	/^	MoveTitleBlockTemplatesHandler(QObject * = 0) {}$/;"	f	class:MoveTitleBlockTemplatesHandler
MoveTitleBlockTemplatesHandler	titleblock/movetemplateshandler.h	/^class MoveTitleBlockTemplatesHandler : public QObject {$/;"	c
Multi	conductorproperties.h	/^	enum ConductorType { Single, Multi };$/;"	e	enum:ConductorProperties::ConductorType
NAMES_LIST_H	nameslist.h	19;"	d
NAMES_LIST_WIDGET_H	nameslistwidget.h	19;"	d
NC	qetgraphicsitem/crossrefitem.h	/^		NC       = 2,$/;"	e	enum:CrossRefItem::CONTACTS
NEW_ELEMENT_WIZARD_H	newelementwizard.h	19;"	d
NO	qetgraphicsitem/crossrefitem.h	/^		NO       = 1,$/;"	e	enum:CrossRefItem::CONTACTS
NOC	qetgraphicsitem/crossrefitem.h	/^		NOC      = 3,$/;"	e	enum:CrossRefItem::CONTACTS
NOMENCLATURE_H	nomenclature.h	19;"	d
NUMEROTATIONCONTEXTCOMMANDS_H	numerotationcontextcommands.h	19;"	d
NUMEROTATIONCONTEXT_H	numerotationcontext.h	19;"	d
NUMPARTEDITORW_H	ui/numparteditorw.h	19;"	d
Names	newelementwizard.h	/^	enum WizardState { Category, Filename, Names };$/;"	e	enum:NewElementWizard::WizardState
Names	qeticons.cpp	/^		QIcon Names;$/;"	m	namespace:QET::Icons	file:
NamesList	nameslist.cpp	/^NamesList::NamesList() {$/;"	f	class:NamesList
NamesList	nameslist.cpp	/^NamesList::NamesList(const NamesList &other) : hash_names(other.hash_names) {	$/;"	f	class:NamesList
NamesList	nameslist.h	/^Q_DECLARE_METATYPE(NamesList);$/;"	v
NamesList	nameslist.h	/^class NamesList {$/;"	c
NamesListWidget	nameslistwidget.cpp	/^NamesListWidget::NamesListWidget(QWidget *parent) : QWidget(parent), read_only(false) {$/;"	f	class:NamesListWidget
NamesListWidget	nameslistwidget.h	/^class NamesListWidget : public QWidget {$/;"	c
Neutral	qeticons.cpp	/^		QIcon Neutral;$/;"	m	namespace:QET::Icons	file:
NewDiagram	qeticons.cpp	/^		QIcon NewDiagram;$/;"	m	namespace:QET::Icons	file:
NewDiagramPage	configpages.cpp	/^NewDiagramPage::NewDiagramPage(QETProject *project, QWidget *parent) :$/;"	f	class:NewDiagramPage
NewDiagramPage	configpages.h	/^class NewDiagramPage : public ConfigPage {$/;"	c
NewElementWizard	newelementwizard.cpp	/^NewElementWizard::NewElementWizard(QWidget *parent, Qt::WindowFlags f) :$/;"	f	class:NewElementWizard
NewElementWizard	newelementwizard.h	/^class NewElementWizard : public QWizard {$/;"	c
NextReport	qetgraphicsitem/element.h	/^				   NextReport = 2,$/;"	e	enum:Element::kind
NoOperation	qet.h	/^		NoOperation = -1,$/;"	e	enum:QET::OperationAreas
NonSelected	editor/elementscene.h	/^		NonSelected = 16,$/;"	e	enum:ElementScene::ItemOption
None	diagramcontext.h	/^		None,$/;"	e	enum:DiagramContext::KeyOrder
None	qet.h	/^		None,      \/\/\/< Regular line$/;"	e	enum:Qet::EndType
None	qetgraphicsitem/conductor.h	/^	enum Highlight { None, Normal, Alert };$/;"	e	enum:Conductor::Highlight
NoneFilling	editor/graphicspart/customelementgraphicpart.h	/^		enum Filling { NoneFilling, BlackFilling, WhiteFilling, GreenFilling, RedFilling, BlueFilling};$/;"	e	enum:CustomElementGraphicPart::Filling
NoneWeight	editor/graphicspart/customelementgraphicpart.h	/^		enum LineWeight {NoneWeight, ThinWeight, NormalWeight, UltraWeight, BigWeight};$/;"	e	enum:CustomElementGraphicPart::LineWeight
Normal	editor/elementscene.h	/^	enum Behavior { Normal, PasteArea };$/;"	e	enum:ElementScene::Behavior
Normal	qetgraphicsitem/conductor.h	/^	enum Highlight { None, Normal, Alert };$/;"	e	enum:Conductor::Highlight
NormalStyle	editor/graphicspart/customelementgraphicpart.h	/^		enum LineStyle {NormalStyle, DashedStyle, DottedStyle, DashdottedStyle};$/;"	e	enum:CustomElementGraphicPart::LineStyle
NormalWeight	editor/graphicspart/customelementgraphicpart.h	/^		enum LineWeight {NoneWeight, ThinWeight, NormalWeight, UltraWeight, BigWeight};$/;"	e	enum:CustomElementGraphicPart::LineWeight
North	qet.h	/^	enum Orientation {North,$/;"	e	enum:Qet::Orientation
North	qeticons.cpp	/^		QIcon North;$/;"	m	namespace:QET::Icons	file:
NumPartEditorW	ui/numparteditorw.cpp	/^NumPartEditorW::NumPartEditorW (NumerotationContext &context, int i, QWidget *parent):$/;"	f	class:NumPartEditorW
NumPartEditorW	ui/numparteditorw.cpp	/^NumPartEditorW::NumPartEditorW(QWidget *parent) :$/;"	f	class:NumPartEditorW
NumPartEditorW	ui/numparteditorw.h	/^class NumPartEditorW : public QWidget$/;"	c
NumPartEditorW	ui/ui_numparteditorw.h	/^    class NumPartEditorW: public Ui_NumPartEditorW {};$/;"	c	namespace:Ui
NumStrategy	numerotationcontextcommands.cpp	/^NumStrategy::NumStrategy (Diagram *d):$/;"	f	class:NumStrategy
NumStrategy	numerotationcontextcommands.h	/^class NumStrategy$/;"	c
NumerotationContext	numerotationcontext.cpp	/^NumerotationContext::NumerotationContext(){$/;"	f	class:NumerotationContext
NumerotationContext	numerotationcontext.cpp	/^NumerotationContext::NumerotationContext(QDomElement &e) {$/;"	f	class:NumerotationContext
NumerotationContext	numerotationcontext.h	/^class NumerotationContext$/;"	c
NumerotationContextCommands	numerotationcontextcommands.cpp	/^NumerotationContextCommands::NumerotationContextCommands(const NumerotationContext &nc, Diagram *d):$/;"	f	class:NumerotationContextCommands
NumerotationContextCommands	numerotationcontextcommands.h	/^class NumerotationContextCommands$/;"	c
NumerotationType	diagram.h	/^		enum NumerotationType { Conductors };$/;"	g	class:Diagram
ORIENTATION_SET_H	orientationset.h	19;"	d
ObjectLocked	qeticons.cpp	/^		QIcon ObjectLocked;$/;"	m	namespace:QET::Icons	file:
ObjectRotateRight	qeticons.cpp	/^		QIcon ObjectRotateRight;$/;"	m	namespace:QET::Icons	file:
ObjectUnlocked	qeticons.cpp	/^		QIcon ObjectUnlocked;$/;"	m	namespace:QET::Icons	file:
Ok	qetproject.h	/^		Ok                    = 0, \/\/\/ no error$/;"	e	enum:QETProject::ProjectState
OpenCategory	elementdialog.h	/^		OpenCategory = 2, \/\/\/< The dialog should open a category$/;"	e	enum:ElementDialog::__anon1
OpenElement	elementdialog.h	/^		OpenElement  = 0, \/\/\/< The dialog should open an element$/;"	e	enum:ElementDialog::__anon1
OperationAreas	qet.h	/^	enum OperationAreas {$/;"	g	namespace:QET
Option	editor/editorcommands.h	/^	enum Option {$/;"	g	class:ChangeZValueCommand
Orientation	qet.h	/^	enum Orientation {North,$/;"	g	class:Qet
OrientationSet	orientationset.cpp	/^OrientationSet::OrientationSet() :$/;"	f	class:OrientationSet
OrientationSet	orientationset.h	/^class OrientationSet {$/;"	c
Orientations	qeticons.cpp	/^		QIcon Orientations;$/;"	m	namespace:QET::Icons	file:
OrientedMovement	qet.h	/^	enum OrientedMovement {$/;"	g	namespace:QET
OtherConductors	diagramcontent.h	/^		OtherConductors = 64,$/;"	e	enum:DiagramContent::Filter
PANELAPPAREILS_H	elementspanel.h	19;"	d
PART_ARC_H	editor/graphicspart/partarc.h	19;"	d
PART_ELLIPSE_H	editor/graphicspart/partellipse.h	19;"	d
PART_LINE_H	editor/graphicspart/partline.h	19;"	d
PART_POLYGON_H	editor/graphicspart/partpolygon.h	19;"	d
PART_RECTANGLE_H	editor/graphicspart/partrectangle.h	19;"	d
PART_TERMINAL_H	editor/graphicspart/partterminal.h	19;"	d
PART_TEXTFIELD_H	editor/graphicspart/parttextfield.h	19;"	d
PART_TEXT_H	editor/graphicspart/parttext.h	19;"	d
PDF	qeticons.cpp	/^		QIcon PDF;$/;"	m	namespace:QET::Icons	file:
POLYGON_EDITOR_H	editor/polygoneditor.h	19;"	d
POTENTIALTEXTSDIALOG_H	ui/potentialtextsdialog.h	19;"	d
PR	nomenclature.cpp	22;"	d	file:
PR	qetgraphicsitem/conductor.cpp	30;"	d	file:
PROJECTCONFIGPAGES_H	projectconfigpages.h	21;"	d
PROJECTPROPERTIESDIALOG_H	ui/projectpropertiesdialog.h	19;"	d
PROJECT_VIEW_H	projectview.h	19;"	d
PROPERTIESINTERFACE_H	properties/propertiesinterface.h	19;"	d
Page	ui/projectpropertiesdialog.h	/^		enum Page {$/;"	g	class:ProjectPropertiesDialog
PanelFlags	genericpanel.h	/^		PanelFlags$/;"	e	enum:GenericPanel::MetaData
PanelOption	genericpanel.h	/^	enum PanelOption {$/;"	g	class:GenericPanel
Parent	genericpanel.h	/^		Parent,$/;"	e	enum:GenericPanel::MetaData
PartArc	editor/graphicspart/partarc.cpp	/^PartArc::PartArc(QETElementEditor *editor, QGraphicsItem *parent) :$/;"	f	class:PartArc
PartArc	editor/graphicspart/partarc.h	/^class PartArc : public AbstractPartEllipse$/;"	c
PartArc	qeticons.cpp	/^		QIcon PartArc;$/;"	m	namespace:QET::Icons	file:
PartCircle	qeticons.cpp	/^		QIcon PartCircle;$/;"	m	namespace:QET::Icons	file:
PartEllipse	editor/graphicspart/partellipse.cpp	/^PartEllipse::PartEllipse(QETElementEditor *editor, QGraphicsItem *parent) :$/;"	f	class:PartEllipse
PartEllipse	editor/graphicspart/partellipse.h	/^class PartEllipse : public  AbstractPartEllipse$/;"	c
PartEllipse	qeticons.cpp	/^		QIcon PartEllipse;$/;"	m	namespace:QET::Icons	file:
PartLine	editor/graphicspart/partline.cpp	/^PartLine::PartLine(QETElementEditor *editor, QGraphicsItem *parent) :$/;"	f	class:PartLine
PartLine	editor/graphicspart/partline.h	/^class PartLine : public CustomElementGraphicPart$/;"	c
PartLine	qeticons.cpp	/^		QIcon PartLine;$/;"	m	namespace:QET::Icons	file:
PartPolygon	editor/graphicspart/partpolygon.cpp	/^PartPolygon::PartPolygon(QETElementEditor *editor, QGraphicsItem *parent) :$/;"	f	class:PartPolygon
PartPolygon	editor/graphicspart/partpolygon.h	/^class PartPolygon : public CustomElementGraphicPart$/;"	c
PartPolygon	qeticons.cpp	/^		QIcon PartPolygon;$/;"	m	namespace:QET::Icons	file:
PartRectangle	editor/graphicspart/partrectangle.cpp	/^PartRectangle::PartRectangle(QETElementEditor *editor, QGraphicsItem *parent) :$/;"	f	class:PartRectangle
PartRectangle	editor/graphicspart/partrectangle.h	/^class PartRectangle :  public CustomElementGraphicPart$/;"	c
PartRectangle	qeticons.cpp	/^		QIcon PartRectangle;$/;"	m	namespace:QET::Icons	file:
PartSelect	qeticons.cpp	/^		QIcon PartSelect;$/;"	m	namespace:QET::Icons	file:
PartTerminal	editor/graphicspart/partterminal.cpp	/^PartTerminal::PartTerminal(QETElementEditor *editor, QGraphicsItem *parent) :$/;"	f	class:PartTerminal
PartTerminal	editor/graphicspart/partterminal.h	/^class PartTerminal : public CustomElementGraphicPart$/;"	c
PartText	editor/graphicspart/parttext.cpp	/^PartText::PartText(QETElementEditor *editor, QGraphicsItem *parent, ElementScene *scene) :$/;"	f	class:PartText
PartText	editor/graphicspart/parttext.h	/^class PartText : public QGraphicsTextItem, public CustomElementPart {$/;"	c
PartText	qeticons.cpp	/^		QIcon PartText;$/;"	m	namespace:QET::Icons	file:
PartTextField	editor/graphicspart/parttextfield.cpp	/^PartTextField::PartTextField(QETElementEditor *editor, QGraphicsItem *parent, QGraphicsScene *scene) :$/;"	f	class:PartTextField
PartTextField	editor/graphicspart/parttextfield.h	/^class PartTextField : public QGraphicsTextItem, public CustomElementPart {$/;"	c
PartTextField	qeticons.cpp	/^		QIcon PartTextField;$/;"	m	namespace:QET::Icons	file:
PasteArea	editor/elementscene.h	/^	enum Behavior { Normal, PasteArea };$/;"	e	enum:ElementScene::Behavior
PasteDiagramCommand	diagramcommands.cpp	/^PasteDiagramCommand::PasteDiagramCommand($/;"	f	class:PasteDiagramCommand
PasteDiagramCommand	diagramcommands.h	/^class PasteDiagramCommand : public QUndoCommand {$/;"	c
PastePartsCommand	editor/editorcommands.cpp	/^PastePartsCommand::PastePartsCommand($/;"	f	class:PastePartsCommand
PastePartsCommand	editor/editorcommands.h	/^class PastePartsCommand : public ElementEditionCommand {$/;"	c
PasteTemplateCellsCommand	titleblock/templatecommands.cpp	/^PasteTemplateCellsCommand::PasteTemplateCellsCommand(TitleBlockTemplate *tb_template, QUndoCommand *parent) :$/;"	f	class:PasteTemplateCellsCommand
PasteTemplateCellsCommand	titleblock/templatecommands.h	/^class PasteTemplateCellsCommand : public TitleBlockTemplateCommand {$/;"	c
Phase	qeticons.cpp	/^		QIcon Phase;$/;"	m	namespace:QET::Icons	file:
PolygonEditor	editor/polygoneditor.cpp	/^PolygonEditor::PolygonEditor(QETElementEditor *editor, PartPolygon *p, QWidget *parent) :$/;"	f	class:PolygonEditor
PolygonEditor	editor/polygoneditor.h	/^class PolygonEditor : public ElementItemEditor {$/;"	c
Polyline	qetgraphicsitem/qetshapeitem.h	/^					Polyline  =3 };$/;"	e	enum:QetShapeItem::ShapeType
PotentialTextsDialog	ui/potentialtextsdialog.cpp	/^PotentialTextsDialog::PotentialTextsDialog(Conductor *conductor, QWidget *parent) :$/;"	f	class:PotentialTextsDialog
PotentialTextsDialog	ui/potentialtextsdialog.h	/^class PotentialTextsDialog : public QDialog$/;"	c
PotentialTextsDialog	ui/ui_potentialtextsdialog.h	/^    class PotentialTextsDialog: public Ui_PotentialTextsDialog {};$/;"	c	namespace:Ui
Power	qetgraphicsitem/crossrefitem.h	/^		Power    = 8,$/;"	e	enum:CrossRefItem::CONTACTS
PreviewScale	qetgraphicsitem/diagramimageitem.cpp	/^void DiagramImageItem::PreviewScale(int scale) {$/;"	f	class:DiagramImageItem
PreviousReport	qetgraphicsitem/element.h	/^				   PreviousReport = 4,$/;"	e	enum:Element::kind
PrintAllPages	qeticons.cpp	/^		QIcon PrintAllPages;$/;"	m	namespace:QET::Icons	file:
PrintConfigPage	configpages.cpp	/^PrintConfigPage::PrintConfigPage(QWidget *parent) : ConfigPage(parent) {$/;"	f	class:PrintConfigPage
PrintConfigPage	configpages.h	/^class PrintConfigPage : public ConfigPage {$/;"	c
PrintLandscape	qeticons.cpp	/^		QIcon PrintLandscape;$/;"	m	namespace:QET::Icons	file:
PrintPortrait	qeticons.cpp	/^		QIcon PrintPortrait;$/;"	m	namespace:QET::Icons	file:
PrintTwoPages	qeticons.cpp	/^		QIcon PrintTwoPages;$/;"	m	namespace:QET::Icons	file:
Printer	qeticons.cpp	/^		QIcon Printer;$/;"	m	namespace:QET::Icons	file:
Project	qet.h	/^		Project                           =   64,$/;"	e	enum:QET::ItemType
Project	qeticons.cpp	/^		QIcon Project;$/;"	m	namespace:QET::Icons	file:
ProjectAutoNumConfigPage	projectconfigpages.cpp	/^ProjectAutoNumConfigPage::ProjectAutoNumConfigPage (QETProject *project, QWidget *parent) :$/;"	f	class:ProjectAutoNumConfigPage
ProjectAutoNumConfigPage	projectconfigpages.h	/^class ProjectAutoNumConfigPage : public ProjectConfigPage {$/;"	c
ProjectConfigPage	projectconfigpages.cpp	/^ProjectConfigPage::ProjectConfigPage(QETProject *project, QWidget *parent) :$/;"	f	class:ProjectConfigPage
ProjectConfigPage	projectconfigpages.h	/^class ProjectConfigPage : public ConfigPage {$/;"	c
ProjectFile	qeticons.cpp	/^		QIcon ProjectFile;$/;"	m	namespace:QET::Icons	file:
ProjectMainConfigPage	projectconfigpages.cpp	/^ProjectMainConfigPage::ProjectMainConfigPage(QETProject *project, QWidget *parent) :$/;"	f	class:ProjectMainConfigPage
ProjectMainConfigPage	projectconfigpages.h	/^class ProjectMainConfigPage : public ProjectConfigPage {$/;"	c
ProjectParsingFailed	qetproject.h	/^		ProjectParsingFailed  = 4, \/\/\/ the parsing of the XML content failed$/;"	e	enum:QETProject::ProjectState
ProjectParsingRunning	qetproject.h	/^		ProjectParsingRunning = 3, \/\/\/ the XML content is currently being processed$/;"	e	enum:QETProject::ProjectState
ProjectPropertiesDialog	ui/projectpropertiesdialog.cpp	/^ProjectPropertiesDialog::ProjectPropertiesDialog(QETProject *project, QWidget *parent) {$/;"	f	class:ProjectPropertiesDialog
ProjectPropertiesDialog	ui/projectpropertiesdialog.h	/^class ProjectPropertiesDialog$/;"	c
ProjectSaveOption	projectview.h	/^	enum ProjectSaveOption {$/;"	g	class:ProjectView
ProjectState	qetproject.h	/^	enum ProjectState {$/;"	g	class:QETProject
ProjectView	projectview.cpp	/^ProjectView::ProjectView(QETProject *project, QWidget *parent) :$/;"	f	class:ProjectView
ProjectView	projectview.h	/^class ProjectView : public QWidget {$/;"	c
PropertiesDialog	ui/conductorpropertiesdialog.cpp	/^void ConductorPropertiesDialog::PropertiesDialog(Conductor *conductor, QWidget *parent) {$/;"	f	class:ConductorPropertiesDialog
PropertiesInterface	properties/propertiesinterface.cpp	/^PropertiesInterface::PropertiesInterface()$/;"	f	class:PropertiesInterface
PropertiesInterface	properties/propertiesinterface.h	/^class PropertiesInterface$/;"	c
QET	qet.h	/^namespace QET {$/;"	n
QET	qeticons.cpp	/^namespace QET {$/;"	n	file:
QET	qeticons.h	/^namespace QET {$/;"	n
QET	qetmessagebox.h	/^namespace QET {$/;"	n
QETAPP_COMMON_TBT_PROTOCOL	qetapp.h	27;"	d
QETAPP_CUSTOM_TBT_PROTOCOL	qetapp.h	28;"	d
QETApp	qetapp.cpp	/^QETApp::QETApp (int &argc, char **argv) :$/;"	f	class:QETApp
QETApp	qetapp.h	/^class QETApp : public QETSingleApplication {$/;"	c
QETArguments	qetarguments.cpp	/^QETArguments::QETArguments(QObject *parent) :$/;"	f	class:QETArguments
QETArguments	qetarguments.cpp	/^QETArguments::QETArguments(const QETArguments &qet_arguments) :$/;"	f	class:QETArguments
QETArguments	qetarguments.cpp	/^QETArguments::QETArguments(const QList<QString> &args, QObject *parent) :$/;"	f	class:QETArguments
QETArguments	qetarguments.h	/^class QETArguments : public QObject {$/;"	c
QETDiagramEditor	qetdiagrameditor.cpp	/^QETDiagramEditor::QETDiagramEditor(const QStringList &files, QWidget *parent) :$/;"	f	class:QETDiagramEditor
QETDiagramEditor	qetdiagrameditor.h	/^class QETDiagramEditor : public QETMainWindow {$/;"	c
QETElementEditor	editor/qetelementeditor.cpp	/^QETElementEditor::QETElementEditor(QWidget *parent) :$/;"	f	class:QETElementEditor
QETElementEditor	editor/qetelementeditor.h	/^class QETElementEditor : public QETMainWindow {$/;"	c
QETGRAPHICSITEM_H	qetgraphicsitem/qetgraphicsitem.h	19;"	d
QETIcon	qeticons.cpp	/^		QIcon QETIcon;$/;"	m	namespace:QET::Icons	file:
QETLogo	qeticons.cpp	/^		QIcon QETLogo;$/;"	m	namespace:QET::Icons	file:
QETMainWindow	qetmainwindow.cpp	/^QETMainWindow::QETMainWindow(QWidget *widget, Qt::WindowFlags flags) :$/;"	f	class:QETMainWindow
QETMainWindow	qetmainwindow.h	/^class QETMainWindow : public QMainWindow {$/;"	c
QETOxygenLogo	qeticons.cpp	/^		QIcon QETOxygenLogo;$/;"	m	namespace:QET::Icons	file:
QETPrintPreviewDialog	qetprintpreviewdialog.cpp	/^QETPrintPreviewDialog::QETPrintPreviewDialog(QETProject *project, QPrinter *printer, QWidget *widget, Qt::WindowFlags f) :$/;"	f	class:QETPrintPreviewDialog
QETPrintPreviewDialog	qetprintpreviewdialog.h	/^class QETPrintPreviewDialog : public QDialog {$/;"	c
QETProject	qetproject.cpp	/^QETProject::QETProject(const QDomElement &xml_element, QObject *parent) :$/;"	f	class:QETProject
QETProject	qetproject.cpp	/^QETProject::QETProject(const QString &path, QObject *parent) :$/;"	f	class:QETProject
QETProject	qetproject.cpp	/^QETProject::QETProject(int diagrams, QObject *parent) :$/;"	f	class:QETProject
QETProject	qetproject.h	/^class QETProject : public QObject$/;"	c
QETRegExpValidator	qetregexpvalidator.cpp	/^QETRegExpValidator::QETRegExpValidator(QObject *parent) : QRegExpValidator(parent) {$/;"	f	class:QETRegExpValidator
QETRegExpValidator	qetregexpvalidator.cpp	/^QETRegExpValidator::QETRegExpValidator(const QRegExp &regexp, QObject *parent) : QRegExpValidator(regexp, parent) {$/;"	f	class:QETRegExpValidator
QETRegExpValidator	qetregexpvalidator.h	/^class QETRegExpValidator : public QRegExpValidator {$/;"	c
QETResult	qetresult.cpp	/^QETResult::QETResult() :$/;"	f	class:QETResult
QETResult	qetresult.cpp	/^QETResult::QETResult(const QString &error_message, bool result) :$/;"	f	class:QETResult
QETResult	qetresult.h	/^class QETResult {$/;"	c
QETSHAPEITEM_H	qetgraphicsitem/qetshapeitem.h	19;"	d
QETSingleApplication	qetsingleapplication.cpp	/^QETSingleApplication::QETSingleApplication(int &argc, char **argv, const QString unique_key) :$/;"	f	class:QETSingleApplication
QETSingleApplication	qetsingleapplication.h	/^class QETSingleApplication : public QApplication {$/;"	c
QETStyle	qetapp.cpp	/^QETStyle::QETStyle() : QPlastiqueStyle()$/;"	f	class:QETStyle
QETStyle	qetapp.h	/^class QETStyle : public QPlastiqueStyle {$/;"	c
QETTabBar	qettabbar.cpp	/^QETTabBar::QETTabBar(QWidget *parent) :$/;"	f	class:QETTabBar
QETTabBar	qettabbar.h	/^class QETTabBar : public QTabBar {$/;"	c
QETTabWidget	qettabwidget.cpp	/^QETTabWidget::QETTabWidget(QWidget *parent) :$/;"	f	class:QETTabWidget
QETTabWidget	qettabwidget.h	/^class QETTabWidget : public QTabWidget {$/;"	c
QETTitleBlockTemplateEditor	titleblock/qettemplateeditor.cpp	/^QETTitleBlockTemplateEditor::QETTitleBlockTemplateEditor(QWidget *parent) :$/;"	f	class:QETTitleBlockTemplateEditor
QETTitleBlockTemplateEditor	titleblock/qettemplateeditor.h	/^class QETTitleBlockTemplateEditor : public QETMainWindow {$/;"	c
QET_APP_H	qetapp.h	19;"	d
QET_ARGUMENTS_H	qetarguments.h	19;"	d
QET_DIAGRAM_EDITOR_H	qetdiagrameditor.h	19;"	d
QET_ICONS_H	qeticons.h	19;"	d
QET_MAIN_WINDOW_H	qetmainwindow.h	19;"	d
QET_MAX_DND_PIXMAP_HEIGHT	elementspanel.cpp	52;"	d	file:
QET_MAX_DND_PIXMAP_WIDTH	elementspanel.cpp	46;"	d	file:
QET_MAX_PARTS_IN_ELEMENT_EDITOR_LIST	editor/qetelementeditor.cpp	60;"	d	file:
QET_MESSAGE_BOX_H	qetmessagebox.h	19;"	d
QET_PRINT_PREVIEW_DIALOG	qetprintpreviewdialog.h	19;"	d
QET_PROJECT_H	qetproject.h	19;"	d
QET_REGEXP_VALIDATOR_H	qetregexpvalidator.h	19;"	d
QET_RESULT_H	qetresult.h	19;"	d
QET_SINGLE_APPLICATION_H	qetsingleapplication.h	19;"	d
QET_TAB_BAR_H	qettabbar.h	19;"	d
QET_TAB_WIDGET_H	qettabwidget.h	19;"	d
QFileNameEdit	qfilenameedit.cpp	/^QFileNameEdit::QFileNameEdit(QWidget *parent) : QLineEdit(parent) {$/;"	f	class:QFileNameEdit
QFileNameEdit	qfilenameedit.cpp	/^QFileNameEdit::QFileNameEdit(const QString &contents, QWidget *parent) : QLineEdit(parent) {$/;"	f	class:QFileNameEdit
QFileNameEdit	qfilenameedit.h	/^class QFileNameEdit : public QLineEdit {$/;"	c
QGIManager	qgimanager.cpp	/^QGIManager::QGIManager(QGraphicsScene *sc) :$/;"	f	class:QGIManager
QGIManager	qgimanager.h	/^class QGIManager {$/;"	c
QGI_MANAGER_H	qgimanager.h	19;"	d
QGRAPHICSITEMUTILITY_H	qetgraphicsitem/qgraphicsitemutility.h	19;"	d
QT_NO_SHAREDMEMORY	qetsingleapplication.cpp	35;"	d	file:
QT_NO_SHAREDMEMORY	qetsingleapplication.h	53;"	d
QTextOrientationSpinBoxWidget	qtextorientationspinboxwidget.cpp	/^QTextOrientationSpinBoxWidget::QTextOrientationSpinBoxWidget(QWidget *parent) :$/;"	f	class:QTextOrientationSpinBoxWidget
QTextOrientationSpinBoxWidget	qtextorientationspinboxwidget.h	/^class QTextOrientationSpinBoxWidget : public QWidget {$/;"	c
QTextOrientationWidget	qtextorientationwidget.cpp	/^QTextOrientationWidget::QTextOrientationWidget(QWidget *parent) :$/;"	f	class:QTextOrientationWidget
QTextOrientationWidget	qtextorientationwidget.h	/^class QTextOrientationWidget : public QWidget {$/;"	c
QUOTE	qetapp.cpp	36;"	d	file:
Q_FILENAME_EDIT_H	qfilenameedit.h	19;"	d
Q_TEXT_ORIENTATION_SPINBOX_WIDGET_H	qtextorientationspinboxwidget.h	19;"	d
Q_TEXT_ORIENTATION_WIDGET_H	qtextorientationwidget.h	19;"	d
Qet	qet.h	/^class Qet : public QObject {$/;"	c
QetGraphicsItem	qetgraphicsitem/qetgraphicsitem.cpp	/^QetGraphicsItem::QetGraphicsItem(QGraphicsItem *parent):$/;"	f	class:QetGraphicsItem
QetGraphicsItem	qetgraphicsitem/qetgraphicsitem.h	/^class QetGraphicsItem : public QGraphicsObject$/;"	c
QetShapeItem	qetgraphicsitem/qetshapeitem.cpp	/^QetShapeItem::QetShapeItem(QPointF p1, QPointF p2, ShapeType type, QGraphicsItem *parent) :$/;"	f	class:QetShapeItem
QetShapeItem	qetgraphicsitem/qetshapeitem.h	/^class QetShapeItem : public QetGraphicsItem$/;"	c
QtLogo	qeticons.cpp	/^		QIcon QtLogo;$/;"	m	namespace:QET::Icons	file:
RECENT_FILES_H	recentfiles.h	19;"	d
RECTANGLE_EDITOR_H	editor/rectangleeditor.h	19;"	d
REPORTELEMENT_H	qetgraphicsitem/reportelement.h	19;"	d
REPORTPROPERTIES_H	properties/reportproperties.h	19;"	d
REPORTPROPERTIEWIDGET_H	ui/reportpropertiewidget.h	19;"	d
RICHTEXTEDITOR_H	richtext/richtexteditor_p.h	54;"	d
ROW_OFFSET	titleblock/templateview.cpp	27;"	d	file:
Raise	editor/editorcommands.h	/^		Raise,        \/\/\/< Raise primitives one layer above their current one; zValues are incremented$/;"	e	enum:ChangeZValueCommand::Option
Raise	qeticons.cpp	/^		QIcon Raise;$/;"	m	namespace:QET::Icons	file:
RecentFiles	recentfiles.cpp	/^RecentFiles::RecentFiles(const QString &identifier, int size, QObject *parent) :$/;"	f	class:RecentFiles
RecentFiles	recentfiles.h	/^class RecentFiles : public QObject {$/;"	c
Rectangle	qetgraphicsitem/qetshapeitem.h	/^					Rectangle =1,$/;"	e	enum:QetShapeItem::ShapeType
RectangleEditor	editor/rectangleeditor.cpp	/^RectangleEditor::RectangleEditor(QETElementEditor *editor, PartRectangle *rect, QWidget *parent) :$/;"	f	class:RectangleEditor
RectangleEditor	editor/rectangleeditor.h	/^class RectangleEditor : public ElementItemEditor {$/;"	c
RedColor	editor/graphicspart/customelementgraphicpart.h	/^		enum Color {BlackColor, WhiteColor, GreenColor, RedColor, BlueColor};$/;"	e	enum:CustomElementGraphicPart::Color
RedFilling	editor/graphicspart/customelementgraphicpart.h	/^		enum Filling { NoneFilling, BlackFilling, WhiteFilling, GreenFilling, RedFilling, BlueFilling};$/;"	e	enum:CustomElementGraphicPart::Filling
RegularFilter	qet.h	/^		RegularFilter,$/;"	e	enum:QET::Filtering
RelativeToRemainingLength	qet.h	/^		RelativeToRemainingLength   \/\/\/< the length is just a fraction of the length that is still available when other types of lengths have been removed$/;"	e	enum:QET::TitleBlockColumnLength
RelativeToTotalLength	qet.h	/^		RelativeToTotalLength,      \/\/\/< the length is just a fraction of the total available length$/;"	e	enum:QET::TitleBlockColumnLength
Remove	qeticons.cpp	/^		QIcon Remove;$/;"	m	namespace:QET::Icons	file:
Rename	qet.h	/^		Rename   \/\/\/< the target has to be renamed$/;"	e	enum:QET::Action
ReportElement	qetgraphicsitem/reportelement.cpp	/^ReportElement::ReportElement(const ElementsLocation &location, QString link_type,QGraphicsItem *qgi, int *state) :$/;"	f	class:ReportElement
ReportElement	qetgraphicsitem/reportelement.h	/^class ReportElement : public CustomElement {$/;"	c
ReportPropertieWidget	ui/reportpropertiewidget.cpp	/^ReportPropertieWidget::ReportPropertieWidget(QString value, QWidget *parent) :$/;"	f	class:ReportPropertieWidget
ReportPropertieWidget	ui/reportpropertiewidget.h	/^class ReportPropertieWidget : public QWidget$/;"	c
ReportPropertieWidget	ui/ui_reportpropertiewidget.h	/^    class ReportPropertieWidget: public Ui_ReportPropertieWidget {};$/;"	c	namespace:Ui
ReportProperties	properties/reportproperties.cpp	/^ReportProperties::ReportProperties()$/;"	f	class:ReportProperties
ReportProperties	properties/reportproperties.h	/^class ReportProperties$/;"	c
ReportProperties	ui/reportpropertiewidget.cpp	/^QString ReportPropertieWidget::ReportProperties() const {$/;"	f	class:ReportPropertieWidget
ResetConductorCommand	diagramcommands.cpp	/^ResetConductorCommand::ResetConductorCommand($/;"	f	class:ResetConductorCommand
ResetConductorCommand	diagramcommands.h	/^class ResetConductorCommand : public QUndoCommand {$/;"	c
ResizeFromBottomCenterCorner	qet.h	/^		ResizeFromBottomCenterCorner = 6,$/;"	e	enum:QET::OperationAreas
ResizeFromBottomLeftCorner	qet.h	/^		ResizeFromBottomLeftCorner = 5,$/;"	e	enum:QET::OperationAreas
ResizeFromBottomRightCorner	qet.h	/^		ResizeFromBottomRightCorner = 7$/;"	e	enum:QET::OperationAreas
ResizeFromMiddleLeftCorner	qet.h	/^		ResizeFromMiddleLeftCorner = 3,$/;"	e	enum:QET::OperationAreas
ResizeFromMiddleRightCorner	qet.h	/^		ResizeFromMiddleRightCorner = 4,$/;"	e	enum:QET::OperationAreas
ResizeFromTopCenterCorner	qet.h	/^		ResizeFromTopCenterCorner = 1,$/;"	e	enum:QET::OperationAreas
ResizeFromTopLeftCorner	qet.h	/^		ResizeFromTopLeftCorner = 0,$/;"	e	enum:QET::OperationAreas
ResizeFromTopRightCorner	qet.h	/^		ResizeFromTopRightCorner = 2,$/;"	e	enum:QET::OperationAreas
Restore	qeticons.cpp	/^		QIcon Restore;$/;"	m	namespace:QET::Icons	file:
Restricted	titleblockcell.h	/^		Restricted    \/\/\/< the cell span parameters should be applied with some restrictions$/;"	e	enum:TitleBlockCell::TemplateCellSpanState
Retry	qet.h	/^		Retry,   \/\/\/< The operation must be tried again$/;"	e	enum:QET::Action
RichTextChanged	richtext/richtexteditor_p.h	/^    enum State { Clean, RichTextChanged, SourceChanged };$/;"	e	enum:qdesigner_internal::RichTextEditorDialog::State
RichTextDialogGroupC	richtext/richtexteditor.cpp	/^static const char RichTextDialogGroupC[] = "RichTextDialog";$/;"	v	file:
RichTextEditor	richtext/richtexteditor.cpp	/^RichTextEditor::RichTextEditor(QWidget *parent)$/;"	f	class:qdesigner_internal::RichTextEditor
RichTextEditor	richtext/richtexteditor.cpp	/^class RichTextEditor : public QTextEdit$/;"	c	namespace:qdesigner_internal	file:
RichTextEditorDialog	richtext/richtexteditor.cpp	/^RichTextEditorDialog::RichTextEditorDialog(QWidget *parent)  :$/;"	f	class:qdesigner_internal::RichTextEditorDialog
RichTextEditorDialog	richtext/richtexteditor_p.h	/^class RichTextEditorDialog : public QDialog$/;"	c	namespace:qdesigner_internal
RichTextEditorToolBar	richtext/richtexteditor.cpp	/^RichTextEditorToolBar::RichTextEditorToolBar(RichTextEditor *editor,$/;"	f	class:qdesigner_internal::RichTextEditorToolBar
RichTextEditorToolBar	richtext/richtexteditor.cpp	/^class RichTextEditorToolBar : public QToolBar$/;"	c	namespace:qdesigner_internal	file:
RichTextIndex	richtext/richtexteditor_p.h	/^    enum TabIndex { RichTextIndex, SourceIndex };$/;"	e	enum:qdesigner_internal::RichTextEditorDialog::TabIndex
RotateArea	qet.h	/^		RotateArea = -3,$/;"	e	enum:QET::OperationAreas
RotateElementsCommand	diagramcommands.cpp	/^RotateElementsCommand::RotateElementsCommand(const QList<Element *> &elements, const QList<DiagramTextItem *> &texts, const QList<DiagramImageItem *> &images, QUndoCommand *parent) :$/;"	f	class:RotateElementsCommand
RotateElementsCommand	diagramcommands.h	/^class RotateElementsCommand : public QUndoCommand {$/;"	c
RotateTextsCommand	diagramcommands.cpp	/^RotateTextsCommand::RotateTextsCommand(const QHash<DiagramTextItem *, double> &previous_state, double applied_rotation, QUndoCommand *parent) :$/;"	f	class:RotateTextsCommand
RotateTextsCommand	diagramcommands.cpp	/^RotateTextsCommand::RotateTextsCommand(const QList<DiagramTextItem *> &texts, double applied_rotation, QUndoCommand *parent) :$/;"	f	class:RotateTextsCommand
RotateTextsCommand	diagramcommands.h	/^class RotateTextsCommand : public QUndoCommand {$/;"	c
RoundScaleRatios	qet.h	/^		RoundScaleRatios          \/\/\/< adjust the scaling movement so that the induced scaling ratios are rounded$/;"	e	enum:QET::ScalingMethod
SELECTAUTONUMW_H	ui/selectautonumw.h	19;"	d
SHADOWS_HEIGHT	editor/graphicspart/customelementgraphicpart.h	35;"	d
SIMPLEELEMENT_H	qetgraphicsitem/simpleelement.h	19;"	d
SLAVEELEMENT_H	qetgraphicsitem/slaveelement.h	19;"	d
STRINGIFY	qetapp.cpp	37;"	d	file:
STYLE_EDITOR_H	editor/styleeditor.h	19;"	d
SW	qetgraphicsitem/crossrefitem.h	/^		SW       = 4,$/;"	e	enum:CrossRefItem::CONTACTS
SaveCategory	elementdialog.h	/^		SaveCategory = 3  \/\/\/< The dialog should select a category for saving$/;"	e	enum:ElementDialog::__anon1
SaveElement	elementdialog.h	/^		SaveElement  = 1, \/\/\/< The dialog should select an element for saving$/;"	e	enum:ElementDialog::__anon1
ScalePartsCommand	editor/editorcommands.cpp	/^ScalePartsCommand::ScalePartsCommand(ElementScene *scene, QUndoCommand * parent) :$/;"	f	class:ScalePartsCommand
ScalePartsCommand	editor/editorcommands.h	/^class ScalePartsCommand : public ElementEditionCommand {$/;"	c
ScalingMethod	qet.h	/^	enum ScalingMethod {$/;"	g	namespace:QET
SelectAutonumW	ui/selectautonumw.cpp	/^SelectAutonumW::SelectAutonumW(QWidget *parent) :$/;"	f	class:SelectAutonumW
SelectAutonumW	ui/selectautonumw.cpp	/^SelectAutonumW::SelectAutonumW(const NumerotationContext &context, QWidget *parent) :$/;"	f	class:SelectAutonumW
SelectAutonumW	ui/selectautonumw.h	/^class SelectAutonumW : public QWidget$/;"	c
SelectAutonumW	ui/ui_selectautonumw.h	/^    class SelectAutonumW: public Ui_SelectAutonumW {};$/;"	c	namespace:Ui
Selected	editor/elementscene.h	/^		Selected = 8,$/;"	e	enum:ElementScene::ItemOption
SelectedOnly	diagramcontent.h	/^		SelectedOnly = 256$/;"	e	enum:DiagramContent::Filter
SelectedOrNot	editor/elementscene.h	/^		SelectedOrNot = 24$/;"	e	enum:ElementScene::ItemOption
SendBackward	editor/editorcommands.h	/^		SendBackward  \/\/\/< Send primitives to the background so they have the lowest zValue$/;"	e	enum:ChangeZValueCommand::Option
SendBackward	qeticons.cpp	/^		QIcon SendBackward;$/;"	m	namespace:QET::Icons	file:
Settings	qeticons.cpp	/^		QIcon Settings;$/;"	m	namespace:QET::Icons	file:
ShapeType	qetgraphicsitem/qetshapeitem.h	/^	enum ShapeType {Line	  =0,$/;"	g	class:QetShapeItem
Shapes	diagramcontent.h	/^		Shapes = 128,$/;"	e	enum:DiagramContent::Filter
Simple	qet.h	/^		Simple,    \/\/\/< Base-less triangle$/;"	e	enum:Qet::EndType
Simple	qetgraphicsitem/element.h	/^		enum kind {Simple = 1,$/;"	e	enum:Element::kind
SimpleElement	qetgraphicsitem/simpleelement.cpp	/^SimpleElement::SimpleElement(const ElementsLocation &location, QGraphicsItem *qgi, int *state) :$/;"	f	class:SimpleElement
SimpleElement	qetgraphicsitem/simpleelement.h	/^class SimpleElement : public CustomElement {$/;"	c
Single	conductorproperties.h	/^	enum ConductorType { Single, Multi };$/;"	e	enum:ConductorProperties::ConductorType
SingleLineProperties	conductorproperties.cpp	/^SingleLineProperties::SingleLineProperties() :$/;"	f	class:SingleLineProperties
SingleLineProperties	conductorproperties.h	/^class SingleLineProperties {$/;"	c
SinglePage	qeticons.cpp	/^		QIcon SinglePage;$/;"	m	namespace:QET::Icons	file:
Slave	qetgraphicsitem/element.h	/^				   Slave = 16,$/;"	e	enum:Element::kind
SlaveElement	qetgraphicsitem/slaveelement.cpp	/^SlaveElement::SlaveElement(const ElementsLocation &location, QGraphicsItem *qgi, int *state) :$/;"	f	class:SlaveElement
SlaveElement	qetgraphicsitem/slaveelement.h	/^class SlaveElement : public CustomElement$/;"	c
SnapScalingPointToGrid	qet.h	/^		SnapScalingPointToGrid,   \/\/\/< snap the point used to define the new bounding rectangle to the grid$/;"	e	enum:QET::ScalingMethod
SnapTo	properties/xrefproperties.h	/^	enum SnapTo {$/;"	g	class:XRefProperties
SortByZValue	editor/elementscene.h	/^		SortByZValue = 1,$/;"	e	enum:ElementScene::ItemOption
SourceChanged	richtext/richtexteditor_p.h	/^    enum State { Clean, RichTextChanged, SourceChanged };$/;"	e	enum:qdesigner_internal::RichTextEditorDialog::State
SourceIndex	richtext/richtexteditor_p.h	/^    enum TabIndex { RichTextIndex, SourceIndex };$/;"	e	enum:qdesigner_internal::RichTextEditorDialog::TabIndex
South	qet.h	/^					  South,$/;"	e	enum:Qet::Orientation
South	qeticons.cpp	/^		QIcon South;$/;"	m	namespace:QET::Icons	file:
SplitCellsCommand	titleblock/templatecommands.cpp	/^SplitCellsCommand::SplitCellsCommand(const TitleBlockTemplateCellsSet &splitted_cells, TitleBlockTemplate *tbtemplate, QUndoCommand *parent) :$/;"	f	class:SplitCellsCommand
SplitCellsCommand	titleblock/templatecommands.h	/^class SplitCellsCommand : public TitleBlockTemplateCommand {$/;"	c
SplittedHelperCell	titleblock/splittedhelpercell.cpp	/^SplittedHelperCell::SplittedHelperCell(QGraphicsItem *parent) :$/;"	f	class:SplittedHelperCell
SplittedHelperCell	titleblock/splittedhelpercell.h	/^class SplittedHelperCell : public HelperCell {$/;"	c
Start	qeticons.cpp	/^		QIcon Start;$/;"	m	namespace:QET::Icons	file:
State	richtext/richtexteditor_p.h	/^    enum State { Clean, RichTextChanged, SourceChanged };$/;"	g	class:qdesigner_internal::RichTextEditorDialog
StringNum	numerotationcontextcommands.cpp	/^StringNum::StringNum (Diagram *d):$/;"	f	class:StringNum
StringNum	numerotationcontextcommands.h	/^class StringNum: public NumStrategy$/;"	c
StyleEditor	editor/styleeditor.cpp	/^StyleEditor::StyleEditor(QETElementEditor *editor, CustomElementGraphicPart *p, QWidget *parent) :$/;"	f	class:StyleEditor
StyleEditor	editor/styleeditor.h	/^class StyleEditor : public ElementItemEditor$/;"	c
TERMINALELEMENT_H	qetgraphicsitem/terminalelement.h	19;"	d
TERMINAL_EDITOR_H	editor/terminaleditor.h	19;"	d
TERMINAL_H	qetgraphicsitem/terminal.h	19;"	d
TEXTFIELD_EDITOR_H	editor/textfieldeditor.h	19;"	d
TEXT_EDITOR_H	editor/texteditor.h	19;"	d
TITLEBLOCKPROPERTIESWIDGET_H	ui/titleblockpropertieswidget.h	19;"	d
TITLEBLOCKS_FILE_EXTENSION	titleblock/templatescollection.h	20;"	d
TITLEBLOCK_CELL_H	titleblockcell.h	19;"	d
TITLEBLOCK_DEFAULT_COL_WIDTH	titleblock/templatecommands.cpp	24;"	d	file:
TITLEBLOCK_DEFAULT_ROW_HEIGHT	titleblock/templatecommands.cpp	23;"	d	file:
TITLEBLOCK_PROPERTIES_H	titleblockproperties.h	19;"	d
TITLEBLOCK_SLASH_DIMENSION_H	titleblock/dimension.h	19;"	d
TITLEBLOCK_SLASH_DIMENSION_WIDGET_H	titleblock/dimensionwidget.h	19;"	d
TITLEBLOCK_SLASH_GRID_LAYOUT_ANIMATION_H	titleblock/gridlayoutanimation.h	19;"	d
TITLEBLOCK_SLASH_HELPER_CELL_H	titleblock/helpercell.h	19;"	d
TITLEBLOCK_SLASH_INTEGRATION_MOVE_TEMPLATES_HANDLER_H	titleblock/integrationmovetemplateshandler.h	19;"	d
TITLEBLOCK_SLASH_LOCATION_CHOOSER_H	titleblock/templatelocationchooser.h	19;"	d
TITLEBLOCK_SLASH_LOCATION_SAVER_H	titleblock/templatelocationsaver.h	19;"	d
TITLEBLOCK_SLASH_MOVE_TEMPLATES_HANDLER_H	titleblock/movetemplateshandler.h	19;"	d
TITLEBLOCK_SLASH_QET_TEMPLATE_EDITOR_H	titleblock/qettemplateeditor.h	19;"	d
TITLEBLOCK_SLASH_QET_TEMPLATE_VISUAL_CELL_H	titleblock/templatevisualcell.h	19;"	d
TITLEBLOCK_SLASH_SPLITTED_HELPER_CELL_H	titleblock/splittedhelpercell.h	19;"	d
TITLEBLOCK_SLASH_TEMPLATES_COLLECTION_H	titleblock/templatescollection.h	19;"	d
TITLEBLOCK_SLASH_TEMPLATE_CELLS_SET_H	titleblock/templatecellsset.h	19;"	d
TITLEBLOCK_SLASH_TEMPLATE_CELL_WIDGET_H	titleblock/templatecellwidget.h	19;"	d
TITLEBLOCK_SLASH_TEMPLATE_COMMANDS_H	titleblock/templatecommands.h	19;"	d
TITLEBLOCK_SLASH_TEMPLATE_DELETER_H	titleblock/templatedeleter.h	19;"	d
TITLEBLOCK_SLASH_TEMPLATE_LOCATION_H	titleblock/templatelocation.h	19;"	d
TITLEBLOCK_SLASH_TEMPLATE_LOGO_MANAGER	titleblock/templatelogomanager.h	19;"	d
TITLEBLOCK_SLASH_TEMPLATE_VIEW_H	titleblock/templateview.h	19;"	d
TITLEBLOCK_TEMPLATE_H	titleblocktemplate.h	19;"	d
TITLEBLOCK_TEMPLATE_RENDERER_H	titleblocktemplaterenderer.h	19;"	d
TREE_COLOR_ANIMATION_H	treecoloranimation.h	19;"	d
TabIndex	richtext/richtexteditor_p.h	/^    enum TabIndex { RichTextIndex, SourceIndex };$/;"	g	class:qdesigner_internal::RichTextEditorDialog
TabKeyC	richtext/richtexteditor.cpp	/^static const char TabKeyC[] = "Tab";$/;"	v	file:
TemplateCellSpanState	titleblockcell.h	/^	enum TemplateCellSpanState {$/;"	g	class:TitleBlockCell
TemplateCellType	titleblockcell.h	/^	enum TemplateCellType {$/;"	g	class:TitleBlockCell
TenNum	numerotationcontextcommands.cpp	/^TenNum::TenNum (Diagram *d):$/;"	f	class:TenNum
TenNum	numerotationcontextcommands.h	/^class TenNum: public NumStrategy$/;"	c
Terminal	qetgraphicsitem/terminal.cpp	/^Terminal::Terminal(QPointF pf, Qet::Orientation o, Element *e) :$/;"	f	class:Terminal
Terminal	qetgraphicsitem/terminal.cpp	/^Terminal::Terminal(QPointF pf, Qet::Orientation o, QString num, QString name, bool hiddenName, Element *e) :$/;"	f	class:Terminal
Terminal	qetgraphicsitem/terminal.cpp	/^Terminal::Terminal(qreal pf_x, qreal pf_y, Qet::Orientation o, Element *e) :$/;"	f	class:Terminal
Terminal	qetgraphicsitem/terminal.h	/^class Terminal : public QGraphicsItem {$/;"	c
Terminal	qeticons.cpp	/^		QIcon Terminal;$/;"	m	namespace:QET::Icons	file:
TerminalEditor	editor/terminaleditor.cpp	/^TerminalEditor::TerminalEditor(QETElementEditor *editor, PartTerminal *term, QWidget *parent) :$/;"	f	class:TerminalEditor
TerminalEditor	editor/terminaleditor.h	/^class TerminalEditor : public ElementItemEditor {$/;"	c
TerminalElement	qetgraphicsitem/terminalelement.cpp	/^TerminalElement::TerminalElement(const ElementsLocation &location, QGraphicsItem *qgi, int *state) :$/;"	f	class:TerminalElement
TerminalElement	qetgraphicsitem/terminalelement.h	/^class TerminalElement : public CustomElement$/;"	c
Terminale	qetgraphicsitem/element.h	/^				   Terminale = 32};$/;"	e	enum:Element::kind
TextCell	titleblockcell.h	/^		TextCell,$/;"	e	enum:TitleBlockCell::TemplateCellType
TextEditor	editor/texteditor.cpp	/^TextEditor::TextEditor(QETElementEditor *editor, PartText *text, QWidget *parent) :$/;"	f	class:TextEditor
TextEditor	editor/texteditor.h	/^class TextEditor : public ElementItemEditor {$/;"	c
TextFieldEditor	editor/textfieldeditor.cpp	/^TextFieldEditor::TextFieldEditor(QETElementEditor *editor, PartTextField *textfield, QWidget *parent) :$/;"	f	class:TextFieldEditor
TextFieldEditor	editor/textfieldeditor.h	/^class TextFieldEditor : public ElementItemEditor {$/;"	c
TextFields	diagramcontent.h	/^		TextFields = 2,$/;"	e	enum:DiagramContent::Filter
ThinWeight	editor/graphicspart/customelementgraphicpart.h	/^		enum LineWeight {NoneWeight, ThinWeight, NormalWeight, UltraWeight, BigWeight};$/;"	e	enum:CustomElementGraphicPart::LineWeight
TitleBlock	diagram.h	/^		enum BorderOptions { EmptyBorder, TitleBlock, Columns };$/;"	e	enum:Diagram::BorderOptions
TitleBlock	qeticons.cpp	/^		QIcon TitleBlock;$/;"	m	namespace:QET::Icons	file:
TitleBlockCell	titleblockcell.cpp	/^TitleBlockCell::TitleBlockCell() {$/;"	f	class:TitleBlockCell
TitleBlockCell	titleblockcell.h	/^class TitleBlockCell {$/;"	c
TitleBlockColumnLength	qet.h	/^	enum TitleBlockColumnLength {$/;"	g	namespace:QET
TitleBlockDimension	titleblock/dimension.cpp	/^TitleBlockDimension::TitleBlockDimension(int v, QET::TitleBlockColumnLength t) :$/;"	f	class:TitleBlockDimension
TitleBlockDimension	titleblock/dimension.h	/^struct TitleBlockDimension {$/;"	s
TitleBlockDimensionWidget	titleblock/dimensionwidget.cpp	/^TitleBlockDimensionWidget::TitleBlockDimensionWidget(bool complete, QWidget *parent) :$/;"	f	class:TitleBlockDimensionWidget
TitleBlockDimensionWidget	titleblock/dimensionwidget.h	/^class TitleBlockDimensionWidget : public QDialog {$/;"	c
TitleBlockProperties	titleblockproperties.cpp	/^TitleBlockProperties::TitleBlockProperties() :$/;"	f	class:TitleBlockProperties
TitleBlockProperties	titleblockproperties.h	/^class TitleBlockProperties {$/;"	c
TitleBlockPropertiesWidget	ui/titleblockpropertieswidget.cpp	/^TitleBlockPropertiesWidget::TitleBlockPropertiesWidget(TitleBlockTemplatesCollection *tbt_collection, const TitleBlockProperties &titleblock, bool current_date, QWidget *parent) :$/;"	f	class:TitleBlockPropertiesWidget
TitleBlockPropertiesWidget	ui/titleblockpropertieswidget.cpp	/^TitleBlockPropertiesWidget::TitleBlockPropertiesWidget(const TitleBlockProperties &titleblock, bool current_date, QWidget *parent) :$/;"	f	class:TitleBlockPropertiesWidget
TitleBlockPropertiesWidget	ui/titleblockpropertieswidget.h	/^class TitleBlockPropertiesWidget : public QWidget$/;"	c
TitleBlockPropertiesWidget	ui/ui_titleblockpropertieswidget.h	/^    class TitleBlockPropertiesWidget: public Ui_TitleBlockPropertiesWidget {};$/;"	c	namespace:Ui
TitleBlockTemplate	qet.h	/^		TitleBlockTemplate                =    8,$/;"	e	enum:QET::ItemType
TitleBlockTemplate	titleblocktemplate.cpp	/^TitleBlockTemplate::TitleBlockTemplate(QObject *parent) :$/;"	f	class:TitleBlockTemplate
TitleBlockTemplate	titleblocktemplate.h	/^class TitleBlockTemplate : public QObject {$/;"	c
TitleBlockTemplateCellWidget	titleblock/templatecellwidget.cpp	/^TitleBlockTemplateCellWidget::TitleBlockTemplateCellWidget(TitleBlockTemplate *parent_template, QWidget *parent) :$/;"	f	class:TitleBlockTemplateCellWidget
TitleBlockTemplateCellWidget	titleblock/templatecellwidget.h	/^class TitleBlockTemplateCellWidget : public QWidget {$/;"	c
TitleBlockTemplateCellsSet	titleblock/templatecellsset.cpp	/^TitleBlockTemplateCellsSet::TitleBlockTemplateCellsSet(const TitleBlockTemplateCellsSet &copy) :$/;"	f	class:TitleBlockTemplateCellsSet
TitleBlockTemplateCellsSet	titleblock/templatecellsset.cpp	/^TitleBlockTemplateCellsSet::TitleBlockTemplateCellsSet(const TitleBlockTemplateView *parent_view) :$/;"	f	class:TitleBlockTemplateCellsSet
TitleBlockTemplateCellsSet	titleblock/templatecellsset.h	/^class TitleBlockTemplateCellsSet : public QList<TitleBlockTemplateVisualCell *> {$/;"	c
TitleBlockTemplateCommand	titleblock/templatecommands.cpp	/^TitleBlockTemplateCommand::TitleBlockTemplateCommand(TitleBlockTemplate *tbtemplate, QUndoCommand *parent) :$/;"	f	class:TitleBlockTemplateCommand
TitleBlockTemplateCommand	titleblock/templatecommands.h	/^class TitleBlockTemplateCommand : public QUndoCommand {$/;"	c
TitleBlockTemplateDeleter	titleblock/templatedeleter.cpp	/^TitleBlockTemplateDeleter::TitleBlockTemplateDeleter(const TitleBlockTemplateLocation &tbt_location, QWidget *parent) :$/;"	f	class:TitleBlockTemplateDeleter
TitleBlockTemplateDeleter	titleblock/templatedeleter.h	/^class TitleBlockTemplateDeleter : public QWidget {$/;"	c
TitleBlockTemplateLocation	titleblock/templatelocation.cpp	/^TitleBlockTemplateLocation::TitleBlockTemplateLocation(const QString &name, TitleBlockTemplatesCollection *collection) :$/;"	f	class:TitleBlockTemplateLocation
TitleBlockTemplateLocation	titleblock/templatelocation.h	/^class TitleBlockTemplateLocation {$/;"	c
TitleBlockTemplateLocationChooser	titleblock/templatelocationchooser.cpp	/^TitleBlockTemplateLocationChooser::TitleBlockTemplateLocationChooser($/;"	f	class:TitleBlockTemplateLocationChooser
TitleBlockTemplateLocationChooser	titleblock/templatelocationchooser.h	/^class TitleBlockTemplateLocationChooser : public QWidget {$/;"	c
TitleBlockTemplateLocationSaver	titleblock/templatelocationsaver.cpp	/^TitleBlockTemplateLocationSaver::TitleBlockTemplateLocationSaver($/;"	f	class:TitleBlockTemplateLocationSaver
TitleBlockTemplateLocationSaver	titleblock/templatelocationsaver.h	/^class TitleBlockTemplateLocationSaver : public TitleBlockTemplateLocationChooser {$/;"	c
TitleBlockTemplateLogoManager	titleblock/templatelogomanager.cpp	/^TitleBlockTemplateLogoManager::TitleBlockTemplateLogoManager(TitleBlockTemplate *managed_template, QWidget *parent) :$/;"	f	class:TitleBlockTemplateLogoManager
TitleBlockTemplateLogoManager	titleblock/templatelogomanager.h	/^class TitleBlockTemplateLogoManager : public QWidget {$/;"	c
TitleBlockTemplateRenderer	titleblocktemplaterenderer.cpp	/^TitleBlockTemplateRenderer::TitleBlockTemplateRenderer(QObject *parent) :$/;"	f	class:TitleBlockTemplateRenderer
TitleBlockTemplateRenderer	titleblocktemplaterenderer.h	/^class TitleBlockTemplateRenderer : public QObject {$/;"	c
TitleBlockTemplateView	titleblock/templateview.cpp	/^TitleBlockTemplateView::TitleBlockTemplateView(QGraphicsScene *scene, QWidget *parent) :$/;"	f	class:TitleBlockTemplateView
TitleBlockTemplateView	titleblock/templateview.cpp	/^TitleBlockTemplateView::TitleBlockTemplateView(QWidget *parent) :$/;"	f	class:TitleBlockTemplateView
TitleBlockTemplateView	titleblock/templateview.h	/^class TitleBlockTemplateView : public QGraphicsView {$/;"	c
TitleBlockTemplateVisualCell	titleblock/templatevisualcell.cpp	/^TitleBlockTemplateVisualCell::TitleBlockTemplateVisualCell(QGraphicsItem *parent) :$/;"	f	class:TitleBlockTemplateVisualCell
TitleBlockTemplateVisualCell	titleblock/templatevisualcell.h	/^class TitleBlockTemplateVisualCell : public QGraphicsLayoutItem, public QGraphicsItem {$/;"	c
TitleBlockTemplatesCollection	qet.h	/^		TitleBlockTemplatesCollection     =   16,$/;"	e	enum:QET::ItemType
TitleBlockTemplatesCollection	titleblock/templatescollection.cpp	/^TitleBlockTemplatesCollection::TitleBlockTemplatesCollection(QObject *parent) :$/;"	f	class:TitleBlockTemplatesCollection
TitleBlockTemplatesCollection	titleblock/templatescollection.h	/^class TitleBlockTemplatesCollection : public QObject {$/;"	c
TitleBlockTemplatesCollectionItem	qet.h	/^		TitleBlockTemplatesCollectionItem =   24,$/;"	e	enum:QET::ItemType
TitleBlockTemplatesFilesCollection	titleblock/templatescollection.cpp	/^TitleBlockTemplatesFilesCollection::TitleBlockTemplatesFilesCollection(const QString &path, QObject *parent) :$/;"	f	class:TitleBlockTemplatesFilesCollection
TitleBlockTemplatesFilesCollection	titleblock/templatescollection.h	/^class TitleBlockTemplatesFilesCollection : public TitleBlockTemplatesCollection {$/;"	c
TitleBlockTemplatesProjectCollection	titleblock/templatescollection.cpp	/^TitleBlockTemplatesProjectCollection::TitleBlockTemplatesProjectCollection(QETProject *project, QObject *parent) :$/;"	f	class:TitleBlockTemplatesProjectCollection
TitleBlockTemplatesProjectCollection	titleblock/templatescollection.h	/^class TitleBlockTemplatesProjectCollection : public TitleBlockTemplatesCollection {$/;"	c
ToEast	qet.h	/^		ToEast,$/;"	e	enum:QET::OrientedMovement
ToNorth	qet.h	/^		ToNorth,$/;"	e	enum:QET::OrientedMovement
ToNorthEast	qet.h	/^		ToNorthEast,$/;"	e	enum:QET::OrientedMovement
ToNorthWest	qet.h	/^		ToNorthWest$/;"	e	enum:QET::OrientedMovement
ToSouth	qet.h	/^		ToSouth,$/;"	e	enum:QET::OrientedMovement
ToSouthEast	qet.h	/^		ToSouthEast,$/;"	e	enum:QET::OrientedMovement
ToSouthWest	qet.h	/^		ToSouthWest,$/;"	e	enum:QET::OrientedMovement
ToWest	qet.h	/^		ToWest,$/;"	e	enum:QET::OrientedMovement
TreeColorAnimation	treecoloranimation.cpp	/^TreeColorAnimation::TreeColorAnimation(const QList<QTreeWidgetItem *> &items, QObject *parent) : $/;"	f	class:TreeColorAnimation
TreeColorAnimation	treecoloranimation.h	/^class TreeColorAnimation : public QVariantAnimation {$/;"	c
Triangle	qet.h	/^		Triangle,  \/\/\/< Triangle$/;"	e	enum:Qet::EndType
Type	editor/elementprimitivedecorator.h	/^	enum { Type = UserType + 2200 };$/;"	e	enum:ElementPrimitiveDecorator::__anon20
Type	editor/graphicspart/partarc.h	/^		enum { Type = UserType + 1101 };$/;"	e	enum:PartArc::__anon14
Type	editor/graphicspart/partellipse.h	/^		enum { Type = UserType + 1103 };$/;"	e	enum:PartEllipse::__anon13
Type	editor/graphicspart/partline.h	/^		enum { Type = UserType + 1104 };$/;"	e	enum:PartLine::__anon15
Type	editor/graphicspart/partpolygon.h	/^		enum { Type = UserType + 1105 };$/;"	e	enum:PartPolygon::__anon18
Type	editor/graphicspart/partrectangle.h	/^		enum { Type = UserType + 1109 };$/;"	e	enum:PartRectangle::__anon16
Type	editor/graphicspart/partterminal.h	/^		enum { Type = UserType + 1106 };$/;"	e	enum:PartTerminal::__anon12
Type	editor/graphicspart/parttext.h	/^	enum { Type = UserType + 1107 };$/;"	e	enum:PartText::__anon17
Type	editor/graphicspart/parttextfield.h	/^	enum { Type = UserType + 1108 };$/;"	e	enum:PartTextField::__anon19
Type	qetgraphicsitem/conductor.h	/^	enum { Type = UserType + 1001 };$/;"	e	enum:Conductor::__anon6
Type	qetgraphicsitem/conductortextitem.h	/^	enum { Type = UserType + 1006 };$/;"	e	enum:ConductorTextItem::__anon2
Type	qetgraphicsitem/crossrefitem.h	/^	enum { Type = UserType + 1009 };$/;"	e	enum:CrossRefItem::__anon11
Type	qetgraphicsitem/diagramimageitem.h	/^	enum { Type = UserType + 1007 };$/;"	e	enum:DiagramImageItem::__anon3
Type	qetgraphicsitem/diagramtextitem.h	/^	enum { Type = UserType + 1004 };$/;"	e	enum:DiagramTextItem::__anon5
Type	qetgraphicsitem/element.h	/^		enum { Type = UserType + 1000 };$/;"	e	enum:Element::__anon8
Type	qetgraphicsitem/elementtextitem.h	/^		enum { Type = UserType + 1003 };$/;"	e	enum:ElementTextItem::__anon7
Type	qetgraphicsitem/independenttextitem.h	/^	enum { Type = UserType + 1005 };$/;"	e	enum:IndependentTextItem::__anon9
Type	qetgraphicsitem/qetshapeitem.h	/^	enum { Type = UserType + 1008 };$/;"	e	enum:QetShapeItem::__anon4
Type	qetgraphicsitem/terminal.h	/^	enum { Type = UserType + 1002 };$/;"	e	enum:Terminal::__anon10
UI_ADDLINKDIALOG_H	richtext/ui_addlinkdialog.h	11;"	d
UI_ADDLINKDIALOG_H	ui/ui_addlinkdialog.h	11;"	d
UI_AUTONUMSELECTORWIDGET_H	ui/ui_autonumselectorwidget.h	11;"	d
UI_BORDERPROPERTIESWIDGET_H	ui/ui_borderpropertieswidget.h	11;"	d
UI_CONDUCTORPROPERTIESDIALOG_H	ui/ui_conductorpropertiesdialog.h	11;"	d
UI_CONDUCTORPROPERTIESWIDGET_H	ui/ui_conductorpropertieswidget.h	11;"	d
UI_DIAGRAMSELECTION_H	ui/ui_diagramselection.h	11;"	d
UI_DIALOGAUTONUM_H	ui/ui_dialogautonum.h	11;"	d
UI_DIALOGWAITING_H	ui/ui_dialogwaiting.h	11;"	d
UI_ELEMENTINFOPARTWIDGET_H	ui/ui_elementinfopartwidget.h	11;"	d
UI_ELEMENTINFOWIDGET_H	ui/ui_elementinfowidget.h	11;"	d
UI_ELEMENTPROPERTIESEDITORWIDGET_H	ui/ui_elementpropertieseditorwidget.h	11;"	d
UI_ELEMENTSELECTORWIDGET_H	ui/ui_elementselectorwidget.h	11;"	d
UI_LINKSINGLEELEMENTWIDGET_H	ui/ui_linksingleelementwidget.h	11;"	d
UI_MASTERPROPERTIESWIDGET_H	ui/ui_masterpropertieswidget.h	11;"	d
UI_NUMPARTEDITORW_H	ui/ui_numparteditorw.h	11;"	d
UI_POTENTIALTEXTSDIALOG_H	ui/ui_potentialtextsdialog.h	11;"	d
UI_REPORTPROPERTIEWIDGET_H	ui/ui_reportpropertiewidget.h	11;"	d
UI_SELECTAUTONUMW_H	ui/ui_selectautonumw.h	11;"	d
UI_TITLEBLOCKPROPERTIESWIDGET_H	ui/ui_titleblockpropertieswidget.h	11;"	d
UI_XREFPROPERTIESWIDGET_H	ui/ui_xrefpropertieswidget.h	11;"	d
Ui	editor/ui/elementpropertieseditorwidget.h	/^namespace Ui {$/;"	n
Ui	richtext/ui_addlinkdialog.h	/^namespace Ui {$/;"	n
Ui	ui/autonumselectorwidget.h	/^namespace Ui {$/;"	n
Ui	ui/borderpropertieswidget.h	/^namespace Ui {$/;"	n
Ui	ui/conductorpropertiesdialog.h	/^namespace Ui {$/;"	n
Ui	ui/conductorpropertieswidget.h	/^namespace Ui {$/;"	n
Ui	ui/diagramselection.h	/^namespace Ui {$/;"	n
Ui	ui/dialogautonum.h	/^namespace Ui {$/;"	n
Ui	ui/dialogwaiting.h	/^namespace Ui {$/;"	n
Ui	ui/elementinfopartwidget.h	/^namespace Ui {$/;"	n
Ui	ui/elementinfowidget.h	/^namespace Ui {$/;"	n
Ui	ui/elementselectorwidget.h	/^namespace Ui {$/;"	n
Ui	ui/linksingleelementwidget.h	/^namespace Ui {$/;"	n
Ui	ui/masterpropertieswidget.h	/^namespace Ui {$/;"	n
Ui	ui/numparteditorw.h	/^namespace Ui {$/;"	n
Ui	ui/potentialtextsdialog.h	/^namespace Ui {$/;"	n
Ui	ui/reportpropertiewidget.h	/^namespace Ui {$/;"	n
Ui	ui/selectautonumw.h	/^namespace Ui {$/;"	n
Ui	ui/titleblockpropertieswidget.h	/^namespace Ui {$/;"	n
Ui	ui/ui_addlinkdialog.h	/^namespace Ui {$/;"	n
Ui	ui/ui_autonumselectorwidget.h	/^namespace Ui {$/;"	n
Ui	ui/ui_borderpropertieswidget.h	/^namespace Ui {$/;"	n
Ui	ui/ui_conductorpropertiesdialog.h	/^namespace Ui {$/;"	n
Ui	ui/ui_conductorpropertieswidget.h	/^namespace Ui {$/;"	n
Ui	ui/ui_diagramselection.h	/^namespace Ui {$/;"	n
Ui	ui/ui_dialogautonum.h	/^namespace Ui {$/;"	n
Ui	ui/ui_dialogwaiting.h	/^namespace Ui {$/;"	n
Ui	ui/ui_elementinfopartwidget.h	/^namespace Ui {$/;"	n
Ui	ui/ui_elementinfowidget.h	/^namespace Ui {$/;"	n
Ui	ui/ui_elementpropertieseditorwidget.h	/^namespace Ui {$/;"	n
Ui	ui/ui_elementselectorwidget.h	/^namespace Ui {$/;"	n
Ui	ui/ui_linksingleelementwidget.h	/^namespace Ui {$/;"	n
Ui	ui/ui_masterpropertieswidget.h	/^namespace Ui {$/;"	n
Ui	ui/ui_numparteditorw.h	/^namespace Ui {$/;"	n
Ui	ui/ui_potentialtextsdialog.h	/^namespace Ui {$/;"	n
Ui	ui/ui_reportpropertiewidget.h	/^namespace Ui {$/;"	n
Ui	ui/ui_selectautonumw.h	/^namespace Ui {$/;"	n
Ui	ui/ui_titleblockpropertieswidget.h	/^namespace Ui {$/;"	n
Ui	ui/ui_xrefpropertieswidget.h	/^namespace Ui {$/;"	n
Ui	ui/xrefpropertieswidget.h	/^namespace Ui {$/;"	n
Ui_AddLinkDialog	richtext/ui_addlinkdialog.h	/^class Ui_AddLinkDialog$/;"	c
Ui_AddLinkDialog	ui/ui_addlinkdialog.h	/^class Ui_AddLinkDialog$/;"	c
Ui_AutonumSelectorWidget	ui/ui_autonumselectorwidget.h	/^class Ui_AutonumSelectorWidget$/;"	c
Ui_BorderPropertiesWidget	ui/ui_borderpropertieswidget.h	/^class Ui_BorderPropertiesWidget$/;"	c
Ui_ConductorPropertiesDialog	ui/ui_conductorpropertiesdialog.h	/^class Ui_ConductorPropertiesDialog$/;"	c
Ui_ConductorPropertiesWidget	ui/ui_conductorpropertieswidget.h	/^class Ui_ConductorPropertiesWidget$/;"	c
Ui_DialogAutoNum	ui/ui_dialogautonum.h	/^class Ui_DialogAutoNum$/;"	c
Ui_DialogWaiting	ui/ui_dialogwaiting.h	/^class Ui_DialogWaiting$/;"	c
Ui_ElementInfoPartWidget	ui/ui_elementinfopartwidget.h	/^class Ui_ElementInfoPartWidget$/;"	c
Ui_ElementInfoWidget	ui/ui_elementinfowidget.h	/^class Ui_ElementInfoWidget$/;"	c
Ui_ElementPropertiesEditorWidget	ui/ui_elementpropertieseditorwidget.h	/^class Ui_ElementPropertiesEditorWidget$/;"	c
Ui_ElementSelectorWidget	ui/ui_elementselectorwidget.h	/^class Ui_ElementSelectorWidget$/;"	c
Ui_LinkSingleElementWidget	ui/ui_linksingleelementwidget.h	/^class Ui_LinkSingleElementWidget$/;"	c
Ui_MasterPropertiesWidget	ui/ui_masterpropertieswidget.h	/^class Ui_MasterPropertiesWidget$/;"	c
Ui_NumPartEditorW	ui/ui_numparteditorw.h	/^class Ui_NumPartEditorW$/;"	c
Ui_PotentialTextsDialog	ui/ui_potentialtextsdialog.h	/^class Ui_PotentialTextsDialog$/;"	c
Ui_ReportPropertieWidget	ui/ui_reportpropertiewidget.h	/^class Ui_ReportPropertieWidget$/;"	c
Ui_SelectAutonumW	ui/ui_selectautonumw.h	/^class Ui_SelectAutonumW$/;"	c
Ui_TitleBlockPropertiesWidget	ui/ui_titleblockpropertieswidget.h	/^class Ui_TitleBlockPropertiesWidget$/;"	c
Ui_XRefPropertiesWidget	ui/ui_xrefpropertieswidget.h	/^class Ui_XRefPropertiesWidget$/;"	c
Ui_diagramselection	ui/ui_diagramselection.h	/^class Ui_diagramselection$/;"	c
UltraWeight	editor/graphicspart/customelementgraphicpart.h	/^		enum LineWeight {NoneWeight, ThinWeight, NormalWeight, UltraWeight, BigWeight};$/;"	e	enum:CustomElementGraphicPart::LineWeight
UncheckAddPrimitive	editor/qetelementeditor.cpp	/^void QETElementEditor::UncheckAddPrimitive() {$/;"	f	class:QETElementEditor
UnitNum	numerotationcontextcommands.cpp	/^UnitNum::UnitNum(Diagram *d):$/;"	f	class:UnitNum
UnitNum	numerotationcontextcommands.h	/^class UnitNum: public NumStrategy$/;"	c
UseDateValue	titleblockproperties.h	/^		UseDateValue, \/\/\/< use the date attribute$/;"	e	enum:TitleBlockProperties::DateManagement
UserInformations	qeticons.cpp	/^		QIcon UserInformations;$/;"	m	namespace:QET::Icons	file:
Vertical	qet.h	/^		Vertical = 2,   \/\/\/< Vertical segment $/;"	e	enum:QET::ConductorSegmentType
ViewFitWidth	qeticons.cpp	/^		QIcon ViewFitWidth;$/;"	m	namespace:QET::Icons	file:
ViewFitWindow	qeticons.cpp	/^		QIcon ViewFitWindow;$/;"	m	namespace:QET::Icons	file:
ViewMove	qeticons.cpp	/^		QIcon ViewMove;$/;"	m	namespace:QET::Icons	file:
ViewRefresh	qeticons.cpp	/^		QIcon ViewRefresh;$/;"	m	namespace:QET::Icons	file:
West	qet.h	/^					  West};$/;"	e	enum:Qet::Orientation
West	qeticons.cpp	/^		QIcon West;$/;"	m	namespace:QET::Icons	file:
WhiteColor	editor/graphicspart/customelementgraphicpart.h	/^		enum Color {BlackColor, WhiteColor, GreenColor, RedColor, BlueColor};$/;"	e	enum:CustomElementGraphicPart::Color
WhiteFilling	editor/graphicspart/customelementgraphicpart.h	/^		enum Filling { NoneFilling, BlackFilling, WhiteFilling, GreenFilling, RedFilling, BlueFilling};$/;"	e	enum:CustomElementGraphicPart::Filling
WindowNew	qeticons.cpp	/^		QIcon WindowNew;$/;"	m	namespace:QET::Icons	file:
WizardState	newelementwizard.h	/^	enum WizardState { Category, Filename, Names };$/;"	g	class:NewElementWizard
XML_ELEMENTS_CATEGORY	xmlelementscategory.h	19;"	d
XML_ELEMENTS_COLLECTION	xmlelementscollection.h	19;"	d
XML_ELEMENT_DEFINITION	xmlelementdefinition.h	19;"	d
XREFPROPERTIESWIDGET_H	ui/xrefpropertieswidget.h	19;"	d
XREFPROPERTIES_H	properties/xrefproperties.h	19;"	d
XRefProperties	properties/xrefproperties.cpp	/^XRefProperties::XRefProperties()$/;"	f	class:XRefProperties
XRefProperties	properties/xrefproperties.h	/^class XRefProperties : public PropertiesInterface$/;"	c
XRefPropertiesWidget	ui/ui_xrefpropertieswidget.h	/^    class XRefPropertiesWidget: public Ui_XRefPropertiesWidget {};$/;"	c	namespace:Ui
XRefPropertiesWidget	ui/xrefpropertieswidget.cpp	/^XRefPropertiesWidget::XRefPropertiesWidget(QHash <QString, XRefProperties> properties, QWidget *parent) :$/;"	f	class:XRefPropertiesWidget
XRefPropertiesWidget	ui/xrefpropertieswidget.h	/^class XRefPropertiesWidget : public QWidget$/;"	c
XmlElementDefinition	xmlelementdefinition.cpp	/^XmlElementDefinition::XmlElementDefinition(const QDomElement &xml_element, XmlElementsCategory *category, XmlElementsCollection *collection) :$/;"	f	class:XmlElementDefinition
XmlElementDefinition	xmlelementdefinition.cpp	/^XmlElementDefinition::XmlElementDefinition(const QString &name, XmlElementsCategory *category, XmlElementsCollection *collection) :$/;"	f	class:XmlElementDefinition
XmlElementDefinition	xmlelementdefinition.h	/^class XmlElementDefinition : public ElementDefinition {$/;"	c
XmlElementsCategory	xmlelementscategory.cpp	/^XmlElementsCategory::XmlElementsCategory(XmlElementsCategory *parent, XmlElementsCollection *collection) :$/;"	f	class:XmlElementsCategory
XmlElementsCategory	xmlelementscategory.cpp	/^XmlElementsCategory::XmlElementsCategory(const QDomElement &xml_element, XmlElementsCategory *parent, XmlElementsCollection *collection) :$/;"	f	class:XmlElementsCategory
XmlElementsCategory	xmlelementscategory.h	/^class XmlElementsCategory : public ElementsCategory {$/;"	c
XmlElementsCollection	xmlelementscollection.cpp	/^XmlElementsCollection::XmlElementsCollection(ElementsCollectionItem *parent) :$/;"	f	class:XmlElementsCollection
XmlElementsCollection	xmlelementscollection.cpp	/^XmlElementsCollection::XmlElementsCollection(const QDomElement &xml_element, ElementsCollectionItem *parent) :$/;"	f	class:XmlElementsCollection
XmlElementsCollection	xmlelementscollection.h	/^class XmlElementsCollection : public ElementsCollection {$/;"	c
XmlParsingFailed	qetproject.h	/^		XmlParsingFailed      = 2, \/\/\/ XML parsing failed$/;"	e	enum:QETProject::ProjectState
XmlTextFile	qeticons.cpp	/^		QIcon XmlTextFile;$/;"	m	namespace:QET::Icons	file:
Xref_item	qetgraphicsitem/slaveelement.h	/^	QGraphicsTextItem *Xref_item;$/;"	m	class:SlaveElement
ZoomDraw	qeticons.cpp	/^		QIcon ZoomDraw;$/;"	m	namespace:QET::Icons	file:
ZoomFitBest	qeticons.cpp	/^		QIcon ZoomFitBest;$/;"	m	namespace:QET::Icons	file:
ZoomIn	qeticons.cpp	/^		QIcon ZoomIn;$/;"	m	namespace:QET::Icons	file:
ZoomOriginal	qeticons.cpp	/^		QIcon ZoomOriginal;$/;"	m	namespace:QET::Icons	file:
ZoomOut	qeticons.cpp	/^		QIcon ZoomOut;$/;"	m	namespace:QET::Icons	file:
_QET_H	qet.h	19;"	d
_antialiased	editor/graphicspart/customelementgraphicpart.h	/^		bool _antialiased;$/;"	m	class:CustomElementGraphicPart
_color	editor/graphicspart/customelementgraphicpart.h	/^		Color _color;$/;"	m	class:CustomElementGraphicPart
_filling	editor/graphicspart/customelementgraphicpart.h	/^		Filling _filling ;$/;"	m	class:CustomElementGraphicPart
_linestyle	editor/graphicspart/customelementgraphicpart.h	/^		LineStyle _linestyle;$/;"	m	class:CustomElementGraphicPart
_lineweight	editor/graphicspart/customelementgraphicpart.h	/^		LineWeight _lineweight;$/;"	m	class:CustomElementGraphicPart
_names	editor/elementscene.h	/^		NamesList _names;$/;"	m	class:ElementScene
abort	moveelementsdescription.cpp	/^void MoveElementsDescription::abort() {$/;"	f	class:MoveElementsDescription
abort_	moveelementsdescription.h	/^	bool abort_;$/;"	m	class:MoveElementsDescription
abort_button_	interactivemoveelementshandler.h	/^	QPushButton *abort_button_;$/;"	m	class:InteractiveMoveElementsHandler
aborted_	interactivemoveelementshandler.h	/^	bool aborted_;                \/\/\/< Whether the movement has been cancelled$/;"	m	class:InteractiveMoveElementsHandler
aboutDeleteXref	qetgraphicsitem/masterelement.cpp	/^bool MasterElement::aboutDeleteXref() {$/;"	f	class:MasterElement
aboutQET	qetapp.cpp	/^void QETApp::aboutQET()$/;"	f	class:QETApp
aboutTab	aboutqet.cpp	/^QWidget *AboutQET::aboutTab() const {$/;"	f	class:AboutQET
about_dialog_	qetapp.cpp	/^AboutQET *QETApp::about_dialog_ = 0;$/;"	m	class:QETApp	file:
about_dialog_	qetapp.h	/^	static AboutQET *about_dialog_;$/;"	m	class:QETApp
about_qet_	qetmainwindow.h	/^	QAction *about_qet_;                     \/\/\/< Launch the "About QElectroTech" dialog$/;"	m	class:QETMainWindow
about_qt_	qetmainwindow.h	/^	QAction *about_qt_;                      \/\/\/< launch the "About Qt" dialog$/;"	m	class:QETMainWindow
absolute_button_	titleblock/dimensionwidget.h	/^	QRadioButton *absolute_button_;    \/\/\/< Radio button to indicate the length is absolute$/;"	m	class:TitleBlockDimensionWidget
accept	orientationset.cpp	/^bool OrientationSet::accept(Qet::Orientation ori) const {$/;"	f	class:OrientationSet
accept	richtext/richtexteditor.cpp	/^void AddLinkDialog::accept()$/;"	f	class:qdesigner_internal::AddLinkDialog
acceptCreation	elementscategoryeditor.cpp	/^void ElementsCategoryEditor::acceptCreation() {$/;"	f	class:ElementsCategoryEditor
acceptPrintTypeDialog	diagramprintdialog.cpp	/^void DiagramPrintDialog::acceptPrintTypeDialog() {$/;"	f	class:DiagramPrintDialog
acceptUpdate	elementscategoryeditor.cpp	/^void ElementsCategoryEditor::acceptUpdate() {$/;"	f	class:ElementsCategoryEditor
actionForMenu	qetmainwindow.cpp	/^QAction *QETMainWindow::actionForMenu(QMenu *menu) {$/;"	f	class:QETMainWindow
actionTriggered	richtext/richtexteditor.cpp	/^void HtmlTextEdit::actionTriggered(QAction *action)$/;"	f	class:qdesigner_internal::HtmlTextEdit
action_delete	elementscategorieswidget.h	/^	QAction *action_delete;$/;"	m	class:ElementsCategoriesWidget
action_new	elementscategorieswidget.h	/^	QAction *action_new;$/;"	m	class:ElementsCategoriesWidget
action_open	elementscategorieswidget.h	/^	QAction *action_open;$/;"	m	class:ElementsCategoriesWidget
action_reload	elementscategorieswidget.h	/^	QAction *action_reload;$/;"	m	class:ElementsCategoriesWidget
actions	titleblock/helpercell.cpp	/^QList<QAction *> HelperCell::actions() const {$/;"	f	class:HelperCell
actions_	titleblock/helpercell.h	/^	QList<QAction *> actions_; \/\/\/< List of actions displayed by the context menu$/;"	m	class:HelperCell
activateDiagram	qetdiagrameditor.cpp	/^void QETDiagramEditor::activateDiagram(Diagram *diagram) {$/;"	f	class:QETDiagramEditor
activateNextTab	qettabbar.cpp	/^void QETTabBar::activateNextTab() {$/;"	f	class:QETTabBar
activatePreviousTab	qettabbar.cpp	/^void QETTabBar::activatePreviousTab() {$/;"	f	class:QETTabBar
activateProject	elementspanelwidget.cpp	/^void ElementsPanelWidget::activateProject() {$/;"	f	class:ElementsPanelWidget
activateProject	qetdiagrameditor.cpp	/^void QETDiagramEditor::activateProject(ProjectView *project_view) {$/;"	f	class:QETDiagramEditor
activateProject	qetdiagrameditor.cpp	/^void QETDiagramEditor::activateProject(QETProject *project) {$/;"	f	class:QETDiagramEditor
activateWidget	qetdiagrameditor.cpp	/^void QETDiagramEditor::activateWidget(QWidget *widget) {$/;"	f	class:QETDiagramEditor
activeConnections	editor/arceditor.cpp	/^void ArcEditor::activeConnections(bool active) {$/;"	f	class:ArcEditor
activeConnections	editor/ellipseeditor.cpp	/^void EllipseEditor::activeConnections(bool active) {$/;"	f	class:EllipseEditor
activeConnections	editor/lineeditor.cpp	/^void LineEditor::activeConnections(bool active) {$/;"	f	class:LineEditor
activeConnections	editor/polygoneditor.cpp	/^void PolygonEditor::activeConnections(bool active) {$/;"	f	class:PolygonEditor
activeConnections	editor/rectangleeditor.cpp	/^void RectangleEditor::activeConnections(bool active) {$/;"	f	class:RectangleEditor
activeConnections	editor/styleeditor.cpp	/^void StyleEditor::activeConnections(bool active) {$/;"	f	class:StyleEditor
activeConnections	editor/terminaleditor.cpp	/^void TerminalEditor::activeConnections(bool active) {$/;"	f	class:TerminalEditor
activeConnections	editor/texteditor.cpp	/^void TextEditor::activeConnections(bool active) {$/;"	f	class:TextEditor
activeConnections	editor/textfieldeditor.cpp	/^void TextFieldEditor::activeConnections(bool active) {$/;"	f	class:TextFieldEditor
activeUndoStackCleanChanged	qetdiagrameditor.cpp	/^void QETDiagramEditor::activeUndoStackCleanChanged(bool clean) {$/;"	f	class:QETDiagramEditor
actsOnRows	titleblock/gridlayoutanimation.cpp	/^bool GridLayoutAnimation::actsOnRows() const {$/;"	f	class:GridLayoutAnimation
addArc	editor/qetelementeditor.cpp	/^void QETElementEditor::addArc() {$/;"	f	class:QETElementEditor
addAuthor	aboutqet.cpp	/^void AboutQET::addAuthor(QLabel *label, const QString &name, const QString &email, const QString &work) const {$/;"	f	class:AboutQET
addAutonumWidget	ui/conductorpropertieswidget.cpp	/^void ConductorPropertiesWidget::addAutonumWidget(QWidget *widget) {$/;"	f	class:ConductorPropertiesWidget
addCell	titleblock/templatecommands.cpp	/^void PasteTemplateCellsCommand::addCell(TitleBlockCell *cell, const TitleBlockCell &before, const TitleBlockCell &after) {$/;"	f	class:PasteTemplateCellsCommand
addCells	titleblock/templateview.cpp	/^void TitleBlockTemplateView::addCells() {$/;"	f	class:TitleBlockTemplateView
addChangePartCommand	editor/elementitemeditor.cpp	/^void ElementItemEditor::addChangePartCommand(const QString &desc, CustomElementPart *part, const char *prop, const QVariant &new_v) {$/;"	f	class:ElementItemEditor
addChangePartCommand	editor/elementitemeditor.cpp	/^void ElementItemEditor::addChangePartCommand(const QString &undo_text, QList<CustomElementPart *> part_list, const char *property, const QVariant &new_value)$/;"	f	class:ElementItemEditor
addCollection	elementspanel.cpp	/^QTreeWidgetItem *ElementsPanel::addCollection(ElementsCollection *collection) {$/;"	f	class:ElementsPanel
addColumn	bordertitleblock.cpp	/^void BorderTitleBlock::addColumn() {$/;"	f	class:BorderTitleBlock
addColumn	diagramview.cpp	/^void DiagramView::addColumn() {$/;"	f	class:DiagramView
addColumn	titleblock/templatecommands.cpp	/^ModifyTemplateGridCommand *ModifyTemplateGridCommand::addColumn(TitleBlockTemplate *tbtemplate, int index) {$/;"	f	class:ModifyTemplateGridCommand
addColumn	titleblocktemplate.cpp	/^void TitleBlockTemplate::addColumn(int i) {$/;"	f	class:TitleBlockTemplate
addColumnAfter	titleblock/templateview.cpp	/^void TitleBlockTemplateView::addColumnAfter() {$/;"	f	class:TitleBlockTemplateView
addColumnAtEnd	titleblock/templateview.cpp	/^void TitleBlockTemplateView::addColumnAtEnd() {$/;"	f	class:TitleBlockTemplateView
addColumnBefore	titleblock/templateview.cpp	/^void TitleBlockTemplateView::addColumnBefore() {$/;"	f	class:TitleBlockTemplateView
addConductor	qetgraphicsitem/terminal.cpp	/^bool Terminal::addConductor(Conductor *f) {$/;"	f	class:Terminal
addConductorAutoNum	qetproject.cpp	/^void QETProject::addConductorAutoNum(QString key, NumerotationContext context) {$/;"	f	class:QETProject
addContent	editor/elementscene.cpp	/^ElementContent ElementScene::addContent(const ElementContent &content, QString *error_message) {$/;"	f	class:ElementScene
addContentAtPos	editor/elementscene.cpp	/^ElementContent ElementScene::addContentAtPos(const ElementContent &content, const QPointF &pos, QString *error_message) {$/;"	f	class:ElementScene
addDiagram	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::addDiagram(Diagram *diagram, QTreeWidgetItem *parent_item, PanelOptions options) {$/;"	f	class:GenericPanel
addDiagram	projectview.cpp	/^void ProjectView::addDiagram(DiagramView *diagram) {$/;"	f	class:ProjectView
addDiagram	qetproject.cpp	/^void QETProject::addDiagram(Diagram *diagram) {$/;"	f	class:QETProject
addDiagramFolioListToProject	qetdiagrameditor.cpp	/^void QETDiagramEditor::addDiagramFolioListToProject() {$/;"	f	class:QETDiagramEditor
addDiagramToProject	qetdiagrameditor.cpp	/^void QETDiagramEditor::addDiagramToProject() {$/;"	f	class:QETDiagramEditor
addDiagramToProject	qetdiagrameditor.cpp	/^void QETDiagramEditor::addDiagramToProject(QETProject *project) {$/;"	f	class:QETDiagramEditor
addDroppedElement	diagramview.cpp	/^void DiagramView::addDroppedElement() {$/;"	f	class:DiagramView
addElement	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::addElement(ElementDefinition *element, QTreeWidgetItem *parent_item, PanelOptions options) {$/;"	f	class:GenericPanel
addElementAtPos	diagramview.cpp	/^bool DiagramView::addElementAtPos(const ElementsLocation &location, const QPoint &pos) {$/;"	f	class:DiagramView
addElementsCategory	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::addElementsCategory(ElementsCategory *category, QTreeWidgetItem *parent_item, PanelOptions options) {$/;"	f	class:GenericPanel
addElementsCollection	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::addElementsCollection(ElementsCollection *collection, QTreeWidgetItem *parent_item, PanelOptions options) {$/;"	f	class:GenericPanel
addEllipse	editor/qetelementeditor.cpp	/^void QETElementEditor::addEllipse() {$/;"	f	class:QETElementEditor
addErasedCell	titleblock/templatecommands.cpp	/^void PasteTemplateCellsCommand::addErasedCell(TitleBlockCell *cell, const TitleBlockCell &former_cell_content) {$/;"	f	class:PasteTemplateCellsCommand
addItem	diagram.cpp	/^void Diagram::addItem(Conductor *conductor) {$/;"	f	class:Diagram
addItem	diagram.cpp	/^void Diagram::addItem(Element *element) {$/;"	f	class:Diagram
addItem	diagram.cpp	/^void Diagram::addItem(IndependentTextItem *iti) {$/;"	f	class:Diagram
addItem	diagram.cpp	/^void Diagram::addItem(QGraphicsItem *item) {$/;"	f	class:Diagram
addItemFinish	qetdiagrameditor.cpp	/^void QETDiagramEditor::addItemFinish() {$/;"	f	class:QETDiagramEditor
addLine	editor/qetelementeditor.cpp	/^void QETElementEditor::addLine() {$/;"	f	class:QETElementEditor
addLine	nameslistwidget.cpp	/^void NamesListWidget::addLine() {$/;"	f	class:NamesListWidget
addLogo	titleblock/templatelogomanager.cpp	/^void TitleBlockTemplateLogoManager::addLogo() {$/;"	f	class:TitleBlockTemplateLogoManager
addLogo	titleblocktemplate.cpp	/^bool TitleBlockTemplate::addLogo(const QString &logo_name, QByteArray *logo_data, const QString &logo_type, const QString &logo_storage) {$/;"	f	class:TitleBlockTemplate
addLogoFromFile	titleblocktemplate.cpp	/^bool TitleBlockTemplate::addLogoFromFile(const QString &filepath, const QString &name) {$/;"	f	class:TitleBlockTemplate
addModification	titleblock/templatecommands.cpp	/^void ModifyTitleBlockCellCommand::addModification(const QString &attribute, const QVariant &value, bool is_old_value) {$/;"	f	class:ModifyTitleBlockCellCommand
addName	elementscategory.cpp	/^void ElementsCategory::addName(const QString &lang, const QString &value) {$/;"	f	class:ElementsCategory
addName	nameslist.cpp	/^void NamesList::addName(const QString &lang, const QString &name) {$/;"	f	class:NamesList
addNewDiagram	projectview.cpp	/^void ProjectView::addNewDiagram() {$/;"	f	class:ProjectView
addNewDiagram	qetproject.cpp	/^Diagram *QETProject::addNewDiagram() {$/;"	f	class:QETProject
addNewDiagramFolioList	projectview.cpp	/^void ProjectView::addNewDiagramFolioList() {$/;"	f	class:ProjectView
addNewDiagramFolioList	qetproject.cpp	/^QList <Diagram *> QETProject::addNewDiagramFolioList() {$/;"	f	class:QETProject
addPage	configdialog.cpp	/^void ConfigDialog::addPage(ConfigPage *page) {$/;"	f	class:ConfigDialog
addPageToList	configdialog.cpp	/^void ConfigDialog::addPageToList(ConfigPage *page) {$/;"	f	class:ConfigDialog
addPastedCell	titleblock/templatecommands.cpp	/^void PasteTemplateCellsCommand::addPastedCell(TitleBlockCell *cell, const TitleBlockCell &new_cell_content) {$/;"	f	class:PasteTemplateCellsCommand
addPoint	editor/graphicspart/partpolygon.cpp	/^void PartPolygon::addPoint(const QPointF &point)$/;"	f	class:PartPolygon
addPolygon	editor/qetelementeditor.cpp	/^void QETElementEditor::addPolygon() {$/;"	f	class:QETElementEditor
addPrimitive	editor/elementscene.cpp	/^void ElementScene::addPrimitive(QGraphicsItem *primitive) {$/;"	f	class:ElementScene
addProject	elementspanel.cpp	/^QTreeWidgetItem *ElementsPanel::addProject(QETProject *project) {$/;"	f	class:ElementsPanel
addProject	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::addProject(QETProject *project, QTreeWidgetItem *parent_item, PanelOptions options) {$/;"	f	class:GenericPanel
addProject	qetdiagrameditor.cpp	/^bool QETDiagramEditor::addProject(QETProject *project, bool update_panel) {$/;"	f	class:QETDiagramEditor
addProjectView	qetdiagrameditor.cpp	/^void QETDiagramEditor::addProjectView(ProjectView *project_view)$/;"	f	class:QETDiagramEditor
addRect	editor/qetelementeditor.cpp	/^void QETElementEditor::addRect() {$/;"	f	class:QETElementEditor
addRow	bordertitleblock.cpp	/^void BorderTitleBlock::addRow() {$/;"	f	class:BorderTitleBlock
addRow	diagramview.cpp	/^void DiagramView::addRow() {$/;"	f	class:DiagramView
addRow	titleblock/templatecommands.cpp	/^ModifyTemplateGridCommand *ModifyTemplateGridCommand::addRow(TitleBlockTemplate *tbtemplate, int index) {$/;"	f	class:ModifyTemplateGridCommand
addRow	titleblocktemplate.cpp	/^void TitleBlockTemplate::addRow(int i) {$/;"	f	class:TitleBlockTemplate
addRowAfter	titleblock/templateview.cpp	/^void TitleBlockTemplateView::addRowAfter() {$/;"	f	class:TitleBlockTemplateView
addRowAtEnd	titleblock/templateview.cpp	/^void TitleBlockTemplateView::addRowAtEnd() {$/;"	f	class:TitleBlockTemplateView
addRowBefore	titleblock/templateview.cpp	/^void TitleBlockTemplateView::addRowBefore() {$/;"	f	class:TitleBlockTemplateView
addTemplate	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::addTemplate(const TitleBlockTemplateLocation &tb_template, QTreeWidgetItem *parent_item, PanelOptions options) {$/;"	f	class:GenericPanel
addTemplatesCollection	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::addTemplatesCollection(TitleBlockTemplatesCollection *tbt_collection, QTreeWidgetItem *parent_item, PanelOptions options) {$/;"	f	class:GenericPanel
addTerminal	editor/qetelementeditor.cpp	/^void QETElementEditor::addTerminal() {$/;"	f	class:QETElementEditor
addText	editor/qetelementeditor.cpp	/^void QETElementEditor::addText() {$/;"	f	class:QETElementEditor
addTextField	editor/qetelementeditor.cpp	/^void QETElementEditor::addTextField() {$/;"	f	class:QETElementEditor
addTextMovement	diagramcommands.cpp	/^void MoveConductorsTextsCommand::addTextMovement(ConductorTextItem *text_item, const QPointF &old_pos, const QPointF &new_pos, bool already_moved) {$/;"	f	class:MoveConductorsTextsCommand
addTitleBlockTemplate	elementspanelwidget.cpp	/^void ElementsPanelWidget::addTitleBlockTemplate() {$/;"	f	class:ElementsPanelWidget
addToPath	elementslocation.cpp	/^bool ElementsLocation::addToPath(const QString &string) {$/;"	f	class:ElementsLocation
addValue	diagramcontext.cpp	/^bool DiagramContext::addValue(const QString &key, const QVariant &value, bool show) {$/;"	f	class:DiagramContext
addValue	numerotationcontext.cpp	/^bool NumerotationContext::addValue(const QString &type, const QVariant &value, const int increase) {$/;"	f	class:NumerotationContext
addWindowsListToMenu	qetapp.cpp	/^template <class T> void QETApp::addWindowsListToMenu (QMenu *menu, const QList<T *> &windows)$/;"	f	class:QETApp
add_button	ui/ui_selectautonumw.h	/^    QPushButton *add_button;$/;"	m	class:Ui_SelectAutonumW
add_button_	titleblock/templatelogomanager.h	/^	QPushButton *add_button_;              \/\/\/< button to add a new logo$/;"	m	class:TitleBlockTemplateLogoManager
add_col_	titleblock/qettemplateeditor.h	/^	QAction *undo_, *redo_, *cut_, *copy_, *paste_, *edit_logos_, *edit_info_, *add_row_, *add_col_, *merge_cells_, *split_cell_;$/;"	m	class:QETTitleBlockTemplateEditor
add_column_after_	titleblock/templateview.h	/^	QAction *add_column_after_, *add_row_after_;$/;"	m	class:TitleBlockTemplateView
add_column_before_	titleblock/templateview.h	/^	QAction *add_column_before_, *add_row_before_;$/;"	m	class:TitleBlockTemplateView
add_logo_input_	titleblock/templatecellwidget.h	/^	QPushButton *add_logo_input_;$/;"	m	class:TitleBlockTemplateCellWidget
add_new_diagram_	projectview.h	/^	QAction *add_new_diagram_;$/;"	m	class:ProjectView
add_row_	titleblock/qettemplateeditor.h	/^	QAction *undo_, *redo_, *cut_, *copy_, *paste_, *edit_logos_, *edit_info_, *add_row_, *add_col_, *merge_cells_, *split_cell_;$/;"	m	class:QETTitleBlockTemplateEditor
add_row_after_	titleblock/templateview.h	/^	QAction *add_column_after_, *add_row_after_;$/;"	m	class:TitleBlockTemplateView
add_row_before_	titleblock/templateview.h	/^	QAction *add_column_before_, *add_row_before_;$/;"	m	class:TitleBlockTemplateView
adding_image	qeticons.cpp	/^		QIcon adding_image;$/;"	m	namespace:QET::Icons	file:
additional_fields_	bordertitleblock.h	/^	DiagramContext additional_fields_;$/;"	m	class:BorderTitleBlock
adjust	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::adjust() {$/;"	f	class:ElementPrimitiveDecorator
adjustEffectiveBoundingRect	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::adjustEffectiveBoundingRect() {$/;"	f	class:ElementPrimitiveDecorator
adjustGridToZoom	diagramview.cpp	/^void DiagramView::adjustGridToZoom() {$/;"	f	class:DiagramView
adjustItemPosition	editor/graphicspart/parttext.cpp	/^void PartText::adjustItemPosition(int new_block_count) {$/;"	f	class:PartText
adjustItemPosition	editor/graphicspart/parttextfield.cpp	/^void PartTextField::adjustItemPosition(int new_block_count) {$/;"	f	class:PartTextField
adjustItemPosition	qetgraphicsitem/elementtextitem.cpp	/^void ElementTextItem::adjustItemPosition(int new_block_count) {$/;"	f	class:ElementTextItem
adjustReadOnly	projectconfigpages.cpp	/^void ProjectAutoNumConfigPage::adjustReadOnly() {$/;"	f	class:ProjectAutoNumConfigPage
adjustReadOnly	projectconfigpages.cpp	/^void ProjectMainConfigPage::adjustReadOnly() {$/;"	f	class:ProjectMainConfigPage
adjustReadOnlyState	projectview.cpp	/^void ProjectView::adjustReadOnlyState() {$/;"	f	class:ProjectView
adjustSceneRect	diagramview.cpp	/^void DiagramView::adjustSceneRect() {$/;"	f	class:DiagramView
adjustSceneRect	editor/elementview.cpp	/^void ElementView::adjustSceneRect() {$/;"	f	class:ElementView
adjustSceneRect	titleblock/templateview.cpp	/^void TitleBlockTemplateView::adjustSceneRect() {$/;"	f	class:TitleBlockTemplateView
adjustText	editor/editorcommands.cpp	/^void ScalePartsCommand::adjustText() {$/;"	f	class:ScalePartsCommand
adjustTitleBlockToColumns	bordertitleblock.cpp	/^void BorderTitleBlock::adjustTitleBlockToColumns() {$/;"	f	class:BorderTitleBlock
adjust_page_	qetprintpreviewdialog.h	/^	QAction *adjust_page_;$/;"	m	class:QETPrintPreviewDialog
adjust_width_	qetprintpreviewdialog.h	/^	QAction *adjust_width_;$/;"	m	class:QETPrintPreviewDialog
after_	titleblock/templatecommands.h	/^	TitleBlockDimension after_;   \/\/\/< Size of the row\/column after it is changed$/;"	m	class:ModifyTemplateDimension
align_label_	titleblock/templatecellwidget.h	/^	QLabel        *align_label_;$/;"	m	class:TitleBlockTemplateCellWidget
alignedWithTerminal	qetgraphicsitem/terminal.cpp	/^Terminal* Terminal::alignedWithTerminal() const$/;"	f	class:Terminal
alignment	titleblock/templatecellwidget.cpp	/^int TitleBlockTemplateCellWidget::alignment() const {$/;"	f	class:TitleBlockTemplateCellWidget
alignment	titleblockcell.h	/^	int alignment;                     \/\/\/< Where the label+text should be displayed within the visual cell$/;"	m	class:TitleBlockCell
alignmentActionTriggered	richtext/richtexteditor.cpp	/^void RichTextEditorToolBar::alignmentActionTriggered(QAction *action)$/;"	f	class:qdesigner_internal::RichTextEditorToolBar
allCellsAreSelected	titleblock/templatecellsset.cpp	/^bool TitleBlockTemplateCellsSet::allCellsAreSelected() const {$/;"	f	class:TitleBlockTemplateCellsSet
allElementsPositionText	qetgraphicsitem/crossrefitem.cpp	/^void CrossRefItem::allElementsPositionText(QString &no_str, QString &nc_str, const bool &add_prefix) const {$/;"	f	class:CrossRefItem
all_pages_view_	qetprintpreviewdialog.h	/^	QAction *all_pages_view_;$/;"	m	class:QETPrintPreviewDialog
allowedColor	qetgraphicsitem/terminal.cpp	/^QColor Terminal::allowedColor      = QColor(Qt::darkGreen);$/;"	m	class:Terminal	file:
allowedColor	qetgraphicsitem/terminal.h	/^	static QColor allowedColor;$/;"	m	class:Terminal
already_exists_	basicmoveelementshandler.h	/^	QET::Action already_exists_;$/;"	m	class:BasicMoveElementsHandler
always_erase_	interactivemoveelementshandler.h	/^	bool always_erase_;           \/\/\/< Whether to systematically erase conflicting targets without bothering users$/;"	m	class:InteractiveMoveElementsHandler
always_skip_	interactivemoveelementshandler.h	/^	bool always_skip_;            \/\/\/< Whether to systematically ignore conflicting targets without bothering users$/;"	m	class:InteractiveMoveElementsHandler
analyzeSelectedCells	titleblock/templateview.cpp	/^void TitleBlockTemplateView::analyzeSelectedCells(bool *can_merge, bool *can_split, int *count) {$/;"	f	class:TitleBlockTemplateView
angle	editor/arceditor.h	/^	QSpinBox *angle, *start_angle;$/;"	m	class:ArcEditor
annotation_tab	ui/ui_dialogautonum.h	/^    QWidget *annotation_tab;$/;"	m	class:Ui_DialogAutoNum
antialiased	editor/graphicspart/customelementgraphicpart.h	/^		bool antialiased   () const {return _antialiased;}$/;"	f	class:CustomElementGraphicPart
antialiasing	editor/styleeditor.h	/^		QCheckBox *antialiasing;$/;"	m	class:StyleEditor
appearance_	configpages.h	/^	QGroupBox *appearance_;$/;"	m	class:GeneralConfigurationPage
applied_col_span	titleblockcell.h	/^	int applied_col_span;              \/\/\/< Actually applied column span$/;"	m	class:TitleBlockCell
applied_col_span_before_	titleblock/templatecommands.h	/^	int applied_col_span_before_;          \/\/\/< the applied_col_span attribute of the spanning cell before splitting$/;"	m	class:SplitCellsCommand
applied_col_span_before_	titleblock/templatecommands.h	/^	int applied_col_span_before_; \/\/\/< the applied_col_span attribute of the spanning cell before the merge$/;"	m	class:MergeCellsCommand
applied_rotation_angle_	diagramcommands.h	/^	double applied_rotation_angle_;$/;"	m	class:RotateTextsCommand
applied_rotation_angle_	diagramcommands.h	/^	qreal applied_rotation_angle_;$/;"	m	class:RotateElementsCommand
applied_row_span	titleblockcell.h	/^	int applied_row_span;              \/\/\/< Actually applied row span$/;"	m	class:TitleBlockCell
applied_row_span_before_	titleblock/templatecommands.h	/^	int applied_row_span_before_;          \/\/\/< the applied_row_span attribute of the spanning cell before splitting$/;"	m	class:SplitCellsCommand
applied_row_span_before_	titleblock/templatecommands.h	/^	int applied_row_span_before_; \/\/\/< the applied_row_span attribute of the spanning cell before the merge$/;"	m	class:MergeCellsCommand
apply	titleblock/templatecommands.cpp	/^void ModifyTemplateDimension::apply(const TitleBlockDimension &dimension) {$/;"	f	class:ModifyTemplateDimension
apply	titleblock/templatecommands.cpp	/^void ModifyTemplateGridCommand::apply(bool undo) {$/;"	f	class:ModifyTemplateGridCommand
apply	ui/elementinfowidget.cpp	/^bool ElementInfoWidget::apply() {$/;"	f	class:ElementInfoWidget
apply	ui/linksingleelementwidget.cpp	/^void LinkSingleElementWidget::apply() {$/;"	f	class:LinkSingleElementWidget
apply	ui/masterpropertieswidget.cpp	/^bool MasterPropertiesWidget::apply() {$/;"	f	class:MasterPropertiesWidget
applyAll	ui/conductorpropertiesdialog.cpp	/^bool ConductorPropertiesDialog::applyAll() const {$/;"	f	class:ConductorPropertiesDialog
applyBringForward	editor/editorcommands.cpp	/^void ChangeZValueCommand::applyBringForward(const QList<QGraphicsItem *> &items_list) {$/;"	f	class:ChangeZValueCommand
applyCellSpan	titleblocktemplate.cpp	/^void TitleBlockTemplate::applyCellSpan(TitleBlockCell *cell) {$/;"	f	class:TitleBlockTemplate
applyCellSpans	titleblocktemplate.cpp	/^void TitleBlockTemplate::applyCellSpans() {$/;"	f	class:TitleBlockTemplate
applyColumnsWidths	titleblock/templateview.cpp	/^void TitleBlockTemplateView::applyColumnsWidths(bool animate) {$/;"	f	class:TitleBlockTemplateView
applyConf	configdialog.cpp	/^void ConfigDialog::applyConf() {$/;"	f	class:ConfigDialog
applyConf	configpages.cpp	/^void ExportConfigPage::applyConf() {$/;"	f	class:ExportConfigPage
applyConf	configpages.cpp	/^void GeneralConfigurationPage::applyConf() {$/;"	f	class:GeneralConfigurationPage
applyConf	configpages.cpp	/^void NewDiagramPage::applyConf() {$/;"	f	class:NewDiagramPage
applyConf	configpages.cpp	/^void PrintConfigPage::applyConf() {$/;"	f	class:PrintConfigPage
applyConf	projectconfigpages.cpp	/^void ProjectConfigPage::applyConf() {$/;"	f	class:ProjectConfigPage
applyCurrentFilter	elementspanel.cpp	/^void ElementsPanel::applyCurrentFilter(const QList<QTreeWidgetItem *> &items) {$/;"	f	class:ElementsPanel
applyEnable	ui/selectautonumw.cpp	/^void SelectAutonumW::applyEnable(bool b) {$/;"	f	class:SelectAutonumW
applyInformations	editor/elementscene.cpp	/^bool ElementScene::applyInformations(const QDomDocument &xml_document, QString *error_message) {$/;"	f	class:ElementScene
applyLower	editor/editorcommands.cpp	/^void ChangeZValueCommand::applyLower(const QList<QGraphicsItem *> &items_list) {$/;"	f	class:ChangeZValueCommand
applyMovement	editor/elementview.cpp	/^QRectF ElementView::applyMovement(const QRectF &start, const QPointF &offset) {$/;"	f	class:ElementView
applyMovementToRect	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::applyMovementToRect(int movement_type, const QPointF &movement, QRectF &rect) {$/;"	f	class:ElementPrimitiveDecorator
applyProjectConf	projectconfigpages.cpp	/^void ProjectAutoNumConfigPage::applyProjectConf() {}$/;"	f	class:ProjectAutoNumConfigPage
applyProjectConf	projectconfigpages.cpp	/^void ProjectMainConfigPage::applyProjectConf() {$/;"	f	class:ProjectMainConfigPage
applyProperties	diagram.cpp	/^ExportProperties Diagram::applyProperties(const ExportProperties &new_properties) {$/;"	f	class:Diagram
applyRaise	editor/editorcommands.cpp	/^void ChangeZValueCommand::applyRaise(const QList<QGraphicsItem *> &items_list) {$/;"	f	class:ChangeZValueCommand
applyReadOnly	diagramview.cpp	/^void DiagramView::applyReadOnly() {$/;"	f	class:DiagramView
applyRotation	qetgraphicsitem/diagramtextitem.cpp	/^void DiagramTextItem::applyRotation(const qreal &angle) {$/;"	f	class:DiagramTextItem
applyRotation	qetgraphicsitem/qetgraphicsitem.cpp	/^void QetGraphicsItem::applyRotation(const qreal &angle) {$/;"	f	class:QetGraphicsItem
applyRowColNums	titleblocktemplate.cpp	/^void TitleBlockTemplate::applyRowColNums() {$/;"	f	class:TitleBlockTemplate
applyRowsHeights	titleblock/templateview.cpp	/^void TitleBlockTemplateView::applyRowsHeights(bool animate) {$/;"	f	class:TitleBlockTemplateView
applySendBackward	editor/editorcommands.cpp	/^void ChangeZValueCommand::applySendBackward(const QList<QGraphicsItem *> &items_list) {$/;"	f	class:ChangeZValueCommand
applyStylesToQPainter	editor/graphicspart/customelementgraphicpart.cpp	/^void CustomElementGraphicPart::applyStylesToQPainter(QPainter &painter) const$/;"	f	class:CustomElementGraphicPart
applyText	conductorautonumerotation.cpp	/^void ConductorAutoNumerotation::applyText(QString t) {$/;"	f	class:ConductorAutoNumerotation
apply_columns_widths_count_	titleblock/templateview.h	/^	int apply_columns_widths_count_;$/;"	m	class:TitleBlockTemplateView
apply_rows_heights_count_	titleblock/templateview.h	/^	int apply_rows_heights_count_;$/;"	m	class:TitleBlockTemplateView
ar	qeticons.cpp	/^		QIcon ar;$/;"	m	namespace:QET::Icons	file:
arcs	qetgraphicsitem/customelement.cpp	/^QList<QVector<qreal> *> CustomElement::arcs() const {$/;"	f	class:CustomElement
arguments	qetarguments.cpp	/^QList<QString> QETArguments::arguments() const {$/;"	f	class:QETArguments
askUser	integrationmoveelementshandler.cpp	/^QET::Action IntegrationMoveElementsHandler::askUser(ElementDefinition *src, ElementDefinition *dst) {$/;"	f	class:IntegrationMoveElementsHandler
askUser	titleblock/integrationmovetemplateshandler.cpp	/^QET::Action IntegrationMoveTitleBlockTemplatesHandler::askUser(const TitleBlockTemplateLocation &src, const TitleBlockTemplateLocation &dst) {$/;"	f	class:IntegrationMoveTitleBlockTemplatesHandler
askUserForFilePath	projectview.cpp	/^QString ProjectView::askUserForFilePath(bool assign) {$/;"	f	class:ProjectView
associatedUndo	ui/elementinfowidget.cpp	/^QUndoCommand* ElementInfoWidget::associatedUndo() const {$/;"	f	class:ElementInfoWidget
associatedUndo	ui/masterpropertieswidget.cpp	/^QUndoCommand* MasterPropertiesWidget::associatedUndo() const {$/;"	f	class:MasterPropertiesWidget
attribute	titleblockcell.cpp	/^QVariant TitleBlockCell::attribute(const QString &attribute) {$/;"	f	class:TitleBlockCell
attributeIsAReal	qet.cpp	/^bool QET::attributeIsAReal(const QDomElement &e, QString nom_attribut, qreal *reel) {$/;"	f	class:QET
attributeIsAnInteger	qet.cpp	/^bool QET::attributeIsAnInteger(const QDomElement &e, QString nom_attribut, int *entier) {$/;"	f	class:QET
attributeName	titleblockcell.cpp	/^QString TitleBlockCell::attributeName(const QString &attribute) {$/;"	f	class:TitleBlockCell
author	bordertitleblock.h	/^	QString author() const { return(btb_author_); }$/;"	f	class:BorderTitleBlock
author	titleblockproperties.h	/^	QString author;           \/\/\/< Author of the diagram\/folio (displayed by the default template)$/;"	m	class:TitleBlockProperties
authorsTab	aboutqet.cpp	/^QWidget *AboutQET::authorsTab() const {$/;"	f	class:AboutQET
autoConductor	qetproject.cpp	/^bool QETProject::autoConductor() const$/;"	f	class:QETProject
autoPos	qetgraphicsitem/commentitem.cpp	/^void CommentItem::autoPos() {$/;"	f	class:CommentItem
autoPos	qetgraphicsitem/crossrefitem.cpp	/^void CrossRefItem::autoPos() {$/;"	f	class:CrossRefItem
availableCollections	qetapp.cpp	/^QList<ElementsCollection *> QETApp::availableCollections()$/;"	f	class:QETApp
availableElements	ui/linksingleelementwidget.cpp	/^QList <Element *> LinkSingleElementWidget::availableElements() {$/;"	f	class:LinkSingleElementWidget
availableTitleBlockTemplatesCollections	qetapp.cpp	/^QList<TitleBlockTemplatesCollection *> QETApp::availableTitleBlockTemplatesCollections()$/;"	f	class:QETApp
bMouseOver	qetgraphicsitem/conductor.h	/^	bool				bMouseOver;$/;"	m	class:Conductor
bMouseOver	qetgraphicsitem/diagramtextitem.h	/^	bool bMouseOver;$/;"	m	class:DiagramTextItem
background_color	diagram.cpp	/^QColor		Diagram::background_color = Qt::white;$/;"	m	class:Diagram	file:
background_color	diagram.h	/^		static QColor background_color;$/;"	m	class:Diagram
background_color	titleblock/helpercell.h	/^	QColor background_color;     \/\/\/< Background color when rendering this cell$/;"	m	class:HelperCell
backup_diagram_background_color	diagramprintdialog.h	/^	QColor backup_diagram_background_color;$/;"	m	class:DiagramPrintDialog
baseName	elementslocation.cpp	/^QString ElementsLocation::baseName() const {$/;"	f	class:ElementsLocation
be	qeticons.cpp	/^		QIcon be;$/;"	m	namespace:QET::Icons	file:
before_	titleblock/templatecommands.h	/^	TitleBlockDimension before_;  \/\/\/< Size of the row\/column before it is changed$/;"	m	class:ModifyTemplateDimension
before_mov_pos_	qetgraphicsitem/conductortextitem.h	/^	QPointF before_mov_pos_;$/;"	m	class:ConductorTextItem
before_mov_text_pos_	qetgraphicsitem/conductor.h	/^	QPointF before_mov_text_pos_;$/;"	m	class:Conductor
beginCollection	elementscollectioncache.cpp	/^void ElementsCollectionCache::beginCollection(ElementsCollection *collection) {$/;"	f	class:ElementsCollectionCache
beginMoveElementTexts	diagram.cpp	/^int Diagram::beginMoveElementTexts(QGraphicsItem *driver_item) {$/;"	f	class:Diagram
beginMoveElements	diagram.cpp	/^int Diagram::beginMoveElements(QGraphicsItem *driver_item) {$/;"	f	class:Diagram
beginMovement	elementsmover.cpp	/^int ElementsMover::beginMovement(Diagram *diagram, QGraphicsItem *driver_item) {$/;"	f	class:ElementsMover
beginMovement	elementtextsmover.cpp	/^int ElementTextsMover::beginMovement(Diagram *diagram, QGraphicsItem *driver_item) {$/;"	f	class:ElementTextsMover
beginOrientation	conductorprofile.h	/^	Qet::Orientation beginOrientation;$/;"	m	class:ConductorProfile
behavior	editor/elementscene.h	/^		Behavior behavior;$/;"	m	class:ElementScene
bends	qetgraphicsitem/conductor.cpp	/^QList<ConductorBend> Conductor::bends() const {$/;"	f	class:Conductor
bitmapLogo	titleblocktemplate.cpp	/^QPixmap TitleBlockTemplate::bitmapLogo(const QString &logo_name) const {$/;"	f	class:TitleBlockTemplate
bitmap_logos_	titleblocktemplate.h	/^	QHash<QString, QPixmap>        bitmap_logos_;    \/\/\/< Pixmaps for bitmap logos$/;"	m	class:TitleBlockTemplate
black_color	editor/styleeditor.h	/^		QRadioButton *black_color, *white_color,  *normal_style, *dashed_style, *dashdotted_style, *dotted_style, *green_color, *red_color, *blue_color;$/;"	m	class:StyleEditor
black_color_	editor/texteditor.h	/^	QRadioButton *black_color_, *white_color_;$/;"	m	class:TextEditor
black_filling	editor/styleeditor.h	/^		QRadioButton *black_filling, *white_filling, *green_filling, *red_filling, *blue_filling;$/;"	m	class:StyleEditor
blue_color	editor/styleeditor.h	/^		QRadioButton *black_color, *white_color,  *normal_style, *dashed_style, *dashdotted_style, *dotted_style, *green_color, *red_color, *blue_color;$/;"	m	class:StyleEditor
blue_filling	editor/styleeditor.h	/^		QRadioButton *black_filling, *white_filling, *green_filling, *red_filling, *blue_filling;$/;"	m	class:StyleEditor
border	diagram.cpp	/^QRectF Diagram::border() const$/;"	f	class:Diagram
borderFromXml	bordertitleblock.cpp	/^void BorderTitleBlock::borderFromXml(const QDomElement &xml_elmt) {$/;"	f	class:BorderTitleBlock
borderHeight	bordertitleblock.h	/^	qreal borderHeight() const { return(diagramHeight() + titleBlockHeight()); }$/;"	f	class:BorderTitleBlock
borderIsDisplayed	bordertitleblock.h	/^	bool borderIsDisplayed() const { return(display_border_); }$/;"	f	class:BorderTitleBlock
borderOptions	diagram.h	/^inline Diagram::BorderOptions Diagram::borderOptions() {$/;"	f	class:Diagram
borderToXml	bordertitleblock.cpp	/^void BorderTitleBlock::borderToXml(QDomElement &xml_elmt) {$/;"	f	class:BorderTitleBlock
borderWidth	bordertitleblock.h	/^	qreal borderWidth()  const { return(diagramWidth()); }$/;"	f	class:BorderTitleBlock
border_and_titleblock	diagram.h	/^		BorderTitleBlock border_and_titleblock;$/;"	m	class:Diagram
border_gb	ui/ui_borderpropertieswidget.h	/^    QGroupBox *border_gb;$/;"	m	class:Ui_BorderPropertiesWidget
bottomRightCell	titleblock/templatecellsset.cpp	/^TitleBlockTemplateVisualCell *TitleBlockTemplateCellsSet::bottomRightCell() const {$/;"	f	class:TitleBlockTemplateCellsSet
boundingRect	editor/elementprimitivedecorator.cpp	/^QRectF ElementPrimitiveDecorator::boundingRect() const {$/;"	f	class:ElementPrimitiveDecorator
boundingRect	editor/graphicspart/abstractpartellipse.cpp	/^QRectF AbstractPartEllipse::boundingRect() const$/;"	f	class:AbstractPartEllipse
boundingRect	editor/graphicspart/partline.cpp	/^QRectF PartLine::boundingRect() const$/;"	f	class:PartLine
boundingRect	editor/graphicspart/partpolygon.cpp	/^QRectF PartPolygon::boundingRect() const$/;"	f	class:PartPolygon
boundingRect	editor/graphicspart/partrectangle.cpp	/^QRectF PartRectangle::boundingRect() const$/;"	f	class:PartRectangle
boundingRect	editor/graphicspart/partterminal.cpp	/^QRectF PartTerminal::boundingRect() const$/;"	f	class:PartTerminal
boundingRect	editor/graphicspart/parttext.cpp	/^QRectF PartText::boundingRect() const {$/;"	f	class:PartText
boundingRect	editor/graphicspart/parttextfield.cpp	/^QRectF PartTextField::boundingRect() const {$/;"	f	class:PartTextField
boundingRect	qetgraphicsitem/commentitem.cpp	/^QRectF CommentItem::boundingRect() const {$/;"	f	class:CommentItem
boundingRect	qetgraphicsitem/conductor.cpp	/^QRectF Conductor::boundingRect() const {$/;"	f	class:Conductor
boundingRect	qetgraphicsitem/crossrefitem.cpp	/^QRectF CrossRefItem::boundingRect() const {$/;"	f	class:CrossRefItem
boundingRect	qetgraphicsitem/diagramimageitem.cpp	/^QRectF DiagramImageItem::boundingRect() const {$/;"	f	class:DiagramImageItem
boundingRect	qetgraphicsitem/element.cpp	/^QRectF Element::boundingRect() const {$/;"	f	class:Element
boundingRect	qetgraphicsitem/qetshapeitem.cpp	/^QRectF QetShapeItem::boundingRect() const {$/;"	f	class:QetShapeItem
boundingRect	qetgraphicsitem/terminal.cpp	/^QRectF Terminal::boundingRect() const {$/;"	f	class:Terminal
boundingRect	titleblock/helpercell.cpp	/^QRectF HelperCell::boundingRect() const {$/;"	f	class:HelperCell
boundingRect	titleblock/templatevisualcell.cpp	/^QRectF TitleBlockTemplateVisualCell::boundingRect() const {$/;"	f	class:TitleBlockTemplateVisualCell
boundingRectFromXml	editor/elementscene.cpp	/^QRectF ElementScene::boundingRectFromXml(const QDomDocument &xml_document) {$/;"	f	class:ElementScene
bpw	configpages.h	/^	BorderPropertiesWidget     *bpw;       \/\/\/< Widget to edit default diagram dimensions$/;"	m	class:NewDiagramPage
br_	qetgraphicsitem/terminal.h	/^	QRectF *br_;$/;"	m	class:Terminal
browseFilePrintTypeDialog	diagramprintdialog.cpp	/^void DiagramPrintDialog::browseFilePrintTypeDialog() {$/;"	f	class:DiagramPrintDialog
browse_button_	diagramprintdialog.h	/^	QPushButton *browse_button_;$/;"	m	class:DiagramPrintDialog
btb_author_	bordertitleblock.h	/^	QString btb_author_;$/;"	m	class:BorderTitleBlock
btb_date_	bordertitleblock.h	/^	QDate   btb_date_;$/;"	m	class:BorderTitleBlock
btb_filename_	bordertitleblock.h	/^	QString btb_filename_;$/;"	m	class:BorderTitleBlock
btb_final_folio_	bordertitleblock.h	/^	QString btb_final_folio_;$/;"	m	class:BorderTitleBlock
btb_folio_	bordertitleblock.h	/^	QString btb_folio_;$/;"	m	class:BorderTitleBlock
btb_title_	bordertitleblock.h	/^	QString btb_title_;$/;"	m	class:BorderTitleBlock
build	exportpropertieswidget.cpp	/^void ExportPropertiesWidget::build() {$/;"	f	class:ExportPropertiesWidget
build	qetgraphicsitem/diagramtextitem.cpp	/^void DiagramTextItem::build() {$/;"	f	class:DiagramTextItem
build	qetgraphicsitem/elementtextitem.cpp	/^void ElementTextItem::build() {$/;"	f	class:ElementTextItem
build	qetprintpreviewdialog.cpp	/^void QETPrintPreviewDialog::build() {$/;"	f	class:QETPrintPreviewDialog
build	qtextorientationspinboxwidget.cpp	/^void QTextOrientationSpinBoxWidget::build() {$/;"	f	class:QTextOrientationSpinBoxWidget
buildConnections	projectconfigpages.cpp	/^void ProjectAutoNumConfigPage::buildConnections() {$/;"	f	class:ProjectAutoNumConfigPage
buildDialog	elementscategoryeditor.cpp	/^void ElementsCategoryEditor::buildDialog() {$/;"	f	class:ElementsCategoryEditor
buildFilterList	elementspanel.cpp	/^void ElementsPanel::buildFilterList() {$/;"	f	class:ElementsPanel
buildFromXml	qetgraphicsitem/customelement.cpp	/^bool CustomElement::buildFromXml(const QDomElement &xml_def_elmt, int *state) {$/;"	f	class:CustomElement
buildGrid	diagramfoliolist.cpp	/^void DiagramFolioList::buildGrid(QPainter *qp, const QRectF &rect, int rows, int tables, qreal colWidths[])$/;"	f	class:DiagramFolioList
buildHeaderContact	qetgraphicsitem/crossrefitem.cpp	/^void CrossRefItem::buildHeaderContact() {$/;"	f	class:CrossRefItem
buildInterface	ui/elementinfowidget.cpp	/^void ElementInfoWidget::buildInterface() {$/;"	f	class:ElementInfoWidget
buildInterface	ui/elementpropertieswidget.cpp	/^void elementpropertieswidget::buildInterface() {$/;"	f	class:elementpropertieswidget
buildInterface	ui/elementselectorwidget.cpp	/^void ElementSelectorWidget::buildInterface() {$/;"	f	class:ElementSelectorWidget
buildInterface	ui/linksingleelementwidget.cpp	/^void LinkSingleElementWidget::buildInterface() {$/;"	f	class:LinkSingleElementWidget
buildInterface	ui/masterpropertieswidget.cpp	/^void MasterPropertiesWidget::buildInterface() {$/;"	f	class:MasterPropertiesWidget
buildLayout	diagramschooser.cpp	/^void DiagramsChooser::buildLayout() {$/;"	f	class:DiagramsChooser
buildList	ui/linksingleelementwidget.cpp	/^void LinkSingleElementWidget::buildList() {$/;"	f	class:LinkSingleElementWidget
buildMenu	recentfiles.cpp	/^void RecentFiles::buildMenu() {$/;"	f	class:RecentFiles
buildPagesList	configdialog.cpp	/^void ConfigDialog::buildPagesList() {$/;"	f	class:ConfigDialog
buildPrintTypeDialog	diagramprintdialog.cpp	/^void DiagramPrintDialog::buildPrintTypeDialog() {$/;"	f	class:DiagramPrintDialog
buildRadioList	ui/potentialtextsdialog.cpp	/^void PotentialTextsDialog::buildRadioList() {$/;"	f	class:PotentialTextsDialog
buildSearchField	ui/linksingleelementwidget.cpp	/^void LinkSingleElementWidget::buildSearchField() {$/;"	f	class:LinkSingleElementWidget
buildStep1	newelementwizard.cpp	/^QWizardPage *NewElementWizard::buildStep1() {$/;"	f	class:NewElementWizard
buildStep2	newelementwizard.cpp	/^QWizardPage *NewElementWizard::buildStep2() {$/;"	f	class:NewElementWizard
buildStep3	newelementwizard.cpp	/^QWizardPage *NewElementWizard::buildStep3() {$/;"	f	class:NewElementWizard
buildSystemTrayMenu	qetapp.cpp	/^void QETApp::buildSystemTrayMenu()$/;"	f	class:QETApp
buildUi	ui/xrefpropertieswidget.cpp	/^void XRefPropertiesWidget::buildUi() {$/;"	f	class:XRefPropertiesWidget
buildUnlinkButton	ui/linksingleelementwidget.cpp	/^void LinkSingleElementWidget::buildUnlinkButton() {$/;"	f	class:LinkSingleElementWidget
buttonBox	richtext/ui_addlinkdialog.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_AddLinkDialog
buttonBox	ui/ui_addlinkdialog.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_AddLinkDialog
buttonBox	ui/ui_conductorpropertiesdialog.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_ConductorPropertiesDialog
buttonBox	ui/ui_potentialtextsdialog.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_PotentialTextsDialog
buttonBox	ui/ui_selectautonumw.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_SelectAutonumW
button_add_line	nameslistwidget.h	/^	QPushButton *button_add_line;$/;"	m	class:NamesListWidget
button_browse	exportpropertieswidget.h	/^	QPushButton *button_browse;$/;"	m	class:ExportPropertiesWidget
button_group1_	integrationmoveelementshandler.h	/^	QButtonGroup *button_group1_;$/;"	m	class:IntegrationMoveElementsHandler
button_group1_	titleblock/integrationmovetemplateshandler.h	/^	QButtonGroup *button_group1_;$/;"	m	class:IntegrationMoveTitleBlockTemplatesHandler
button_group2_	integrationmoveelementshandler.h	/^	QButtonGroup *button_group2_;$/;"	m	class:IntegrationMoveElementsHandler
button_group2_	titleblock/integrationmovetemplateshandler.h	/^	QButtonGroup *button_group2_;$/;"	m	class:IntegrationMoveTitleBlockTemplatesHandler
button_linked	ui/ui_linksingleelementwidget.h	/^    QPushButton *button_linked;$/;"	m	class:Ui_LinkSingleElementWidget
button_this	ui/ui_linksingleelementwidget.h	/^    QPushButton *button_this;$/;"	m	class:Ui_LinkSingleElementWidget
buttons	configdialog.h	/^	QDialogButtonBox *buttons;$/;"	m	class:ConfigDialog
buttons	elementscategoryeditor.h	/^	QDialogButtonBox *buttons;$/;"	m	class:ElementsCategoryEditor
buttons	exportdialog.h	/^	QDialogButtonBox *buttons;$/;"	m	class:ExportDialog
buttons_	diagramprintdialog.h	/^	QDialogButtonBox *buttons_;$/;"	m	class:DiagramPrintDialog
buttons_	elementdialog.h	/^	QDialogButtonBox *buttons_;$/;"	m	class:ElementDialog
buttons_	integrationmoveelementshandler.h	/^	QDialogButtonBox *buttons_;$/;"	m	class:IntegrationMoveElementsHandler
buttons_	qetprintpreviewdialog.h	/^	QDialogButtonBox *buttons_;$/;"	m	class:QETPrintPreviewDialog
buttons_	titleblock/dimensionwidget.h	/^	QDialogButtonBox *buttons_;        \/\/\/< Buttons to validate the dialog$/;"	m	class:TitleBlockDimensionWidget
buttons_	titleblock/integrationmovetemplateshandler.h	/^	QDialogButtonBox *buttons_;$/;"	m	class:IntegrationMoveTitleBlockTemplatesHandler
buttons_	titleblock/templatelogomanager.h	/^	QDialogButtonBox *buttons_;            \/\/\/< ok\/cancel buttons$/;"	m	class:TitleBlockTemplateLogoManager
cache	elementscollection.cpp	/^ElementsCollectionCache *ElementsCollection::cache() const {$/;"	f	class:ElementsCollection
cacheName	elementscollectioncache.cpp	/^bool ElementsCollectionCache::cacheName(const QString &path, const QDateTime &mtime) {$/;"	f	class:ElementsCollectionCache
cachePixmap	elementscollectioncache.cpp	/^bool ElementsCollectionCache::cachePixmap(const QString &path, const QDateTime &mtime) {$/;"	f	class:ElementsCollectionCache
cache_	elementscollection.h	/^	ElementsCollectionCache *cache_;$/;"	m	class:ElementsCollection
cache_	genericpanel.h	/^	ElementsCollectionCache *cache_; \/\/\/< Cache used to render elements$/;"	m	class:GenericPanel
cache_db_	elementscollectioncache.h	/^	QSqlDatabase cache_db_;         \/\/\/< Object providing access to the SQLite database this cache relies on$/;"	m	class:ElementsCollectionCache
calculateTextItemPosition	qetgraphicsitem/conductor.cpp	/^void Conductor::calculateTextItemPosition() {$/;"	f	class:Conductor
canBeLinkedTo	qetgraphicsitem/terminal.cpp	/^bool Terminal::canBeLinkedTo(Terminal *other_terminal)$/;"	f	class:Terminal
canClose	editor/qetelementeditor.cpp	/^bool QETElementEditor::canClose() {$/;"	f	class:QETElementEditor
canClose	titleblock/qettemplateeditor.cpp	/^bool QETTitleBlockTemplateEditor::canClose() {$/;"	f	class:QETTitleBlockTemplateEditor
canMerge	titleblock/templatecommands.cpp	/^bool MergeCellsCommand::canMerge(const TitleBlockTemplateCellsSet &merged_cells, TitleBlockTemplate *tbtemplate) {$/;"	f	class:MergeCellsCommand
canMove1stPointX	conductorsegment.cpp	/^bool ConductorSegment::canMove1stPointX(const qreal &asked_dx, qreal &possible_dx) const {$/;"	f	class:ConductorSegment
canMove1stPointY	conductorsegment.cpp	/^bool ConductorSegment::canMove1stPointY(const qreal &asked_dy, qreal &possible_dy) const {$/;"	f	class:ConductorSegment
canMove2ndPointX	conductorsegment.cpp	/^bool ConductorSegment::canMove2ndPointX(const qreal &asked_dx, qreal &possible_dx) const {$/;"	f	class:ConductorSegment
canMove2ndPointY	conductorsegment.cpp	/^bool ConductorSegment::canMove2ndPointY(const qreal &asked_dy, qreal &possible_dy) const {$/;"	f	class:ConductorSegment
canRotateSelection	diagram.cpp	/^bool Diagram::canRotateSelection() const {$/;"	f	class:Diagram
canSplit	titleblock/templatecommands.cpp	/^bool SplitCellsCommand::canSplit(const TitleBlockTemplateCellsSet &splitted_cells, TitleBlockTemplate *tbtemplate) {$/;"	f	class:SplitCellsCommand
cancel_elements_	elementspanelwidget.h	/^	QAction *copy_elements_, *move_elements_, *cancel_elements_;$/;"	m	class:ElementsPanelWidget
cascade_window	qetdiagrameditor.h	/^		QAction *cascade_window;     \/\/\/< Show MDI subwindows as cascade$/;"	m	class:QETDiagramEditor
cat_dir	fileelementscategory.h	/^	QDir cat_dir;$/;"	m	class:FileElementsCategory
catalonia	qeticons.cpp	/^		QIcon catalonia;$/;"	m	namespace:QET::Icons	file:
categories	elementdefinition.cpp	/^QList<ElementsCategory *> ElementDefinition::categories() {$/;"	f	class:ElementDefinition
categories	elementscollection.cpp	/^QList<ElementsCategory *> ElementsCollection::categories() {$/;"	f	class:ElementsCollection
categories	fileelementscategory.cpp	/^QList<ElementsCategory *> FileElementsCategory::categories() {$/;"	f	class:FileElementsCategory
categories	xmlelementscategory.cpp	/^QList<ElementsCategory *> XmlElementsCategory::categories() {$/;"	f	class:XmlElementsCategory
categories_	fileelementscategory.h	/^	QHash<QString, FileElementsCategory  *> categories_;$/;"	m	class:FileElementsCategory
categories_	xmlelementscategory.h	/^	QHash<QString, XmlElementsCategory  *> categories_;$/;"	m	class:XmlElementsCategory
categories_list	newelementwizard.h	/^	ElementsCategoriesWidget *categories_list;$/;"	m	class:NewElementWizard
category	elementdefinition.cpp	/^ElementsCategory *ElementDefinition::category(const QString &) {$/;"	f	class:ElementDefinition
category	elementscategorydeleter.h	/^	ElementsCollectionItem *category;$/;"	m	class:ElementsCategoryDeleter
category	elementscategoryeditor.h	/^	ElementsCategory *category;$/;"	m	class:ElementsCategoryEditor
category	elementscollection.cpp	/^ElementsCategory *ElementsCollection::category(const QString &cat_path) {$/;"	f	class:ElementsCollection
category	fileelementscategory.cpp	/^ElementsCategory *FileElementsCategory::category(const QString &cat_path) {$/;"	f	class:FileElementsCategory
category	xmlelementscategory.cpp	/^ElementsCategory *XmlElementsCategory::category(const QString &cat_path) {$/;"	f	class:XmlElementsCategory
categoryAlreadyExists	basicmoveelementshandler.cpp	/^QET::Action BasicMoveElementsHandler::categoryAlreadyExists(ElementsCategory *, ElementsCategory  *) {$/;"	f	class:BasicMoveElementsHandler
categoryAlreadyExists	interactivemoveelementshandler.cpp	/^QET::Action InteractiveMoveElementsHandler::categoryAlreadyExists(ElementsCategory *src, ElementsCategory  *dst) {$/;"	f	class:InteractiveMoveElementsHandler
categoryForItem	elementspanel.cpp	/^ElementsCategory *ElementsPanel::categoryForItem(QTreeWidgetItem *qtwi) {$/;"	f	class:ElementsPanel
categoryForPos	elementspanel.cpp	/^ElementsCategory *ElementsPanel::categoryForPos(const QPoint &pos) {$/;"	f	class:ElementsPanel
categoryIsNotReadable	basicmoveelementshandler.cpp	/^QET::Action BasicMoveElementsHandler::categoryIsNotReadable(ElementsCategory *) {$/;"	f	class:BasicMoveElementsHandler
categoryIsNotReadable	interactivemoveelementshandler.cpp	/^QET::Action InteractiveMoveElementsHandler::categoryIsNotReadable(ElementsCategory *category) {$/;"	f	class:InteractiveMoveElementsHandler
categoryIsNotWritable	basicmoveelementshandler.cpp	/^QET::Action BasicMoveElementsHandler::categoryIsNotWritable(ElementsCategory *) {$/;"	f	class:BasicMoveElementsHandler
categoryIsNotWritable	interactivemoveelementshandler.cpp	/^QET::Action InteractiveMoveElementsHandler::categoryIsNotWritable(ElementsCategory *category) {$/;"	f	class:InteractiveMoveElementsHandler
categoryNames	elementscategory.cpp	/^NamesList ElementsCategory::categoryNames() const {$/;"	f	class:ElementsCategory
category_names	elementscategory.h	/^	NamesList           category_names;$/;"	m	class:ElementsCategory
ce_scene	editor/qetelementeditor.h	/^	ElementScene *ce_scene;$/;"	m	class:QETElementEditor
ce_view	editor/qetelementeditor.h	/^	ElementView *ce_view;$/;"	m	class:QETElementEditor
cell	titleblock/templatecommands.cpp	/^TitleBlockCell *ModifyTitleBlockCellCommand::cell() const {$/;"	f	class:ModifyTitleBlockCellCommand
cell	titleblock/templatevisualcell.cpp	/^TitleBlockCell *TitleBlockTemplateVisualCell::cell() const {$/;"	f	class:TitleBlockTemplateVisualCell
cell	titleblocktemplate.cpp	/^TitleBlockCell *TitleBlockTemplate::cell(int row, int col) const {$/;"	f	class:TitleBlockTemplate
cell_	titleblock/templatevisualcell.h	/^	TitleBlockCell *cell_;         \/\/\/< Previewed cell$/;"	m	class:TitleBlockTemplateVisualCell
cell_editor_image_layout_	titleblock/templatecellwidget.h	/^	QHBoxLayout   *cell_editor_image_layout_;$/;"	m	class:TitleBlockTemplateCellWidget
cell_editor_layout_	titleblock/templatecellwidget.h	/^	QVBoxLayout   *cell_editor_layout_;$/;"	m	class:TitleBlockTemplateCellWidget
cell_editor_text_layout_	titleblock/templatecellwidget.h	/^	QGridLayout   *cell_editor_text_layout_;$/;"	m	class:TitleBlockTemplateCellWidget
cell_editor_type_and_name_layout_	titleblock/templatecellwidget.h	/^	QHBoxLayout   *cell_editor_type_and_name_layout_;$/;"	m	class:TitleBlockTemplateCellWidget
cell_type	titleblockcell.h	/^	TemplateCellType cell_type;        \/\/\/< Cell type: empty, text, logo?$/;"	m	class:TitleBlockCell
cell_type_input_	titleblock/templatecellwidget.h	/^	QComboBox *cell_type_input_;$/;"	m	class:TitleBlockTemplateCellWidget
cell_type_label_	titleblock/templatecellwidget.h	/^	QLabel    *cell_type_label_;$/;"	m	class:TitleBlockTemplateCellWidget
cells	titleblock/templatecellsset.cpp	/^QSet<TitleBlockCell *> TitleBlockTemplateCellsSet::cells(bool include_spanned) const {$/;"	f	class:TitleBlockTemplateCellsSet
cells	titleblock/templatecommands.cpp	/^QList<TitleBlockCell *> ModifyTemplateGridCommand::cells() const {$/;"	f	class:ModifyTemplateGridCommand
cells	titleblock/templateview.cpp	/^TitleBlockTemplateCellsSet TitleBlockTemplateView::cells(const QRectF &rect) const {$/;"	f	class:TitleBlockTemplateView
cells	titleblock/templatevisualcell.cpp	/^QSet<TitleBlockCell *> TitleBlockTemplateVisualCell::cells() const {$/;"	f	class:TitleBlockTemplateVisualCell
cells_	titleblock/templatecommands.h	/^	QList<TitleBlockCell *> cells_; \/\/\/< Cells composing the inserted\/deleted row\/column$/;"	m	class:ModifyTemplateGridCommand
cells_	titleblocktemplate.h	/^	QList< QList<TitleBlockCell *> > cells_;         \/\/\/< Cells grid$/;"	m	class:TitleBlockTemplate
centerElementToOrigine	editor/elementscene.cpp	/^void ElementScene::centerElementToOrigine() {$/;"	f	class:ElementScene
centerToBottomDiagram	qetgraphicsitem/qgraphicsitemutility.cpp	/^bool centerToBottomDiagram (QGraphicsItem *item_to_center, Element *element_to_follow) {$/;"	f
centerToParentBottom	qetgraphicsitem/qgraphicsitemutility.cpp	/^bool centerToParentBottom(QGraphicsItem *item) {$/;"	f
centerX	editor/graphicspart/abstractpartellipse.h	/^		qreal centerX() const {return mapToScene(rect().center()).x() ;}$/;"	f	class:AbstractPartEllipse
centerY	editor/graphicspart/abstractpartellipse.h	/^		qreal centerY() const {return mapToScene(rect().center()).y();}$/;"	f	class:AbstractPartEllipse
center_view_	diagramview.h	/^		QPointF           center_view_;$/;"	m	class:DiagramView
center_view_	editor/elementview.h	/^	QPointF center_view_;$/;"	m	class:ElementView
cep	editor/editorcommands.h	/^	CustomElementPart *cep;$/;"	m	class:ChangePartCommand
changeCurrentTitleBlockTemplate	ui/titleblockpropertieswidget.cpp	/^void TitleBlockPropertiesWidget::changeCurrentTitleBlockTemplate(QString name) {$/;"	f	class:TitleBlockPropertiesWidget
changeGraphicsItem	qetgraphicsitem/qetshapeitem.cpp	/^void QetShapeItem::changeGraphicsItem(const ShapeType &newtype) {$/;"	f	class:QetShapeItem
changePreviewWidth	titleblock/templateview.cpp	/^void TitleBlockTemplateView::changePreviewWidth() {$/;"	f	class:TitleBlockTemplateView
change_preview_width_	titleblock/templateview.h	/^	QAction *change_preview_width_;$/;"	m	class:TitleBlockTemplateView
check	nameslistwidget.cpp	/^void NamesListWidget::check() {$/;"	f	class:NamesListWidget
checkBox	ui/ui_elementinfopartwidget.h	/^    QCheckBox *checkBox;$/;"	m	class:Ui_ElementInfoPartWidget
checkCell	titleblocktemplate.cpp	/^bool TitleBlockTemplate::checkCell(const QDomElement &xml_element, TitleBlockCell **titleblock_cell_ptr) {$/;"	f	class:TitleBlockTemplate
checkCellSpan	titleblocktemplate.cpp	/^bool TitleBlockTemplate::checkCellSpan(TitleBlockCell *cell) {$/;"	f	class:TitleBlockTemplate
checkDiagramsCount	qetprintpreviewdialog.cpp	/^void QETPrintPreviewDialog::checkDiagramsCount() {$/;"	f	class:QETPrintPreviewDialog
checkDialog	elementdialog.cpp	/^void ElementDialog::checkDialog() {$/;"	f	class:ElementDialog
checkElement	editor/qetelementeditor.cpp	/^bool QETElementEditor::checkElement()$/;"	f	class:QETElementEditor
checkOneName	nameslistwidget.cpp	/^bool NamesListWidget::checkOneName() {$/;"	f	class:NamesListWidget
checkPotential	conductorautonumerotation.cpp	/^void ConductorAutoNumerotation::checkPotential(Conductor *conductor) {$/;"	f	class:ConductorAutoNumerotation
checkRemainingWindows	qetapp.cpp	/^void QETApp::checkRemainingWindows()$/;"	f	class:QETApp
checkTableRows	diagramcontextwidget.cpp	/^void DiagramContextWidget::checkTableRows() {$/;"	f	class:DiagramContextWidget
checkToolbarsmenu	qetmainwindow.cpp	/^void QETMainWindow::checkToolbarsmenu() {$/;"	f	class:QETMainWindow
childItems	genericpanel.cpp	/^QList<QTreeWidgetItem *> GenericPanel::childItems(QTreeWidgetItem *item, QET::ItemType type, bool recursive) const {$/;"	f	class:GenericPanel
chooseColor	richtext/richtexteditor.cpp	/^void ColorAction::chooseColor()$/;"	f	class:qdesigner_internal::ColorAction
chosen_category	newelementwizard.h	/^	ElementsCategory *chosen_category;$/;"	m	class:NewElementWizard
chosen_file	newelementwizard.h	/^	QString chosen_file;$/;"	m	class:NewElementWizard
circles	qetgraphicsitem/customelement.cpp	/^QList<QRectF *> CustomElement::circles() const {$/;"	f	class:CustomElement
clean	nameslistwidget.cpp	/^void NamesListWidget::clean() {$/;"	f	class:NamesListWidget
cleanCurrentProject	qetdiagrameditor.cpp	/^void QETDiagramEditor::cleanCurrentProject() {$/;"	f	class:QETDiagramEditor
cleanEmptyCategories	qetproject.cpp	/^void QETProject::cleanEmptyCategories(MoveElementsHandler *handler) {$/;"	f	class:QETProject
cleanProject	projectview.cpp	/^int ProjectView::cleanProject() {$/;"	f	class:ProjectView
cleanUnusedElements	qetproject.cpp	/^void QETProject::cleanUnusedElements(MoveElementsHandler *handler) {$/;"	f	class:QETProject
cleanUnusedTitleBlocKTemplates	qetproject.cpp	/^void QETProject::cleanUnusedTitleBlocKTemplates() {$/;"	f	class:QETProject
cleanup	qetapp.cpp	/^void QETApp::cleanup()$/;"	f	class:QETApp
clear	diagramcontent.cpp	/^void DiagramContent::clear() {$/;"	f	class:DiagramContent
clear	diagramcontext.cpp	/^void DiagramContext::clear() {$/;"	f	class:DiagramContext
clear	diagramcontextwidget.cpp	/^void DiagramContextWidget::clear() {$/;"	f	class:DiagramContextWidget
clear	numerotationcontext.cpp	/^void NumerotationContext::clear () {$/;"	f	class:NumerotationContext
clear	qetarguments.cpp	/^void QETArguments::clear() {$/;"	f	class:QETArguments
clear	recentfiles.cpp	/^void RecentFiles::clear() {$/;"	f	class:RecentFiles
clear	titleblock/templatecommands.cpp	/^void ModifyTitleBlockCellCommand::clear() {$/;"	f	class:ModifyTitleBlockCellCommand
clear	ui/elementselectorwidget.cpp	/^void ElementSelectorWidget::clear() {$/;"	f	class:ElementSelectorWidget
clearFilterTextField	elementspanelwidget.cpp	/^void ElementsPanelWidget::clearFilterTextField() {$/;"	f	class:ElementsPanelWidget
clearNames	elementscategory.cpp	/^void ElementsCategory::clearNames() {$/;"	f	class:ElementsCategory
clearNames	nameslist.cpp	/^void NamesList::clearNames() {$/;"	f	class:NamesList
clearPanel	genericpanel.cpp	/^void GenericPanel::clearPanel() {$/;"	f	class:GenericPanel
clearToolsDock	editor/qetelementeditor.cpp	/^QWidget *QETElementEditor::clearToolsDock() {$/;"	f	class:QETElementEditor
clipboard	exportdialog.h	/^		QPushButton *clipboard;$/;"	m	class:ExportDialog::ExportDiagramLine
clipboardMayContainDiagram	diagram.cpp	/^bool Diagram::clipboardMayContainDiagram() {$/;"	f	class:Diagram
clipboardMayContainElement	editor/elementscene.cpp	/^bool ElementScene::clipboardMayContainElement() {$/;"	f	class:ElementScene
clipboard_mapper_	exportdialog.h	/^	QSignalMapper *clipboard_mapper_;$/;"	m	class:ExportDialog
clone	titleblocktemplate.cpp	/^TitleBlockTemplate *TitleBlockTemplate::clone() const {$/;"	f	class:TitleBlockTemplate
close	qetproject.cpp	/^bool QETProject::close() {$/;"	f	class:QETProject
closeCurrentProject	qetdiagrameditor.cpp	/^bool QETDiagramEditor::closeCurrentProject() {$/;"	f	class:QETDiagramEditor
closeEvent	editor/qetelementeditor.cpp	/^void QETElementEditor::closeEvent(QCloseEvent *qce) {$/;"	f	class:QETElementEditor
closeEvent	projectview.cpp	/^void ProjectView::closeEvent(QCloseEvent *qce) {$/;"	f	class:ProjectView
closeEvent	qetdiagrameditor.cpp	/^void QETDiagramEditor::closeEvent(QCloseEvent *qce) {$/;"	f	class:QETDiagramEditor
closeEvent	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::closeEvent(QCloseEvent *qce) {$/;"	f	class:QETTitleBlockTemplateEditor
closeEveryEditor	qetapp.cpp	/^bool QETApp::closeEveryEditor()$/;"	f	class:QETApp
closeProject	elementspanelwidget.cpp	/^void ElementsPanelWidget::closeProject() {$/;"	f	class:ElementsPanelWidget
closeProject	qetdiagrameditor.cpp	/^bool QETDiagramEditor::closeProject(ProjectView *project_view) {$/;"	f	class:QETDiagramEditor
closeProject	qetdiagrameditor.cpp	/^bool QETDiagramEditor::closeProject(QETProject *project) {$/;"	f	class:QETDiagramEditor
close_file	qetdiagrameditor.h	/^		QAction *close_file;			   \/\/\/< Close current project file$/;"	m	class:QETDiagramEditor
close_polygon	editor/polygoneditor.h	/^	QCheckBox close_polygon;$/;"	m	class:PolygonEditor
colWidths	diagramfoliolist.cpp	/^qreal DiagramFolioList::colWidths[4] = {0.1, 0.55, 0.2, 0.15};$/;"	m	class:DiagramFolioList	file:
colWidths	diagramfoliolist.h	/^	static qreal colWidths[4];$/;"	m	class:DiagramFolioList
col_span	titleblockcell.h	/^	int col_span;                      \/\/\/< number of extra columns spanned by this cell$/;"	m	class:TitleBlockCell
col_span_after_	titleblock/templatecommands.h	/^	int col_span_after_;  \/\/\/< the col_span attribute of the spanning cell after the merge$/;"	m	class:MergeCellsCommand
col_span_before_	titleblock/templatecommands.h	/^	int col_span_before_;                  \/\/\/< the col_span attribute of the spanning cell before splitting$/;"	m	class:SplitCellsCommand
col_span_before_	titleblock/templatecommands.h	/^	int col_span_before_; \/\/\/< the col_span attribute of the spanning cell before the merge$/;"	m	class:MergeCellsCommand
coll_path	fileelementscollection.h	/^	QString coll_path;$/;"	m	class:FileElementsCollection
collection	titleblock/templatelocationchooser.cpp	/^TitleBlockTemplatesCollection *TitleBlockTemplateLocationChooser::collection() const {$/;"	f	class:TitleBlockTemplateLocationChooser
collectionCache	qetapp.cpp	/^ElementsCollectionCache *QETApp::collectionCache()$/;"	f	class:QETApp
collectionItem	qetapp.cpp	/^ElementsCollectionItem *QETApp::collectionItem (const ElementsLocation &location, bool prefer_collections)$/;"	f	class:QETApp
collectionItemForItem	elementspanel.cpp	/^ElementsCollectionItem *ElementsPanel::collectionItemForItem(QTreeWidgetItem *qtwi) const {$/;"	f	class:ElementsPanel
collection_	qetproject.h	/^	XmlElementsCollection *collection_;$/;"	m	class:QETProject
collection_	titleblock/templatelocation.h	/^	TitleBlockTemplatesCollection *collection_; \/\/\/< Collection the template belongs to$/;"	m	class:TitleBlockTemplateLocation
collectionsRead	elementspanelwidget.cpp	/^void ElementsPanelWidget::collectionsRead() {$/;"	f	class:ElementsPanelWidget
collectionsReadFinished	elementspanelwidget.cpp	/^void ElementsPanelWidget::collectionsReadFinished() {$/;"	f	class:ElementsPanelWidget
collections_	titleblock/templatelocationchooser.h	/^	QComboBox *collections_;  \/\/\/< Collections combo box$/;"	m	class:TitleBlockTemplateLocationChooser
collections_cache_	qetapp.cpp	/^ElementsCollectionCache *QETApp::collections_cache_ = 0;$/;"	m	class:QETApp	file:
collections_cache_	qetapp.h	/^	static ElementsCollectionCache *collections_cache_;$/;"	m	class:QETApp
collections_index_	titleblock/templatelocationchooser.h	/^	QHash<int, TitleBlockTemplatesCollection *> collections_index_;$/;"	m	class:TitleBlockTemplateLocationChooser
color	conductorproperties.h	/^	QColor color;$/;"	m	class:ConductorProperties
color	editor/graphicspart/customelementgraphicpart.h	/^		Color color   () const {return _color;}$/;"	f	class:CustomElementGraphicPart
color	richtext/richtexteditor.cpp	/^    const QColor& color() const { return m_color; }$/;"	f	class:qdesigner_internal::ColorAction
colorChanged	richtext/richtexteditor.cpp	/^void RichTextEditorToolBar::colorChanged(const QColor &color)$/;"	f	class:qdesigner_internal::RichTextEditorToolBar
color_	editor/texteditor.h	/^	QButtonGroup *color_;$/;"	m	class:TextEditor
columnDimension	titleblocktemplate.cpp	/^TitleBlockDimension TitleBlockTemplate::columnDimension(int i) {$/;"	f	class:TitleBlockTemplate
columnTypeCount	titleblocktemplate.cpp	/^int TitleBlockTemplate::columnTypeCount(QET::TitleBlockColumnLength type) {$/;"	f	class:TitleBlockTemplate
columnTypeTotal	titleblocktemplate.cpp	/^int TitleBlockTemplate::columnTypeTotal(QET::TitleBlockColumnLength type) {$/;"	f	class:TitleBlockTemplate
columnsActions	titleblock/templateview.cpp	/^QList<QAction *> TitleBlockTemplateView::columnsActions() const {$/;"	f	class:TitleBlockTemplateView
columnsAreDisplayed	bordertitleblock.h	/^	bool columnsAreDisplayed() const { return(display_columns_); }$/;"	f	class:BorderTitleBlock
columnsCount	bordertitleblock.h	/^	int   columnsCount() const { return(columns_count_); }$/;"	f	class:BorderTitleBlock
columnsCount	titleblocktemplate.cpp	/^int TitleBlockTemplate::columnsCount() const {$/;"	f	class:TitleBlockTemplate
columnsDimensionsChanged	titleblock/templateview.cpp	/^void TitleBlockTemplateView::columnsDimensionsChanged() {$/;"	f	class:TitleBlockTemplateView
columnsHeaderHeight	bordertitleblock.h	/^	qreal columnsHeaderHeight() const { return(columns_header_height_); }$/;"	f	class:BorderTitleBlock
columnsTotalWidth	bordertitleblock.h	/^	qreal columnsTotalWidth() const { return(columns_count_ * columns_width_); }$/;"	f	class:BorderTitleBlock
columnsWidth	bordertitleblock.h	/^	qreal columnsWidth() const { return(columns_width_); }$/;"	f	class:BorderTitleBlock
columnsWidth	titleblocktemplate.cpp	/^QList<int> TitleBlockTemplate::columnsWidth(int total_width) const {$/;"	f	class:TitleBlockTemplate
columns_count	borderproperties.h	/^	int columns_count;            \/\/\/< Columns count$/;"	m	class:BorderProperties
columns_count_	bordertitleblock.h	/^	int columns_count_;$/;"	m	class:BorderTitleBlock
columns_header_height	borderproperties.h	/^	qreal columns_header_height;  \/\/\/< Column headers height$/;"	m	class:BorderProperties
columns_header_height_	bordertitleblock.h	/^	qreal columns_header_height_;$/;"	m	class:BorderTitleBlock
columns_width	borderproperties.h	/^	qreal columns_width;          \/\/\/< Columns width$/;"	m	class:BorderProperties
columns_width_	bordertitleblock.h	/^	qreal columns_width_;$/;"	m	class:BorderTitleBlock
columns_width_	titleblocktemplate.h	/^	QList<TitleBlockDimension> columns_width_;       \/\/\/< columns widths -- @see TitleBlockColDimension$/;"	m	class:TitleBlockTemplate
commonElementsCollection	qetapp.cpp	/^ElementsCollection *QETApp::commonElementsCollection()$/;"	f	class:QETApp
commonElementsDir	qetapp.cpp	/^QString QETApp::commonElementsDir()$/;"	f	class:QETApp
commonElementsDir	qetarguments.cpp	/^QString QETArguments::commonElementsDir() const {$/;"	f	class:QETArguments
commonElementsDirSpecified	qetarguments.cpp	/^bool QETArguments::commonElementsDirSpecified() const {$/;"	f	class:QETArguments
commonTitleBlockTemplatesCollection	qetapp.cpp	/^TitleBlockTemplatesFilesCollection *QETApp::commonTitleBlockTemplatesCollection()$/;"	f	class:QETApp
commonTitleBlockTemplatesDir	qetapp.cpp	/^QString QETApp::commonTitleBlockTemplatesDir()$/;"	f	class:QETApp
commonTitleBlockTemplatesDir	qetarguments.cpp	/^QString QETArguments::commonTitleBlockTemplatesDir() const {$/;"	f	class:QETArguments
commonTitleBlockTemplatesDirSpecified	qetarguments.cpp	/^bool QETArguments::commonTitleBlockTemplatesDirSpecified() const {$/;"	f	class:QETArguments
common_collection	qetapp.cpp	/^FileElementsCollection *QETApp::common_collection = 0;$/;"	m	class:QETApp	file:
common_collection	qetapp.h	/^	static FileElementsCollection *common_collection;$/;"	m	class:QETApp
common_collection_item_	elementspanel.h	/^	QTreeWidgetItem *common_collection_item_;      \/\/\/< pointer to the item representing the common elements collection$/;"	m	class:ElementsPanel
common_elements_dir	qetapp.cpp	/^QString QETApp::common_elements_dir = QString();$/;"	m	class:QETApp	file:
common_elements_dir	qetapp.h	/^	static QString common_elements_dir; \/\/\/< Directory containing the common elements collection$/;"	m	class:QETApp
common_elements_dir_	qetarguments.h	/^	QString common_elements_dir_;$/;"	m	class:QETArguments
common_tbt_collection_	qetapp.cpp	/^TitleBlockTemplatesFilesCollection *QETApp::common_tbt_collection_;$/;"	m	class:QETApp	file:
common_tbt_collection_	qetapp.h	/^	static TitleBlockTemplatesFilesCollection *common_tbt_collection_;$/;"	m	class:QETApp
common_tbt_collection_item_	elementspanel.h	/^	QTreeWidgetItem *common_tbt_collection_item_;  \/\/\/< pointer to the item representing the common templates collection$/;"	m	class:ElementsPanel
common_tbt_dir_	qetapp.cpp	/^QString QETApp::common_tbt_dir_ = QString();$/;"	m	class:QETApp	file:
common_tbt_dir_	qetapp.h	/^	static QString common_tbt_dir_; \/\/\/< Directory containing the common title block templates collection$/;"	m	class:QETApp
common_tbt_dir_	qetarguments.h	/^	QString common_tbt_dir_;$/;"	m	class:QETArguments
comparPos	qetgraphicsitem/element.cpp	/^bool comparPos(const Element *elmt1, const Element *elmt2) {$/;"	f
compareCanonicalFilePaths	qet.cpp	/^bool QET::compareCanonicalFilePaths(const QString &first, const QString &second) {$/;"	f	class:QET
complete_	titleblock/dimensionwidget.h	/^	bool complete_;                    \/\/\/< Whether or not this dialog is required to be complete, i.e. displaying also$/;"	m	class:TitleBlockDimensionWidget
componentRemoved	xmlelementscategory.cpp	/^void XmlElementsCategory::componentRemoved(const QString &path) {$/;"	f	class:XmlElementsCategory
componentWritten	qetproject.cpp	/^void QETProject::componentWritten() {$/;"	f	class:QETProject
componentWritten	xmlelementscategory.cpp	/^void XmlElementsCategory::componentWritten() {$/;"	f	class:XmlElementsCategory
componentWritten	xmlelementscollection.cpp	/^void XmlElementsCollection::componentWritten() {$/;"	f	class:XmlElementsCollection
conductor	diagramcommands.h	/^	Conductor *conductor;$/;"	m	class:ChangeConductorCommand
conductor	diagramcommands.h	/^	Conductor *conductor;$/;"	m	class:ChangeConductorPropertiesCommand
conductorAutoNum	qetproject.cpp	/^NumerotationContext QETProject::conductorAutoNum (const QString &key) const {$/;"	f	class:QETProject
conductorAutoNum	qetproject.cpp	/^QHash <QString, NumerotationContext> QETProject::conductorAutoNum() const {$/;"	f	class:QETProject
conductor_	conductorautonumerotation.h	/^		Conductor          *conductor_;$/;"	m	class:ConductorAutoNumerotation
conductor_bound	qetgraphicsitem/conductor.cpp	/^qreal Conductor::conductor_bound(qreal tobound, qreal bound, bool positive) {$/;"	f	class:Conductor
conductor_bound	qetgraphicsitem/conductor.cpp	/^qreal Conductor::conductor_bound(qreal tobound, qreal bound1, qreal bound2, qreal space) {$/;"	f	class:Conductor
conductor_brush	qetgraphicsitem/conductor.cpp	/^QBrush Conductor::conductor_brush = QBrush();$/;"	m	class:Conductor	file:
conductor_brush	qetgraphicsitem/conductor.h	/^	static QBrush conductor_brush;$/;"	m	class:Conductor
conductor_default	qetdiagrameditor.h	/^		QAction *conductor_default;  \/\/\/< Show a dialog to edit default conductor properties$/;"	m	class:QETDiagramEditor
conductor_list	conductorautonumerotation.h	/^		QSet <Conductor *>  conductor_list;$/;"	m	class:ConductorAutoNumerotation
conductor_pen	qetgraphicsitem/conductor.cpp	/^QPen Conductor::conductor_pen = QPen();$/;"	m	class:Conductor	file:
conductor_pen	qetgraphicsitem/conductor.h	/^	static QPen conductor_pen;$/;"	m	class:Conductor
conductor_profiles	qetgraphicsitem/conductor.h	/^	ConductorProfilesGroup conductor_profiles;$/;"	m	class:Conductor
conductor_reset	qetdiagrameditor.h	/^		QAction *conductor_reset;    \/\/\/< Reset paths of selected conductors$/;"	m	class:QETDiagramEditor
conductor_setter_	diagram.h	/^		QGraphicsLineItem *conductor_setter_;$/;"	m	class:Diagram
conductors	diagramcommands.h	/^	QList<Conductor *> conductors;$/;"	m	class:ChangeSeveralConductorsPropertiesCommand
conductors	diagramcontent.cpp	/^QList<Conductor *> DiagramContent::conductors(int filter) const {$/;"	f	class:DiagramContent
conductors	qetgraphicsitem/customelement.cpp	/^QList<Conductor *> CustomElement::conductors() const {$/;"	f	class:CustomElement
conductors	qetgraphicsitem/terminal.cpp	/^QList<Conductor *> Terminal::conductors() const {$/;"	f	class:Terminal
conductorsAutonumName	diagram.cpp	/^QString Diagram::conductorsAutonumName() const {$/;"	f	class:Diagram
conductorsCount	qetgraphicsitem/terminal.h	/^inline int Terminal::conductorsCount() const {$/;"	f	class:Terminal
conductorsTextToMap	ui/potentialtextsdialog.cpp	/^void PotentialTextsDialog::conductorsTextToMap() {$/;"	f	class:PotentialTextsDialog
conductorsToMove	diagramcontent.h	/^	QSet<Conductor *> conductorsToMove;$/;"	m	class:DiagramContent
conductorsToUpdate	diagramcontent.h	/^	QSet<Conductor *> conductorsToUpdate;$/;"	m	class:DiagramContent
conductors_	qetgraphicsitem/terminal.h	/^	QList<Conductor *> conductors_;$/;"	m	class:Terminal
conductors_profiles	diagramcommands.h	/^	QHash<Conductor *, ConductorProfilesGroup> conductors_profiles;$/;"	m	class:ResetConductorCommand
configDir	qetapp.cpp	/^QString QETApp::configDir()$/;"	f	class:QETApp
configDir	qetarguments.cpp	/^QString QETArguments::configDir() const {$/;"	f	class:QETArguments
configDirSpecified	qetarguments.cpp	/^bool QETArguments::configDirSpecified() const {$/;"	f	class:QETArguments
config_dir	qetapp.cpp	/^QString QETApp::config_dir = QString();$/;"	m	class:QETApp	file:
config_dir	qetapp.h	/^	static QString config_dir; \/\/\/< Directory containing the user configuration and the custom elements collection$/;"	m	class:QETApp
config_dir_	qetarguments.h	/^	QString config_dir_;$/;"	m	class:QETArguments
configuration_layout	ui/ui_dialogautonum.h	/^    QVBoxLayout *configuration_layout;$/;"	m	class:Ui_DialogAutoNum
configuration_tab	ui/ui_dialogautonum.h	/^    QWidget *configuration_tab;$/;"	m	class:Ui_DialogAutoNum
configureQET	qetapp.cpp	/^void QETApp::configureQET()$/;"	f	class:QETApp
configure_action_	qetmainwindow.h	/^	QAction *configure_action_;              \/\/\/< Launch the QElectroTech configuration dialog$/;"	m	class:QETMainWindow
confirmLogoName	titleblock/templatelogomanager.cpp	/^QString TitleBlockTemplateLogoManager::confirmLogoName(const QString &initial_name) {$/;"	f	class:TitleBlockTemplateLogoManager
conflictDialogButtonClicked	interactivemoveelementshandler.cpp	/^void InteractiveMoveElementsHandler::conflictDialogButtonClicked(QAbstractButton *button) {$/;"	f	class:InteractiveMoveElementsHandler
conflictDialogFileNameFieldChanged	interactivemoveelementshandler.cpp	/^void InteractiveMoveElementsHandler::conflictDialogFileNameFieldChanged() {$/;"	f	class:InteractiveMoveElementsHandler
conflictDialogMainWidget	interactivemoveelementshandler.cpp	/^QWidget *InteractiveMoveElementsHandler::conflictDialogMainWidget() const {$/;"	f	class:InteractiveMoveElementsHandler
conflictDialogTitle	interactivemoveelementshandler.cpp	/^QString InteractiveMoveElementsHandler::conflictDialogTitle() const {$/;"	f	class:InteractiveMoveElementsHandler
conflict_buttons_	interactivemoveelementshandler.h	/^	QDialogButtonBox *conflict_buttons_;$/;"	m	class:InteractiveMoveElementsHandler
conflict_dialog_	interactivemoveelementshandler.h	/^	QDialog *conflict_dialog_;$/;"	m	class:InteractiveMoveElementsHandler
conflict_layout0_	interactivemoveelementshandler.h	/^	QVBoxLayout *conflict_layout0_;$/;"	m	class:InteractiveMoveElementsHandler
conflict_layout1_	interactivemoveelementshandler.h	/^	QHBoxLayout *conflict_layout1_;$/;"	m	class:InteractiveMoveElementsHandler
conflict_result_	interactivemoveelementshandler.h	/^	QET::Action conflict_result_;$/;"	m	class:InteractiveMoveElementsHandler
connected_elements	qetgraphicsitem/element.h	/^		QList <Element *> connected_elements;$/;"	m	class:Element
contains	diagramcontext.cpp	/^bool DiagramContext::contains(const QString &key) const {$/;"	f	class:DiagramContext
containsForbiddenCharacters	qet.cpp	/^bool QET::containsForbiddenCharacters(const QString &string) {$/;"	f	class:QET
containsPoint	qetgraphicsitem/conductor.cpp	/^bool Conductor::containsPoint(const QPointF &p) const {$/;"	f	class:Conductor
containsTerminals	editor/elementscene.cpp	/^bool ElementScene::containsTerminals() const {$/;"	f	class:ElementScene
content	diagram.cpp	/^DiagramContent Diagram::content() const {$/;"	f	class:Diagram
content	diagramcommands.h	/^	DiagramContent content;$/;"	m	class:PasteDiagramCommand
content_	diagramcontext.h	/^	QHash<QString, QVariant> content_;$/;"	m	class:DiagramContext
content_	editor/editorcommands.h	/^	ElementContent content_;$/;"	m	class:PastePartsCommand
content_	numerotationcontext.h	/^	QStringList content_;$/;"	m	class:NumerotationContext
content_layout	ui/ui_linksingleelementwidget.h	/^    QVBoxLayout *content_layout;$/;"	m	class:Ui_LinkSingleElementWidget
content_list	ui/elementselectorwidget.h	/^	QList <QWidget *>          content_list;$/;"	m	class:ElementSelectorWidget
content_show	diagramcontext.h	/^	QHash<QString, bool> content_show;$/;"	m	class:DiagramContext
content_to_move	diagramcommands.h	/^	DiagramContent content_to_move;$/;"	m	class:MoveElementsCommand
context	diagramcontextwidget.cpp	/^DiagramContext DiagramContextWidget::context() const {$/;"	f	class:DiagramContextWidget
context	titleblockproperties.h	/^	DiagramContext context;   \/\/\/< Container for the additional, user-defined fields$/;"	m	class:TitleBlockProperties
contextMenu	editor/elementscene.cpp	/^void ElementScene::contextMenu(QContextMenuEvent *event) {$/;"	f	class:ElementScene
contextMenu	editor/qetelementeditor.cpp	/^void QETElementEditor::contextMenu(QContextMenuEvent *event) {$/;"	f	class:QETElementEditor
contextMenuEvent	diagramview.cpp	/^void DiagramView::contextMenuEvent(QContextMenuEvent *e) {$/;"	f	class:DiagramView
contextMenuEvent	editor/elementview.cpp	/^void ElementView::contextMenuEvent(QContextMenuEvent *event) {$/;"	f	class:ElementView
contextMenuEvent	editor/graphicspart/parttext.cpp	/^void PartText::contextMenuEvent(QGraphicsSceneContextMenuEvent *event) {$/;"	f	class:PartText
contextMenuEvent	editor/graphicspart/parttextfield.cpp	/^void PartTextField::contextMenuEvent(QGraphicsSceneContextMenuEvent *event) {$/;"	f	class:PartTextField
contextMenuEvent	richtext/richtexteditor.cpp	/^void HtmlTextEdit::contextMenuEvent(QContextMenuEvent *event)$/;"	f	class:qdesigner_internal::HtmlTextEdit
contextMenuEvent	titleblock/helpercell.cpp	/^void HelperCell::contextMenuEvent(QGraphicsSceneContextMenuEvent *event) {$/;"	f	class:HelperCell
context_	numerotationcontextcommands.h	/^	NumerotationContext context_;$/;"	m	class:NumerotationContextCommands
context_	titleblocktemplaterenderer.h	/^	DiagramContext context_;$/;"	m	class:TitleBlockTemplateRenderer
context_menu	diagramview.h	/^		QMenu            *context_menu;$/;"	m	class:DiagramView
context_menu	elementspanelwidget.h	/^	QMenu *context_menu;$/;"	m	class:ElementsPanelWidget
continueMoveElementTexts	diagram.cpp	/^void Diagram::continueMoveElementTexts(const QPointF &movement) {$/;"	f	class:Diagram
continueMoveElements	diagram.cpp	/^void Diagram::continueMoveElements(const QPointF &movement) {$/;"	f	class:Diagram
continueMovement	elementsmover.cpp	/^void ElementsMover::continueMovement(const QPointF &movement) {$/;"	f	class:ElementsMover
continueMovement	elementtextsmover.cpp	/^void ElementTextsMover::continueMovement(const QPointF &movement) {$/;"	f	class:ElementTextsMover
contributorsTab	aboutqet.cpp	/^QWidget *AboutQET::contributorsTab() const {$/;"	f	class:AboutQET
convertPosition	bordertitleblock.cpp	/^DiagramPosition BorderTitleBlock::convertPosition(const QPointF &pos) {$/;"	f	class:BorderTitleBlock
convertPosition	diagram.cpp	/^DiagramPosition Diagram::convertPosition(const QPointF &pos) {$/;"	f	class:Diagram
copy	diagramview.cpp	/^void DiagramView::copy() {$/;"	f	class:DiagramView
copy	editor/elementscene.cpp	/^void ElementScene::copy() {$/;"	f	class:ElementScene
copy	editor/elementview.cpp	/^void ElementView::copy() {$/;"	f	class:ElementView
copy	editor/qetelementeditor.h	/^	QAction *cut, *copy, *paste, *paste_in_area, *paste_from_file, *paste_from_elmt;$/;"	m	class:QETElementEditor
copy	elementdefinition.cpp	/^ElementsCollectionItem *ElementDefinition::copy(ElementsCategory *target_category, MoveElementsHandler *handler, bool deep_copy) {$/;"	f	class:ElementDefinition
copy	elementdefinition.cpp	/^void ElementDefinition::copy(MoveElementsDescription *mvt_desc) {$/;"	f	class:ElementDefinition
copy	elementscategory.cpp	/^ElementsCollectionItem *ElementsCategory::copy(ElementsCategory *target_category, MoveElementsHandler *handler, bool deep_copy) {$/;"	f	class:ElementsCategory
copy	elementscategory.cpp	/^void ElementsCategory::copy(MoveElementsDescription *mvt_desc) {$/;"	f	class:ElementsCategory
copy	elementscollection.cpp	/^ElementsCollectionItem *ElementsCollection::copy(ElementsCategory *target_category, MoveElementsHandler *handler, bool deep_copy) {$/;"	f	class:ElementsCollection
copy	qetdiagrameditor.h	/^		QAction *copy;               \/\/\/< Copy selection to clipboard$/;"	m	class:QETDiagramEditor
copy	titleblock/templateview.cpp	/^QList<TitleBlockCell *> TitleBlockTemplateView::copy() {$/;"	f	class:TitleBlockTemplateView
copyAndPasteXml	editor/qetelementeditor.cpp	/^void QETElementEditor::copyAndPasteXml(const QDomDocument &xml_document) {$/;"	f	class:QETElementEditor
copyElementWithHandler	qetproject.cpp	/^ElementsLocation QETProject::copyElementWithHandler($/;"	f	class:QETProject
copyElements	elementspanelwidget.cpp	/^void ElementsPanelWidget::copyElements() {$/;"	f	class:ElementsPanelWidget
copyElements	elementspanelwidget.cpp	/^void ElementsPanelWidget::copyElements(ElementsCollectionItem *src, ElementsCollectionItem *dst) {$/;"	f	class:ElementsPanelWidget
copyPathForSelectedItem	elementspanelwidget.cpp	/^void ElementsPanelWidget::copyPathForSelectedItem() {$/;"	f	class:ElementsPanelWidget
copy_	titleblock/qettemplateeditor.h	/^	QAction *undo_, *redo_, *cut_, *copy_, *paste_, *edit_logos_, *edit_info_, *add_row_, *add_col_, *merge_cells_, *split_cell_;$/;"	m	class:QETTitleBlockTemplateEditor
copy_elements_	elementspanelwidget.h	/^	QAction *copy_elements_, *move_elements_, *cancel_elements_;$/;"	m	class:ElementsPanelWidget
copy_path	elementspanelwidget.h	/^	QAction *open_directory, *copy_path;$/;"	m	class:ElementsPanelWidget
correctAngle	qet.cpp	/^qreal QET::correctAngle(const qreal &angle) {$/;"	f	class:QET
correctRadioButtons	integrationmoveelementshandler.cpp	/^void IntegrationMoveElementsHandler::correctRadioButtons() {$/;"	f	class:IntegrationMoveElementsHandler
correctRadioButtons	titleblock/integrationmovetemplateshandler.cpp	/^void IntegrationMoveTitleBlockTemplatesHandler::correctRadioButtons() {$/;"	f	class:IntegrationMoveTitleBlockTemplatesHandler
count	diagramcontent.cpp	/^int DiagramContent::count(int filter) const {$/;"	f	class:DiagramContent
count	diagramcontext.cpp	/^int DiagramContext::count() {$/;"	f	class:DiagramContext
count	elementdefinition.cpp	/^int ElementDefinition::count() {$/;"	f	class:ElementDefinition
count	elementscategory.cpp	/^int ElementsCategory::count() {$/;"	f	class:ElementsCategory
count	elementscollection.cpp	/^int ElementsCollection::count() {$/;"	f	class:ElementsCollection
count	nameslist.cpp	/^int NamesList::count() const {$/;"	f	class:NamesList
cpw	configpages.h	/^	ConductorPropertiesWidget  *cpw;       \/\/\/< Widget to edit default conductor properties$/;"	m	class:NewDiagramPage
createCategory	elementdefinition.cpp	/^ElementsCategory *ElementDefinition::createCategory(const QString &) {$/;"	f	class:ElementDefinition
createCategory	elementscollection.cpp	/^ElementsCategory *ElementsCollection::createCategory(const QString &path) {$/;"	f	class:ElementsCollection
createCategory	fileelementscategory.cpp	/^ElementsCategory *FileElementsCategory::createCategory(const QString &path) {$/;"	f	class:FileElementsCategory
createCategory	qetapp.cpp	/^ElementsCategory *QETApp::createCategory (const ElementsLocation &location)$/;"	f	class:QETApp
createCategory	xmlelementscategory.cpp	/^ElementsCategory *XmlElementsCategory::createCategory(const QString &path) {$/;"	f	class:XmlElementsCategory
createCell	titleblocktemplate.cpp	/^TitleBlockCell *TitleBlockTemplate::createCell(const TitleBlockCell *existing_cell) {$/;"	f	class:TitleBlockTemplate
createCellsList	titleblocktemplate.cpp	/^QList<TitleBlockCell *> TitleBlockTemplate::createCellsList(int count) {$/;"	f	class:TitleBlockTemplate
createCheckableAction	richtext/richtexteditor.cpp	/^static QAction *createCheckableAction(const QIcon &icon, const QString &text,$/;"	f	namespace:qdesigner_internal
createColumn	titleblocktemplate.cpp	/^QList<TitleBlockCell *> TitleBlockTemplate::createColumn() {$/;"	f	class:TitleBlockTemplate
createElement	elementdefinition.cpp	/^ElementDefinition *ElementDefinition::createElement(const QString &) {$/;"	f	class:ElementDefinition
createElement	elementscollection.cpp	/^ElementDefinition *ElementsCollection::createElement(const QString &path) {$/;"	f	class:ElementsCollection
createElement	factory/elementfactory.cpp	/^Element * ElementFactory::createElement(const ElementsLocation &location, QGraphicsItem *qgi, int *state)$/;"	f	class:ElementFactory
createElement	fileelementscategory.cpp	/^ElementDefinition *FileElementsCategory::createElement(const QString &path) {$/;"	f	class:FileElementsCategory
createElement	qetapp.cpp	/^ElementDefinition *QETApp::createElement (const ElementsLocation &location)$/;"	f	class:QETApp
createElement	xmlelementscategory.cpp	/^ElementDefinition *XmlElementsCategory::createElement(const QString &path) {$/;"	f	class:XmlElementsCategory
createNewElement	newelementwizard.cpp	/^void NewElementWizard::createNewElement() {$/;"	f	class:NewElementWizard
createRow	titleblocktemplate.cpp	/^QList<TitleBlockCell *> TitleBlockTemplate::createRow() {$/;"	f	class:TitleBlockTemplate
createTextOrientationSpinBoxWidget	qetapp.cpp	/^QTextOrientationSpinBoxWidget *QETApp::createTextOrientationSpinBoxWidget()$/;"	f	class:QETApp
createToolBar	richtext/richtexteditor.cpp	/^QToolBar *RichTextEditor::createToolBar(QWidget *parent)$/;"	f	class:qdesigner_internal::RichTextEditor
createdItem	moveelementsdescription.cpp	/^ElementsCollectionItem *MoveElementsDescription::createdItem() const {$/;"	f	class:MoveElementsDescription
created_item_	moveelementsdescription.h	/^	ElementsCollectionItem *created_item_;$/;"	m	class:MoveElementsDescription
cri_	qetgraphicsitem/masterelement.h	/^		CrossRefItem *cri_;$/;"	m	class:MasterElement
critical	qetmessagebox.cpp	/^QMessageBox::StandardButton QET::MessageBox::critical   (QWidget *parent, const QString &title, const QString &text, QMessageBox::StandardButtons buttons, QMessageBox::StandardButton defaultButton) {$/;"	f	class:QET::MessageBox
cross_min_heigth	qetgraphicsitem/crossrefitem.cpp	29;"	d	file:
cs	qeticons.cpp	/^		QIcon cs;$/;"	m	namespace:QET::Icons	file:
current	orientationset.h	/^inline Qet::Orientation OrientationSet::current() const {$/;"	f	class:OrientationSet
currentCustomElement	qetdiagrameditor.cpp	/^CustomElement *QETDiagramEditor::currentCustomElement() const {$/;"	f	class:QETDiagramEditor
currentDiagram	projectview.cpp	/^DiagramView *ProjectView::currentDiagram() const {$/;"	f	class:ProjectView
currentDiagram	qetdiagrameditor.cpp	/^DiagramView *QETDiagramEditor::currentDiagram() const {$/;"	f	class:QETDiagramEditor
currentDir	qetproject.cpp	/^QString QETProject::currentDir() const {$/;"	f	class:QETProject
currentElement	qetdiagrameditor.cpp	/^Element *QETDiagramEditor::currentElement() const {$/;"	f	class:QETDiagramEditor
currentItemType	genericpanel.cpp	/^int GenericPanel::currentItemType() {$/;"	f	class:GenericPanel
currentLogo	titleblock/templatelogomanager.cpp	/^QString TitleBlockTemplateLogoManager::currentLogo() const {$/;"	f	class:TitleBlockTemplateLogoManager
currentPart	editor/arceditor.cpp	/^CustomElementPart *ArcEditor::currentPart() const {$/;"	f	class:ArcEditor
currentPart	editor/ellipseeditor.cpp	/^CustomElementPart *EllipseEditor::currentPart() const {$/;"	f	class:EllipseEditor
currentPart	editor/lineeditor.cpp	/^CustomElementPart *LineEditor::currentPart() const {$/;"	f	class:LineEditor
currentPart	editor/polygoneditor.cpp	/^CustomElementPart *PolygonEditor::currentPart() const {$/;"	f	class:PolygonEditor
currentPart	editor/rectangleeditor.cpp	/^CustomElementPart *RectangleEditor::currentPart() const {$/;"	f	class:RectangleEditor
currentPart	editor/styleeditor.cpp	/^CustomElementPart *StyleEditor::currentPart() const {$/;"	f	class:StyleEditor
currentPart	editor/terminaleditor.cpp	/^CustomElementPart *TerminalEditor::currentPart() const {$/;"	f	class:TerminalEditor
currentPart	editor/texteditor.cpp	/^CustomElementPart *TextEditor::currentPart() const {$/;"	f	class:TextEditor
currentPart	editor/textfieldeditor.cpp	/^CustomElementPart *TextFieldEditor::currentPart() const {$/;"	f	class:TextFieldEditor
currentPathType	qetgraphicsitem/conductor.cpp	/^Qt::Corner Conductor::currentPathType() const {$/;"	f	class:Conductor
currentProject	qetdiagrameditor.cpp	/^ProjectView *QETDiagramEditor::currentProject() const {$/;"	f	class:QETDiagramEditor
currentTitleBlockTemplateName	ui/titleblockpropertieswidget.cpp	/^QString TitleBlockPropertiesWidget::currentTitleBlockTemplateName() const {$/;"	f	class:TitleBlockPropertiesWidget
current_movement_	elementsmover.h	/^	QPointF current_movement_;$/;"	m	class:ElementsMover
current_movement_	elementtextsmover.h	/^	QPointF current_movement_;$/;"	m	class:ElementTextsMover
current_name_	elementscollectioncache.h	/^	QString current_name_;          \/\/\/< Last name fetched$/;"	m	class:ElementsCollectionCache
current_operation_square_	editor/elementprimitivedecorator.h	/^	int current_operation_square_;$/;"	m	class:ElementPrimitiveDecorator
current_ori	orientationset.h	/^	Qet::Orientation current_ori;$/;"	m	class:OrientationSet
current_orientation_	qtextorientationwidget.h	/^	double current_orientation_;$/;"	m	class:QTextOrientationWidget
current_pixmap_	elementscollectioncache.h	/^	QPixmap current_pixmap_;        \/\/\/< Last pixmap fetched$/;"	m	class:ElementsCollectionCache
current_state	newelementwizard.h	/^	WizardState current_state;$/;"	m	class:NewElementWizard
currentlyEditedTitle	titleblock/qettemplateeditor.cpp	/^QString QETTitleBlockTemplateEditor::currentlyEditedTitle() const {$/;"	f	class:QETTitleBlockTemplateEditor
customElements	diagram.cpp	/^QList<CustomElement *> Diagram::customElements() const {$/;"	f	class:Diagram
customElementsCollection	qetapp.cpp	/^ElementsCollection *QETApp::customElementsCollection()$/;"	f	class:QETApp
customElementsDir	qetapp.cpp	/^QString QETApp::customElementsDir()$/;"	f	class:QETApp
customTitleBlockTemplatesCollection	qetapp.cpp	/^TitleBlockTemplatesFilesCollection *QETApp::customTitleBlockTemplatesCollection()$/;"	f	class:QETApp
customTitleBlockTemplatesDir	qetapp.cpp	/^QString QETApp::customTitleBlockTemplatesDir()$/;"	f	class:QETApp
custom_collection	qetapp.cpp	/^FileElementsCollection *QETApp::custom_collection = 0;$/;"	m	class:QETApp	file:
custom_collection	qetapp.h	/^	static FileElementsCollection *custom_collection;$/;"	m	class:QETApp
custom_collection_item_	elementspanel.h	/^	QTreeWidgetItem *custom_collection_item_;      \/\/\/< pointer to the item representing the user elements collection$/;"	m	class:ElementsPanel
custom_tbt_collection_	qetapp.cpp	/^TitleBlockTemplatesFilesCollection *QETApp::custom_tbt_collection_;$/;"	m	class:QETApp	file:
custom_tbt_collection_	qetapp.h	/^	static TitleBlockTemplatesFilesCollection *custom_tbt_collection_;$/;"	m	class:QETApp
custom_tbt_collection_item_	elementspanel.h	/^	QTreeWidgetItem *custom_tbt_collection_item_;  \/\/\/< pointer to the item representing the user templates collection$/;"	m	class:ElementsPanel
cut	diagramview.cpp	/^void DiagramView::cut() {$/;"	f	class:DiagramView
cut	editor/elementscene.cpp	/^void ElementScene::cut() {$/;"	f	class:ElementScene
cut	editor/elementview.cpp	/^void ElementView::cut() {$/;"	f	class:ElementView
cut	editor/qetelementeditor.h	/^	QAction *cut, *copy, *paste, *paste_in_area, *paste_from_file, *paste_from_elmt;$/;"	m	class:QETElementEditor
cut	qetdiagrameditor.h	/^		QAction *cut;                \/\/\/< Cut selection to clipboard$/;"	m	class:QETDiagramEditor
cut	titleblock/templateview.cpp	/^QList<TitleBlockCell *> TitleBlockTemplateView::cut() {$/;"	f	class:TitleBlockTemplateView
cut_	titleblock/qettemplateeditor.h	/^	QAction *undo_, *redo_, *cut_, *copy_, *paste_, *edit_logos_, *edit_info_, *add_row_, *add_col_, *merge_cells_, *split_cell_;$/;"	m	class:QETTitleBlockTemplateEditor
cut_cells_	titleblock/templatecommands.h	/^	QHash<TitleBlockCell *, TitleBlockCell::TemplateCellType> cut_cells_;$/;"	m	class:CutTemplateCellsCommand
dashdotted_style	editor/styleeditor.h	/^		QRadioButton *black_color, *white_color,  *normal_style, *dashed_style, *dashdotted_style, *dotted_style, *green_color, *red_color, *blue_color;$/;"	m	class:StyleEditor
dashed_style	editor/styleeditor.h	/^		QRadioButton *black_color, *white_color,  *normal_style, *dashed_style, *dashdotted_style, *dotted_style, *green_color, *red_color, *blue_color;$/;"	m	class:StyleEditor
data_logos_	titleblocktemplate.h	/^	QHash<QString, QByteArray >    data_logos_;      \/\/\/< Logos raw data$/;"	m	class:TitleBlockTemplate
date	bordertitleblock.h	/^	QDate date() const { return(btb_date_); }$/;"	f	class:BorderTitleBlock
date	titleblockproperties.h	/^	QDate date;               \/\/\/< Date (displayed by the default template)$/;"	m	class:TitleBlockProperties
dateString	integrationmoveelementshandler.cpp	/^QString IntegrationMoveElementsHandler::dateString() const {$/;"	f	class:IntegrationMoveElementsHandler
dateString	titleblock/integrationmovetemplateshandler.cpp	/^QString IntegrationMoveTitleBlockTemplatesHandler::dateString() const {$/;"	f	class:IntegrationMoveTitleBlockTemplatesHandler
dbb	ui/elementpropertieswidget.h	/^		QDialogButtonBox        *dbb;$/;"	m	class:elementpropertieswidget
de	qeticons.cpp	/^		QIcon de;$/;"	m	namespace:QET::Icons	file:
deSelectAll	exportdialog.h	/^	QPushButton *deSelectAll;$/;"	m	class:ExportDialog
debugPaint	editor/graphicspart/partline.cpp	/^void PartLine::debugPaint(QPainter *painter)$/;"	f	class:PartLine
declaredQElectroTechVersion	diagram.cpp	/^qreal Diagram::declaredQElectroTechVersion(bool fallback_to_project) const {$/;"	f	class:Diagram
declaredQElectroTechVersion	qetproject.cpp	/^qreal QETProject::declaredQElectroTechVersion() {$/;"	f	class:QETProject
decorated_items_	editor/elementprimitivedecorator.h	/^	QList<CustomElementPart *> decorated_items_;$/;"	m	class:ElementPrimitiveDecorator
decorator_	editor/elementscene.h	/^		ElementPrimitiveDecorator *decorator_;$/;"	m	class:ElementScene
decorator_	editor/graphicspart/parttext.h	/^	QGraphicsItem *decorator_;$/;"	m	class:PartText
decorator_	editor/graphicspart/parttextfield.h	/^	QGraphicsItem *decorator_;$/;"	m	class:PartTextField
decorator_lock_	editor/elementscene.h	/^	QMutex *decorator_lock_;$/;"	m	class:ElementScene
defaultBorderProperties	qetproject.cpp	/^BorderProperties QETProject::defaultBorderProperties() const {$/;"	f	class:QETProject
defaultConductorProperties	diagram.h	/^		ConductorProperties defaultConductorProperties;$/;"	m	class:Diagram
defaultConductorProperties	qetproject.cpp	/^ConductorProperties QETProject::defaultConductorProperties() const {$/;"	f	class:QETProject
defaultExportProperties	exportproperties.cpp	/^ExportProperties ExportProperties::defaultExportProperties() {$/;"	f	class:ExportProperties
defaultIcon	genericpanel.cpp	/^QIcon GenericPanel::defaultIcon(QET::ItemType type) {$/;"	f	class:GenericPanel
defaultOrientation	orientationset.h	/^inline Qet::Orientation OrientationSet::defaultOrientation() const {$/;"	f	class:OrientationSet
defaultPrintProperties	exportproperties.cpp	/^ExportProperties ExportProperties::defaultPrintProperties() {$/;"	f	class:ExportProperties
defaultProperties	borderproperties.cpp	/^BorderProperties BorderProperties::defaultProperties() {$/;"	f	class:BorderProperties
defaultProperties	conductorproperties.cpp	/^ConductorProperties ConductorProperties::defaultProperties() {$/;"	f	class:ConductorProperties
defaultProperties	properties/reportproperties.cpp	/^QString ReportProperties::defaultProperties() {$/;"	f	class:ReportProperties
defaultProperties	properties/xrefproperties.cpp	/^QHash<QString, XRefProperties> XRefProperties::defaultProperties() {$/;"	f	class:XRefProperties
defaultProperties	titleblockproperties.cpp	/^TitleBlockProperties TitleBlockProperties::defaultProperties() {$/;"	f	class:TitleBlockProperties
defaultReportProperties	diagram.h	/^		QString		   defaultReportProperties () const {return project_ -> defaultReportProperties();}$/;"	f	class:Diagram
defaultReportProperties	qetproject.cpp	/^QString QETProject::defaultReportProperties() const {$/;"	f	class:QETProject
defaultText	genericpanel.cpp	/^QString GenericPanel::defaultText(QET::ItemType type) {$/;"	f	class:GenericPanel
defaultTitleBlockProperties	qetproject.cpp	/^TitleBlockProperties QETProject::defaultTitleBlockProperties() const {$/;"	f	class:QETProject
defaultTitleBlockTemplate	qetapp.cpp	/^TitleBlockTemplate *QETApp::defaultTitleBlockTemplate()$/;"	f	class:QETApp
defaultVariablesString	titleblock/templatecellwidget.cpp	/^QString TitleBlockTemplateCellWidget::defaultVariablesString() const {$/;"	f	class:TitleBlockTemplateCellWidget
defaultXRefProperties	diagram.h	/^		XRefProperties defaultXRefProperties   (const QString &str) const {return project_ -> defaultXRefProperties(str);}$/;"	f	class:Diagram
defaultXRefProperties	qetproject.h	/^		QHash <QString, XRefProperties> defaultXRefProperties() const					  {return m_default_xref_properties;}$/;"	f	class:QETProject
defaultXRefProperties	qetproject.h	/^		XRefProperties					defaultXRefProperties (const QString &type) const {return m_default_xref_properties[type];}$/;"	f	class:QETProject
default_border_properties_	qetproject.h	/^	BorderProperties default_border_properties_;$/;"	m	class:QETProject
default_conductor_properties_	qetproject.h	/^	ConductorProperties default_conductor_properties_;$/;"	m	class:QETProject
default_element_infos_label_	configpages.h	/^	QLabel    *default_element_infos_label_;$/;"	m	class:GeneralConfigurationPage
default_element_infos_textfield_	configpages.h	/^	QTextEdit *default_element_infos_textfield_;$/;"	m	class:GeneralConfigurationPage
default_informations	editor/qetelementeditor.h	/^	QLabel *default_informations;$/;"	m	class:QETElementEditor
default_ori	orientationset.h	/^	Qet::Orientation default_ori;$/;"	m	class:OrientationSet
default_report_properties_	qetproject.h	/^	QString default_report_properties_;$/;"	m	class:QETProject
default_titleblock_properties_	qetproject.h	/^	TitleBlockProperties default_titleblock_properties_;$/;"	m	class:QETProject
default_titleblock_template_	qetapp.cpp	/^TitleBlockTemplate *QETApp::default_titleblock_template_ = 0;$/;"	m	class:QETApp	file:
default_titleblock_template_	qetapp.h	/^	static TitleBlockTemplate *default_titleblock_template_;$/;"	m	class:QETApp
defineCommandName	diagramcommands.cpp	/^void RotateTextsCommand::defineCommandName() {$/;"	f	class:RotateTextsCommand
defined_paste_area_	editor/elementscene.h	/^		QRectF defined_paste_area_;$/;"	m	class:ElementScene
definition_groupe	ui/ui_selectautonumw.h	/^    QGroupBox *definition_groupe;$/;"	m	class:Ui_SelectAutonumW
deleteCategory	elementspanelwidget.cpp	/^void ElementsPanelWidget::deleteCategory() {$/;"	f	class:ElementsPanelWidget
deleteColumn	titleblock/templatecommands.cpp	/^ModifyTemplateGridCommand *ModifyTemplateGridCommand::deleteColumn(TitleBlockTemplate *tbtemplate, int index) {$/;"	f	class:ModifyTemplateGridCommand
deleteColumn	titleblock/templateview.cpp	/^void TitleBlockTemplateView::deleteColumn() {$/;"	f	class:TitleBlockTemplateView
deleteContent	fileelementscategory.cpp	/^void FileElementsCategory::deleteContent() {$/;"	f	class:FileElementsCategory
deleteContent	fileelementscollection.cpp	/^void FileElementsCollection::deleteContent() {$/;"	f	class:FileElementsCollection
deleteContent	xmlelementscategory.cpp	/^void XmlElementsCategory::deleteContent() {$/;"	f	class:XmlElementsCategory
deleteContent	xmlelementscollection.cpp	/^void XmlElementsCollection::deleteContent() {$/;"	f	class:XmlElementsCollection
deleteDiagram	elementspanelwidget.cpp	/^void ElementsPanelWidget::deleteDiagram() {$/;"	f	class:ElementsPanelWidget
deleteElement	elementspanelwidget.cpp	/^void ElementsPanelWidget::deleteElement() {$/;"	f	class:ElementsPanelWidget
deleteEmptyCategories	elementscategory.cpp	/^void ElementsCategory::deleteEmptyCategories(MoveElementsHandler *handler) {$/;"	f	class:ElementsCategory
deleteItem	genericpanel.cpp	/^void GenericPanel::deleteItem(QTreeWidgetItem *item, bool deleted_on_cascade) {$/;"	f	class:GenericPanel
deleteRow	titleblock/templatecommands.cpp	/^ModifyTemplateGridCommand *ModifyTemplateGridCommand::deleteRow(TitleBlockTemplate *tbtemplate, int index) {$/;"	f	class:ModifyTemplateGridCommand
deleteRow	titleblock/templateview.cpp	/^void TitleBlockTemplateView::deleteRow() {$/;"	f	class:TitleBlockTemplateView
deleteSegments	qetgraphicsitem/conductor.cpp	/^void Conductor::deleteSegments() {$/;"	f	class:Conductor
deleteSelection	diagramview.cpp	/^void DiagramView::deleteSelection() {$/;"	f	class:DiagramView
deleteUnusedElements	elementscategory.cpp	/^void ElementsCategory::deleteUnusedElements(MoveElementsHandler *handler) {$/;"	f	class:ElementsCategory
deleteUnusedTitleBlocKTemplates	titleblock/templatescollection.cpp	/^void TitleBlockTemplatesProjectCollection::deleteUnusedTitleBlocKTemplates() {$/;"	f	class:TitleBlockTemplatesProjectCollection
delete_button_	titleblock/templatelogomanager.h	/^	QPushButton *delete_button_;           \/\/\/< button to delete an embedded logo$/;"	m	class:TitleBlockTemplateLogoManager
delete_category	elementspanelwidget.h	/^	QAction *new_category, *edit_category, *delete_category;$/;"	m	class:ElementsPanelWidget
delete_collection	elementspanelwidget.h	/^	QAction *delete_collection;$/;"	m	class:ElementsPanelWidget
delete_column_	titleblock/templateview.h	/^	QAction *delete_column_, *delete_row_;$/;"	m	class:TitleBlockTemplateView
delete_element	elementspanelwidget.h	/^	QAction *new_element, *edit_element, *delete_element, *open_element;$/;"	m	class:ElementsPanelWidget
delete_row_	titleblock/templateview.h	/^	QAction *delete_column_, *delete_row_;$/;"	m	class:TitleBlockTemplateView
delete_selection	qetdiagrameditor.h	/^		QAction *delete_selection;				\/\/\/< Delete selection$/;"	m	class:QETDiagramEditor
deleted_parts	editor/editorcommands.h	/^	QList<QGraphicsItem *> deleted_parts;$/;"	m	class:DeletePartsCommand
deltaForRoundScaling	editor/elementprimitivedecorator.cpp	/^QPointF ElementPrimitiveDecorator::deltaForRoundScaling(const QRectF &original, const QRectF &current, qreal epsilon) {$/;"	f	class:ElementPrimitiveDecorator
depth_toolbar	editor/qetelementeditor.h	/^	QToolBar *parts_toolbar, *main_toolbar, *view_toolbar, *depth_toolbar, *element_toolbar;$/;"	m	class:QETElementEditor
deselect	qetgraphicsitem/element.cpp	/^void Element::deselect() {$/;"	f	class:Element
deselectAll	diagram.cpp	/^void Diagram::deselectAll() {$/;"	f	class:Diagram
deselectall	editor/qetelementeditor.h	/^	QAction *selectall, *deselectall, *inv_select;$/;"	m	class:QETElementEditor
dest_internal_name_final_	moveelementsdescription.h	/^	QString dest_internal_name_final_;$/;"	m	class:MoveElementsDescription
dest_internal_name_orig_	moveelementsdescription.h	/^	QString dest_internal_name_orig_;$/;"	m	class:MoveElementsDescription
destinationParentCategory	moveelementsdescription.cpp	/^ElementsCategory *MoveElementsDescription::destinationParentCategory() const {$/;"	f	class:MoveElementsDescription
destination_	moveelementsdescription.h	/^	ElementsCategory *destination_;$/;"	m	class:MoveElementsDescription
destination_directory	exportproperties.h	/^	QDir destination_directory;     \/\/\/< Target directory for generated files$/;"	m	class:ExportProperties
destroy	qetgraphicsitem/conductor.cpp	/^void Conductor::destroy() {$/;"	f	class:Conductor
destroy_qgi_on_delete	qgimanager.h	/^	bool destroy_qgi_on_delete;$/;"	m	class:QGIManager
destroyed_	qetgraphicsitem/conductor.h	/^	bool destroyed_;$/;"	m	class:Conductor
detach	editor/elementitemeditor.cpp	/^void ElementItemEditor::detach() {$/;"	f	class:ElementItemEditor
detectWindows	qetapp.cpp	/^template <class T> QList<T *> QETApp::detectWindows() const$/;"	f	class:QETApp
dg_	ui/dialogautonum.h	/^	Diagram *dg_;$/;"	m	class:DialogAutoNum
dgselect_	ui/dialogautonum.h	/^	diagramselection *dgselect_;$/;"	m	class:DialogAutoNum
diag_list	elementprovider.h	/^	QList <Diagram *> diag_list;$/;"	m	class:ElementProvider
diagram	diagramcommands.h	/^		Diagram *diagram;$/;"	m	class:MoveElementsTextsCommand
diagram	diagramcommands.h	/^	Diagram *diagram;$/;"	m	class:ChangeBorderCommand
diagram	diagramcommands.h	/^	Diagram *diagram;$/;"	m	class:ChangeConductorCommand
diagram	diagramcommands.h	/^	Diagram *diagram;$/;"	m	class:ChangeDiagramTextCommand
diagram	diagramcommands.h	/^	Diagram *diagram;$/;"	m	class:ChangeShapeStyleCommand
diagram	diagramcommands.h	/^	Diagram *diagram;$/;"	m	class:ChangeTitleBlockCommand
diagram	diagramcommands.h	/^	Diagram *diagram;$/;"	m	class:DeleteElementsCommand
diagram	diagramcommands.h	/^	Diagram *diagram;$/;"	m	class:ItemResizerCommand
diagram	diagramcommands.h	/^	Diagram *diagram;$/;"	m	class:MoveConductorsTextsCommand
diagram	diagramcommands.h	/^	Diagram *diagram;$/;"	m	class:MoveElementsCommand
diagram	diagramcommands.h	/^	Diagram *diagram;$/;"	m	class:PasteDiagramCommand
diagram	diagramcommands.h	/^	Diagram *diagram;$/;"	m	class:ResetConductorCommand
diagram	diagramcommands.h	/^	Diagram *diagram;$/;"	m	class:RotateElementsCommand
diagram	diagramcommands.h	/^	Diagram *diagram;$/;"	m	class:RotateTextsCommand
diagram	diagramview.h	/^	Diagram *diagram() { return(scene); }$/;"	f	class:DiagramView
diagram	exportdialog.h	/^		Diagram *diagram;$/;"	m	class:ExportDialog::ExportDiagramLine
diagram	qetgraphicsitem/conductor.cpp	/^Diagram *Conductor::diagram() const {$/;"	f	class:Conductor
diagram	qetgraphicsitem/diagramtextitem.cpp	/^Diagram *DiagramTextItem::diagram() const {$/;"	f	class:DiagramTextItem
diagram	qetgraphicsitem/qetgraphicsitem.cpp	/^Diagram* QetGraphicsItem::diagram() const{$/;"	f	class:QetGraphicsItem
diagram	qetgraphicsitem/terminal.cpp	/^Diagram *Terminal::diagram() const {$/;"	f	class:Terminal
diagramAdded	genericpanel.cpp	/^void GenericPanel::diagramAdded(QETProject *project, Diagram *diagram) {$/;"	f	class:GenericPanel
diagramAreaFromString	qet.cpp	/^QET::DiagramArea QET::diagramAreaFromString(const QString &string) {$/;"	f	class:QET
diagramAreaToString	qet.cpp	/^QString QET::diagramAreaToString(const QET::DiagramArea &diagram_area) {$/;"	f	class:QET
diagramEditor	diagramview.cpp	/^QETDiagramEditor *DiagramView::diagramEditor() const {$/;"	f	class:DiagramView
diagramEditor	qetgraphicsitem/conductor.cpp	/^QETDiagramEditor* Conductor::diagramEditor() const {$/;"	f	class:Conductor
diagramEditorForFile	qetapp.cpp	/^QETDiagramEditor *QETApp::diagramEditorForFile (const QString &filepath)$/;"	f	class:QETApp
diagramEditors	qetapp.cpp	/^QList<QETDiagramEditor *> QETApp::diagramEditors()$/;"	f	class:QETApp
diagramForItem	genericpanel.cpp	/^Diagram *GenericPanel::diagramForItem(QTreeWidgetItem *item) const {$/;"	f	class:GenericPanel
diagramHeight	bordertitleblock.h	/^	qreal diagramHeight() const { return(rowsTotalHeight() + columnsHeaderHeight()); }$/;"	f	class:BorderTitleBlock
diagramIsSelected	diagramschooser.cpp	/^bool DiagramsChooser::diagramIsSelected(Diagram *const diagram) const {$/;"	f	class:DiagramsChooser
diagramOrderChanged	qetproject.cpp	/^void QETProject::diagramOrderChanged(int old_index, int new_index) {$/;"	f	class:QETProject
diagramPropertiesDialog	ui/diagrampropertiesdialog.cpp	/^void DiagramPropertiesDialog::diagramPropertiesDialog(Diagram *diagram, QWidget *parent) {$/;"	f	class:DiagramPropertiesDialog
diagramRatio	exportdialog.cpp	/^qreal ExportDialog::diagramRatio(Diagram *diagram) {$/;"	f	class:ExportDialog
diagramRect	diagramprintdialog.cpp	/^QRect DiagramPrintDialog::diagramRect(Diagram *diagram, const ExportProperties &options) const {$/;"	f	class:DiagramPrintDialog
diagramRemoved	genericpanel.cpp	/^void GenericPanel::diagramRemoved(QETProject *project, Diagram *diagram) {$/;"	f	class:GenericPanel
diagramSize	exportdialog.cpp	/^QSize ExportDialog::diagramSize(Diagram *diagram) {$/;"	f	class:ExportDialog
diagramTextChanged	diagram.cpp	/^void Diagram::diagramTextChanged(DiagramTextItem *text_item, const QString &old_text, const QString &new_text) {$/;"	f	class:Diagram
diagramTextsFont	qetapp.cpp	/^QFont QETApp::diagramTextsFont (qreal size)$/;"	f	class:QETApp
diagramTitleChanged	genericpanel.cpp	/^void GenericPanel::diagramTitleChanged(Diagram *diagram, const QString &title) {$/;"	f	class:GenericPanel
diagramUsedTemplate	genericpanel.cpp	/^void GenericPanel::diagramUsedTemplate(TitleBlockTemplatesCollection *collection, const QString &name) {$/;"	f	class:GenericPanel
diagramWasAdded	qetdiagrameditor.cpp	/^void QETDiagramEditor::diagramWasAdded(DiagramView *dv)$/;"	f	class:QETDiagramEditor
diagramWidth	bordertitleblock.h	/^	qreal diagramWidth() const { return(columnsTotalWidth() + rowsHeaderWidth()); }$/;"	f	class:BorderTitleBlock
diagram_	autonumerotation.h	/^	Diagram *diagram_;$/;"	m	class:AutoNumerotation
diagram_	diagramcommands.h	/^	Diagram *diagram_;$/;"	m	class:LinkElementsCommand
diagram_	diagramcommands.h	/^	Diagram *diagram_;$/;"	m	class:unlinkElementsCommand
diagram_	elementsmover.h	/^	Diagram *diagram_;$/;"	m	class:ElementsMover
diagram_	elementtextsmover.h	/^	Diagram *diagram_;$/;"	m	class:ElementTextsMover
diagram_	numerotationcontextcommands.h	/^	Diagram *diagram_;$/;"	m	class:NumStrategy
diagram_	numerotationcontextcommands.h	/^	Diagram *diagram_;$/;"	m	class:NumerotationContextCommands
diagram_	ui/elementpropertieswidget.h	/^		Diagram                 *diagram_;$/;"	m	class:elementpropertieswidget
diagram_bar	qetdiagrameditor.h	/^		QToolBar *diagram_bar;$/;"	m	class:QETDiagramEditor
diagram_ids_	projectview.h	/^	QMap<int, DiagramView *> diagram_ids_;$/;"	m	class:ProjectView
diagram_lines_	exportdialog.h	/^	QHash<int, ExportDialog::ExportDiagramLine *> diagram_lines_;$/;"	m	class:ExportDialog
diagram_list	ui/linksingleelementwidget.h	/^	QList <Diagram *> diagram_list;$/;"	m	class:LinkSingleElementWidget
diagram_qet_version_	diagram.h	/^		qreal diagram_qet_version_;$/;"	m	class:Diagram
diagram_rect_	bordertitleblock.h	/^	QRectF diagram_rect_;$/;"	m	class:BorderTitleBlock
diagrams	projectview.cpp	/^QList<DiagramView *> ProjectView::diagrams() const {$/;"	f	class:ProjectView
diagrams	qetproject.cpp	/^QList<Diagram *> QETProject::diagrams() const {$/;"	f	class:QETProject
diagramsChooser	qetprintpreviewdialog.cpp	/^DiagramsChooser *QETPrintPreviewDialog::diagramsChooser() {$/;"	f	class:QETPrintPreviewDialog
diagramsToExportCount	exportdialog.cpp	/^int ExportDialog::diagramsToExportCount() const {$/;"	f	class:ExportDialog
diagrams_	diagramschooser.h	/^	QHash<Diagram *, QCheckBox *> diagrams_;$/;"	m	class:DiagramsChooser
diagrams_	genericpanel.h	/^	QHash<Diagram *, QTreeWidgetItem *>                  diagrams_;     \/\/\/< Allow quick retrieval of the item representing a given diagram$/;"	m	class:GenericPanel
diagrams_	projectview.h	/^	QList<DiagramView *> diagrams_;$/;"	m	class:ProjectView
diagrams_	qetproject.h	/^	QList<Diagram *> diagrams_;$/;"	m	class:QETProject
diagrams_label_	qetprintpreviewdialog.h	/^	QLabel *diagrams_label_;$/;"	m	class:QETPrintPreviewDialog
diagrams_list_	qetprintpreviewdialog.h	/^	DiagramsChooser *diagrams_list_;$/;"	m	class:QETPrintPreviewDialog
diagrams_list_layout_	exportdialog.h	/^	QGridLayout *diagrams_list_layout_;$/;"	m	class:ExportDialog
diagrams_select_all_	qetprintpreviewdialog.h	/^	QPushButton *diagrams_select_all_;$/;"	m	class:QETPrintPreviewDialog
diagrams_select_none_	qetprintpreviewdialog.h	/^	QPushButton *diagrams_select_none_;$/;"	m	class:QETPrintPreviewDialog
diagramselection	ui/diagramselection.cpp	/^diagramselection::diagramselection(QETProject *prj, QWidget *parent) :$/;"	f	class:diagramselection
diagramselection	ui/diagramselection.h	/^class diagramselection : public QWidget$/;"	c
diagramselection	ui/ui_diagramselection.h	/^    class diagramselection: public Ui_diagramselection {};$/;"	c	namespace:Ui
dialogAccepted	elementdialog.cpp	/^void ElementDialog::dialogAccepted() {$/;"	f	class:ElementDialog
dialogRejected	elementdialog.cpp	/^void ElementDialog::dialogRejected() {$/;"	f	class:ElementDialog
dialog_	diagramprintdialog.h	/^	QDialog *dialog_;$/;"	m	class:DiagramPrintDialog
dialog_	elementdialog.h	/^	QDialog *dialog_;$/;"	m	class:ElementDialog
dialog_glayout	integrationmoveelementshandler.h	/^	QGridLayout *dialog_glayout;$/;"	m	class:IntegrationMoveElementsHandler
dialog_glayout	titleblock/integrationmovetemplateshandler.h	/^	QGridLayout *dialog_glayout;$/;"	m	class:IntegrationMoveTitleBlockTemplatesHandler
dialog_label_	integrationmoveelementshandler.h	/^	QLabel *dialog_label_;$/;"	m	class:IntegrationMoveElementsHandler
dialog_label_	titleblock/integrationmovetemplateshandler.h	/^	QLabel *dialog_label_;$/;"	m	class:IntegrationMoveTitleBlockTemplatesHandler
dialog_vlayout_	integrationmoveelementshandler.h	/^	QVBoxLayout *dialog_vlayout_;$/;"	m	class:IntegrationMoveElementsHandler
dialog_vlayout_	titleblock/integrationmovetemplateshandler.h	/^	QVBoxLayout *dialog_vlayout_;$/;"	m	class:IntegrationMoveTitleBlockTemplatesHandler
dimension	titleblock/templatecommands.cpp	/^TitleBlockDimension ModifyTemplateGridCommand::dimension() const {$/;"	f	class:ModifyTemplateGridCommand
dimensionAfter	titleblock/templatecommands.cpp	/^TitleBlockDimension ModifyTemplateDimension::dimensionAfter() const {$/;"	f	class:ModifyTemplateDimension
dimensionBefore	titleblock/templatecommands.cpp	/^TitleBlockDimension ModifyTemplateDimension::dimensionBefore() const {$/;"	f	class:ModifyTemplateDimension
dimension_	titleblock/templatecommands.h	/^	TitleBlockDimension dimension_; \/\/\/< width\/height of the column\/row, which interpretation depends on type_$/;"	m	class:ModifyTemplateGridCommand
dimension_type_	titleblock/dimensionwidget.h	/^	QButtonGroup *dimension_type_;     \/\/\/< QButtonGroup for the three radio buttons$/;"	m	class:TitleBlockDimensionWidget
dimensions	qetgraphicsitem/element.h	/^		QSize   dimensions;$/;"	m	class:Element
dirPathForItem	elementspanel.cpp	/^QString ElementsPanel::dirPathForItem(QTreeWidgetItem *item) {$/;"	f	class:ElementsPanel
dir_	titleblock/templatescollection.h	/^	QDir dir_;$/;"	m	class:TitleBlockTemplatesFilesCollection
dirpath	exportpropertieswidget.h	/^	QLineEdit *dirpath;$/;"	m	class:ExportPropertiesWidget
dirpath_label	exportpropertieswidget.h	/^	QLabel *dirpath_label;$/;"	m	class:ExportPropertiesWidget
displayBorder	bordertitleblock.cpp	/^void BorderTitleBlock::displayBorder(bool db) {$/;"	f	class:BorderTitleBlock
displayColumns	bordertitleblock.cpp	/^void BorderTitleBlock::displayColumns(bool dc) {$/;"	f	class:BorderTitleBlock
displayGrid	diagram.h	/^inline bool Diagram::displayGrid() {$/;"	f	class:Diagram
displayHas	properties/xrefproperties.h	/^	DisplayHas displayHas () const				{return m_display;}$/;"	f	class:XRefProperties
displayRows	bordertitleblock.cpp	/^void BorderTitleBlock::displayRows(bool dr) {$/;"	f	class:BorderTitleBlock
displayTitleBlock	bordertitleblock.cpp	/^void BorderTitleBlock::displayTitleBlock(bool di) {$/;"	f	class:BorderTitleBlock
displayToolTip	qfilenameedit.cpp	/^void QFileNameEdit::displayToolTip() {$/;"	f	class:QFileNameEdit
display_border_	bordertitleblock.h	/^	bool display_border_;$/;"	m	class:BorderTitleBlock
display_columns	borderproperties.h	/^	bool display_columns;         \/\/\/< Whether to display column headers$/;"	m	class:BorderProperties
display_columns_	bordertitleblock.h	/^	bool display_columns_;$/;"	m	class:BorderTitleBlock
display_elements_	elementscategorieslist.h	/^	bool display_elements_;$/;"	m	class:ElementsCategoriesList
display_label	titleblockcell.h	/^	bool display_label;                \/\/\/< Whether to display the label or not$/;"	m	class:TitleBlockCell
display_menu	editor/qetelementeditor.h	/^	QMenu *file_menu, *edit_menu, *paste_from_menu, *display_menu, *tools_menu;$/;"	m	class:QETElementEditor
display_menu_	titleblock/qettemplateeditor.h	/^	QMenu *file_menu_, *edit_menu_, *display_menu_;$/;"	m	class:QETTitleBlockTemplateEditor
display_rows	borderproperties.h	/^	bool display_rows;            \/\/\/< Whether to display row headers$/;"	m	class:BorderProperties
display_rows_	bordertitleblock.h	/^	bool display_rows_;$/;"	m	class:BorderTitleBlock
display_text_	qtextorientationwidget.h	/^	bool display_text_;$/;"	m	class:QTextOrientationWidget
display_titleblock_	bordertitleblock.h	/^	bool display_titleblock_;$/;"	m	class:BorderTitleBlock
display_toolbars_	qetmainwindow.h	/^	QMenu *display_toolbars_;                \/\/\/< Show\/hide toolbars\/docks$/;"	m	class:QETMainWindow
displayedTextChanged	qetgraphicsitem/conductor.cpp	/^void Conductor::displayedTextChanged() {$/;"	f	class:Conductor
displayedVersion	qet.h	/^	const QString displayedVersion = "0.4";$/;"	m	namespace:QET
dnd_item_dst_	elementspanelwidget.h	/^	ElementsCollectionItem *dnd_item_src_, *dnd_item_dst_;$/;"	m	class:ElementsPanelWidget
dnd_item_src_	elementspanelwidget.h	/^	ElementsCollectionItem *dnd_item_src_, *dnd_item_dst_;$/;"	m	class:ElementsPanelWidget
doSave	projectview.cpp	/^QETResult ProjectView::doSave(ProjectSaveOptions options) {$/;"	f	class:ProjectView
docName	diagramprintdialog.cpp	/^QString DiagramPrintDialog::docName() const {$/;"	f	class:DiagramPrintDialog
doc_name_	diagramprintdialog.h	/^	QString doc_name_;$/;"	m	class:DiagramPrintDialog
dockConductor	qetgraphicsitem/terminal.h	/^inline QPointF Terminal::dockConductor() const {$/;"	f	class:Terminal
dock_conductor_	qetgraphicsitem/terminal.h	/^	QPointF dock_conductor_;$/;"	m	class:Terminal
dock_elmt_	qetgraphicsitem/terminal.h	/^	QPointF dock_elmt_;$/;"	m	class:Terminal
document_root_	qetproject.h	/^	QDomDocument document_root_;$/;"	m	class:QETProject
dotted_style	editor/styleeditor.h	/^		QRadioButton *black_color, *white_color,  *normal_style, *dashed_style, *dashdotted_style, *dotted_style, *green_color, *red_color, *blue_color;$/;"	m	class:StyleEditor
dragEnterEvent	diagramview.cpp	/^void DiagramView::dragEnterEvent(QDragEnterEvent *e) {$/;"	f	class:DiagramView
dragEnterEvent	elementspanel.cpp	/^void ElementsPanel::dragEnterEvent(QDragEnterEvent *e) {$/;"	f	class:ElementsPanel
dragEnterEvent	qetmainwindow.cpp	/^void QETMainWindow::dragEnterEvent(QDragEnterEvent *e) {$/;"	f	class:QETMainWindow
dragLeaveEvent	diagramview.cpp	/^void DiagramView::dragLeaveEvent(QDragLeaveEvent *e) {$/;"	f	class:DiagramView
dragMoveEvent	diagramview.cpp	/^void DiagramView::dragMoveEvent(QDragMoveEvent *e) {$/;"	f	class:DiagramView
dragMoveEvent	elementspanel.cpp	/^void ElementsPanel::dragMoveEvent(QDragMoveEvent *e) {$/;"	f	class:ElementsPanel
draw	bordertitleblock.cpp	/^void BorderTitleBlock::draw(QPainter *qp, qreal x, qreal y) {$/;"	f	class:BorderTitleBlock
draw	conductorproperties.cpp	/^void SingleLineProperties::draw(QPainter *painter, QET::ConductorSegmentType direction, const QRectF &rect) {$/;"	f	class:SingleLineProperties
drawArc	createdxf.cpp	/^void Createdxf::drawArc(QString fileName,double x,double y,double rad,double startAngle,double endAngle,int color)$/;"	f	class:Createdxf
drawArcEllipse	createdxf.cpp	/^void Createdxf::drawArcEllipse(const QString &file_path, qreal x, qreal y, qreal w, qreal h, qreal startAngle, qreal spanAngle, qreal hotspot_x, qreal hotspot_y, qreal rotation_angle, const int &colorcode) {$/;"	f	class:Createdxf
drawAxes	qetgraphicsitem/element.cpp	/^void Element::drawAxes(QPainter *painter, const QStyleOptionGraphicsItem *options) {$/;"	f	class:Element
drawBackground	diagram.cpp	/^void Diagram::drawBackground(QPainter *p, const QRectF &r) {$/;"	f	class:Diagram
drawBackground	diagramfoliolist.cpp	/^void DiagramFolioList::drawBackground(QPainter *p, const QRectF &r)$/;"	f	class:DiagramFolioList
drawBackground	editor/elementview.cpp	/^void ElementView::drawBackground(QPainter *p, const QRectF &r) {$/;"	f	class:ElementView
drawBackground	titleblock/templateview.cpp	/^void TitleBlockTemplateView::drawBackground(QPainter *painter, const QRectF &rect) {$/;"	f	class:TitleBlockTemplateView
drawCircle	createdxf.cpp	/^void Createdxf::drawCircle (QString fileName, double radius, double x, double y, int colour)$/;"	f	class:Createdxf
drawColoredConductors	diagram.h	/^inline bool Diagram::drawColoredConductors() const {$/;"	f	class:Diagram
drawContact	qetgraphicsitem/crossrefitem.cpp	/^void CrossRefItem::drawContact(QPainter &painter, int flags, QString str) {$/;"	f	class:CrossRefItem
drawCross	editor/graphicspart/customelementgraphicpart.cpp	/^void CustomElementGraphicPart::drawCross(const QPointF &center, QPainter *painter)$/;"	f	class:CustomElementGraphicPart
drawDxf	bordertitleblock.cpp	/^void BorderTitleBlock::drawDxf(int width, int height, bool keep_aspect_ratio, QString &file_path, int color) {$/;"	f	class:BorderTitleBlock
drawEllipse	createdxf.cpp	/^void Createdxf::drawEllipse(const QString &filepath, const QRectF &rect, const int &colorcode) {$/;"	f	class:Createdxf
drawForeground	editor/elementscene.cpp	/^void ElementScene::drawForeground(QPainter *p, const QRectF &rect) {$/;"	f	class:ElementScene
drawGenericSquare	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::drawGenericSquare(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget, const QRectF &rect, const QColor &inner, const QColor &outer) {$/;"	f	class:ElementPrimitiveDecorator
drawGround	conductorproperties.cpp	/^void SingleLineProperties::drawGround(QPainter *painter, QET::ConductorSegmentType direction, QPointF center, qreal size) {$/;"	f	class:SingleLineProperties
drawHasContacts	qetgraphicsitem/crossrefitem.cpp	/^void CrossRefItem::drawHasContacts(QPainter &painter) {$/;"	f	class:CrossRefItem
drawHasCross	qetgraphicsitem/crossrefitem.cpp	/^void CrossRefItem::drawHasCross(QPainter &painter) {$/;"	f	class:CrossRefItem
drawHelpLine	qetgraphicsitem/terminal.cpp	/^void Terminal::drawHelpLine(bool draw)$/;"	f	class:Terminal
drawHighlight	qetgraphicsitem/element.cpp	/^void Element::drawHighlight(QPainter *painter, const QStyleOptionGraphicsItem *options) {$/;"	f	class:Element
drawLine	createdxf.cpp	/^void Createdxf::drawLine (const QString &fileName, double x1, double y1, double x2, double y2,const int &colour)$/;"	f	class:Createdxf
drawLine	createdxf.cpp	/^void Createdxf::drawLine(const QString &filepath, const QLineF &line, const int &colorcode) {$/;"	f	class:Createdxf
drawNeutral	conductorproperties.cpp	/^void SingleLineProperties::drawNeutral(QPainter *painter, QET::ConductorSegmentType direction, QPointF center, qreal size) {$/;"	f	class:SingleLineProperties
drawPen	conductorproperties.cpp	/^void SingleLineProperties::drawPen(QPainter *painter, QET::ConductorSegmentType direction, QPointF center, qreal size) {$/;"	f	class:SingleLineProperties
drawPoint	editor/graphicspart/parttext.cpp	/^void PartText::drawPoint(QPainter *painter, const QPointF &point) {$/;"	f	class:PartText
drawPoint	editor/graphicspart/parttextfield.cpp	/^void PartTextField::drawPoint(QPainter *painter, const QPointF &point) {$/;"	f	class:PartTextField
drawRectangle	createdxf.cpp	/^void Createdxf::drawRectangle (const QString &fileName, double x1, double y1, double width, double height, const int &colour)$/;"	f	class:Createdxf
drawRectangle	createdxf.cpp	/^void Createdxf::drawRectangle(const QString &filepath, const QRectF &rect, const int &colorcode) {$/;"	f	class:Createdxf
drawResizeSquare	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::drawResizeSquare(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget, const QRectF &rect) {$/;"	f	class:ElementPrimitiveDecorator
drawSelection	qetgraphicsitem/element.cpp	/^void Element::drawSelection(QPainter *painter, const QStyleOptionGraphicsItem *options) {$/;"	f	class:Element
drawShadowShape	editor/graphicspart/customelementgraphicpart.cpp	/^void CustomElementGraphicPart::drawShadowShape(QPainter *painter)$/;"	f	class:CustomElementGraphicPart
drawSquares	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::drawSquares(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget) {$/;"	f	class:ElementPrimitiveDecorator
drawTerminals	diagram.h	/^inline bool Diagram::drawTerminals() const {$/;"	f	class:Diagram
drawText	createdxf.cpp	/^void Createdxf::drawText(QString fileName, QString text,double x, double y, double height, double rotation, int colour)$/;"	f	class:Createdxf
drawTextAligned	createdxf.cpp	/^void Createdxf::drawTextAligned(QString fileName, QString text,double x, double y, double height, double rotation, double oblique,int hAlign, int vAlign, double xAlign,int colour,$/;"	f	class:Createdxf
draw_border	exportproperties.h	/^	bool draw_border;               \/\/\/< Whether to render the border (along with rows\/columns headers)$/;"	m	class:ExportProperties
draw_border	exportpropertieswidget.h	/^	QCheckBox *draw_border;$/;"	m	class:ExportPropertiesWidget
draw_colored_conductors	exportproperties.h	/^	bool draw_colored_conductors;   \/\/\/< Whether to render conductors colors$/;"	m	class:ExportProperties
draw_colored_conductors	exportpropertieswidget.h	/^	QCheckBox *draw_colored_conductors;$/;"	m	class:ExportPropertiesWidget
draw_colored_conductors_	diagram.h	/^		bool draw_colored_conductors_;$/;"	m	class:Diagram
draw_grid	exportproperties.h	/^	bool draw_grid;                 \/\/\/< Whether to render the diagram grid$/;"	m	class:ExportProperties
draw_grid	exportpropertieswidget.h	/^	QCheckBox *draw_grid;$/;"	m	class:ExportPropertiesWidget
draw_grid_	diagram.h	/^		bool draw_grid_;$/;"	m	class:Diagram
draw_terminals	exportproperties.h	/^	bool draw_terminals;            \/\/\/< Whether to render terminals$/;"	m	class:ExportProperties
draw_terminals	exportpropertieswidget.h	/^	QCheckBox *draw_terminals;$/;"	m	class:ExportPropertiesWidget
draw_terminals_	diagram.h	/^		bool draw_terminals_;$/;"	m	class:Diagram
draw_titleblock	exportproperties.h	/^	bool draw_titleblock;           \/\/\/< Whether to render the title block$/;"	m	class:ExportProperties
draw_titleblock	exportpropertieswidget.h	/^	QCheckBox *draw_titleblock;$/;"	m	class:ExportPropertiesWidget
drawing	qetgraphicsitem/customelement.h	/^	QPicture drawing;$/;"	m	class:CustomElement
drawingRect	diagram.cpp	/^QRectF Diagram::drawingRect() const$/;"	f	class:Diagram
dropEvent	diagramview.cpp	/^void DiagramView::dropEvent(QDropEvent *e) {$/;"	f	class:DiagramView
dropEvent	elementspanel.cpp	/^void ElementsPanel::dropEvent(QDropEvent *e) {$/;"	f	class:ElementsPanel
dropEvent	qetmainwindow.cpp	/^void QETMainWindow::dropEvent(QDropEvent *e) {$/;"	f	class:QETMainWindow
dropInstance	factory/elementfactory.h	/^		static void dropInstance () {$/;"	f	class:ElementFactory
duplicateCurrentLocation	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::duplicateCurrentLocation() {$/;"	f	class:QETTitleBlockTemplateEditor
duplicateCurrentTitleBlockTemplate	ui/titleblockpropertieswidget.cpp	/^void TitleBlockPropertiesWidget::duplicateCurrentTitleBlockTemplate() {$/;"	f	class:TitleBlockPropertiesWidget
duplicate_	titleblock/qettemplateeditor.h	/^	bool duplicate_;$/;"	m	class:QETTitleBlockTemplateEditor
dxfBegin	createdxf.cpp	/^void  Createdxf::dxfBegin (QString fileName)$/;"	f	class:Createdxf
dxfEnd	createdxf.cpp	/^void  Createdxf::dxfEnd (QString fileName)$/;"	f	class:Createdxf
eachStrIsEqual	qet.cpp	/^bool QET::eachStrIsEqual(const QStringList &qsl) {$/;"	f	class:QET
east	orientationset.h	/^inline bool OrientationSet::east() const {$/;"	f	class:OrientationSet
east_ori	orientationset.h	/^	bool east_ori;$/;"	m	class:OrientationSet
edit	qetgraphicsitem/diagramtextitem.cpp	/^void DiagramTextItem::edit() {$/;"	f	class:DiagramTextItem
edit	titleblock/qettemplateeditor.cpp	/^bool QETTitleBlockTemplateEditor::edit(QETProject *project, const QString &template_name) {$/;"	f	class:QETTitleBlockTemplateEditor
edit	titleblock/qettemplateeditor.cpp	/^bool QETTitleBlockTemplateEditor::edit(TitleBlockTemplate *tbt) {$/;"	f	class:QETTitleBlockTemplateEditor
edit	titleblock/qettemplateeditor.cpp	/^bool QETTitleBlockTemplateEditor::edit(const QString &file_path) {$/;"	f	class:QETTitleBlockTemplateEditor
edit	titleblock/qettemplateeditor.cpp	/^bool QETTitleBlockTemplateEditor::edit(const TitleBlockTemplateLocation &location) {$/;"	f	class:QETTitleBlockTemplateEditor
edit	titleblock/templatecellwidget.cpp	/^void TitleBlockTemplateCellWidget::edit(TitleBlockCell *cell) {$/;"	f	class:TitleBlockTemplateCellWidget
editAdjust	titleblock/templatecellwidget.cpp	/^void TitleBlockTemplateCellWidget::editAdjust() {$/;"	f	class:TitleBlockTemplateCellWidget
editAlignment	titleblock/templatecellwidget.cpp	/^void TitleBlockTemplateCellWidget::editAlignment() {$/;"	f	class:TitleBlockTemplateCellWidget
editAutonum	ui/diagrampropertiesdialog.cpp	/^void DiagramPropertiesDialog::editAutonum() {$/;"	f	class:DiagramPropertiesDialog
editCategory	elementscategorieswidget.cpp	/^void ElementsCategoriesWidget::editCategory() {$/;"	f	class:ElementsCategoriesWidget
editCategory	elementspanelwidget.cpp	/^void ElementsPanelWidget::editCategory() {$/;"	f	class:ElementsPanelWidget
editColumn	titleblock/templateview.cpp	/^void TitleBlockTemplateView::editColumn(HelperCell *cell) {$/;"	f	class:TitleBlockTemplateView
editConductorColor	diagramview.cpp	/^void DiagramView::editConductorColor(Conductor *edited_conductor) {$/;"	f	class:DiagramView
editCopyOf	titleblock/qettemplateeditor.cpp	/^bool QETTitleBlockTemplateEditor::editCopyOf(const TitleBlockTemplate *tbt) {$/;"	f	class:QETTitleBlockTemplateEditor
editCurrentDiagramProperties	projectview.cpp	/^void ProjectView::editCurrentDiagramProperties() {$/;"	f	class:ProjectView
editCurrentDiagramProperties	qetdiagrameditor.cpp	/^void QETDiagramEditor::editCurrentDiagramProperties() {$/;"	f	class:QETDiagramEditor
editCurrentProjectProperties	qetdiagrameditor.cpp	/^void QETDiagramEditor::editCurrentProjectProperties() {$/;"	f	class:QETDiagramEditor
editCurrentTitleBlockTemplate	ui/titleblockpropertieswidget.cpp	/^void TitleBlockPropertiesWidget::editCurrentTitleBlockTemplate() {$/;"	f	class:TitleBlockPropertiesWidget
editDiagramProperties	diagramview.cpp	/^void DiagramView::editDiagramProperties() {$/;"	f	class:DiagramView
editDiagramProperties	elementspanelwidget.cpp	/^void ElementsPanelWidget::editDiagramProperties() {$/;"	f	class:ElementsPanelWidget
editDiagramProperties	projectview.cpp	/^void ProjectView::editDiagramProperties(Diagram *diagram) {$/;"	f	class:ProjectView
editDiagramProperties	projectview.cpp	/^void ProjectView::editDiagramProperties(DiagramView *diagram_view) {$/;"	f	class:ProjectView
editDiagramProperties	qetdiagrameditor.cpp	/^void QETDiagramEditor::editDiagramProperties(Diagram *diagram) {$/;"	f	class:QETDiagramEditor
editDiagramProperties	qetdiagrameditor.cpp	/^void QETDiagramEditor::editDiagramProperties(DiagramView *diagram_view) {$/;"	f	class:QETDiagramEditor
editElement	elementspanelwidget.cpp	/^void ElementsPanelWidget::editElement() {$/;"	f	class:ElementsPanelWidget
editElement	ui/elementpropertieswidget.cpp	/^void elementpropertieswidget::editElement() {$/;"	f	class:elementpropertieswidget
editElementInEditor	qetdiagrameditor.cpp	/^void QETDiagramEditor::editElementInEditor(const ElementsLocation &location) {$/;"	f	class:QETDiagramEditor
editFontSize	titleblock/templatecellwidget.cpp	/^void TitleBlockTemplateCellWidget::editFontSize() {$/;"	f	class:TitleBlockTemplateCellWidget
editLabel	titleblock/templatecellwidget.cpp	/^void TitleBlockTemplateCellWidget::editLabel() {$/;"	f	class:TitleBlockTemplateCellWidget
editLabelDisplayed	titleblock/templatecellwidget.cpp	/^void TitleBlockTemplateCellWidget::editLabelDisplayed() {$/;"	f	class:TitleBlockTemplateCellWidget
editLogo	titleblock/templatecellwidget.cpp	/^void TitleBlockTemplateCellWidget::editLogo() {$/;"	f	class:TitleBlockTemplateCellWidget
editLogos	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::editLogos() {$/;"	f	class:QETTitleBlockTemplateEditor
editName	titleblock/templatecellwidget.cpp	/^void TitleBlockTemplateCellWidget::editName() {$/;"	f	class:TitleBlockTemplateCellWidget
editProjectProperties	elementspanelwidget.cpp	/^void ElementsPanelWidget::editProjectProperties() {$/;"	f	class:ElementsPanelWidget
editProjectProperties	projectview.cpp	/^void ProjectView::editProjectProperties() {$/;"	f	class:ProjectView
editProjectProperties	qetdiagrameditor.cpp	/^void QETDiagramEditor::editProjectProperties(ProjectView *project_view) {$/;"	f	class:QETDiagramEditor
editProjectProperties	qetdiagrameditor.cpp	/^void QETDiagramEditor::editProjectProperties(QETProject *project) {$/;"	f	class:QETDiagramEditor
editProperty	qetgraphicsitem/conductor.cpp	/^void Conductor::editProperty() {$/;"	f	class:Conductor
editProperty	qetgraphicsitem/diagramimageitem.cpp	/^void DiagramImageItem::editProperty() {$/;"	f	class:DiagramImageItem
editProperty	qetgraphicsitem/element.cpp	/^void Element::editProperty() {$/;"	f	class:Element
editProperty	qetgraphicsitem/qetgraphicsitem.h	/^		virtual void     editProperty  ()      {}$/;"	f	class:QetGraphicsItem
editProperty	qetgraphicsitem/qetshapeitem.cpp	/^void QetShapeItem::editProperty()$/;"	f	class:QetShapeItem
editRow	titleblock/templateview.cpp	/^void TitleBlockTemplateView::editRow(HelperCell *cell) {$/;"	f	class:TitleBlockTemplateView
editSelectedConductorColor	diagramview.cpp	/^void DiagramView::editSelectedConductorColor() {$/;"	f	class:DiagramView
editSelectedElementInEditor	qetdiagrameditor.cpp	/^void QETDiagramEditor::editSelectedElementInEditor() {$/;"	f	class:QETDiagramEditor
editSelection	diagramview.cpp	/^void DiagramView::editSelection() {$/;"	f	class:DiagramView
editSelectionProperties	diagramview.cpp	/^void DiagramView::editSelectionProperties() {$/;"	f	class:DiagramView
editSelectionProperties	qetdiagrameditor.cpp	/^void QETDiagramEditor::editSelectionProperties() {$/;"	f	class:QETDiagramEditor
editTemplateInformation	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::editTemplateInformation() {$/;"	f	class:QETTitleBlockTemplateEditor
editTitleBlockTemplate	elementspanelwidget.cpp	/^void ElementsPanelWidget::editTitleBlockTemplate() {$/;"	f	class:ElementsPanelWidget
editTitleBlockTemplateRequired	projectview.cpp	/^void ProjectView::editTitleBlockTemplateRequired(const QString &template_name, bool duplicate) {$/;"	f	class:ProjectView
editTranslatableValue	titleblock/templatecellwidget.cpp	/^void TitleBlockTemplateCellWidget::editTranslatableValue(NamesList &names, const QString &attribute, const QString &title) const {$/;"	f	class:TitleBlockTemplateCellWidget
editType	titleblock/templatecellwidget.cpp	/^void TitleBlockTemplateCellWidget::editType() {$/;"	f	class:TitleBlockTemplateCellWidget
editValue	titleblock/templatecellwidget.cpp	/^void TitleBlockTemplateCellWidget::editValue() {$/;"	f	class:TitleBlockTemplateCellWidget
edit_author	editor/qetelementeditor.h	/^	QAction *edit_delete, *edit_size_hs, *edit_names, *edit_author, *m_edit_properties;$/;"	m	class:QETElementEditor
edit_category	elementspanelwidget.h	/^	QAction *new_category, *edit_category, *delete_category;$/;"	m	class:ElementsPanelWidget
edit_column_dim_	titleblock/templateview.h	/^	QAction *edit_column_dim_, *edit_row_dim_;$/;"	m	class:TitleBlockTemplateView
edit_delete	editor/qetelementeditor.h	/^	QAction *edit_delete, *edit_size_hs, *edit_names, *edit_author, *m_edit_properties;$/;"	m	class:QETElementEditor
edit_element	elementspanelwidget.h	/^	QAction *new_element, *edit_element, *delete_element, *open_element;$/;"	m	class:ElementsPanelWidget
edit_element	ui/elementpropertieswidget.h	/^								*edit_element;$/;"	m	class:elementpropertieswidget
edit_info_	titleblock/qettemplateeditor.h	/^	QAction *undo_, *redo_, *cut_, *copy_, *paste_, *edit_logos_, *edit_info_, *add_row_, *add_col_, *merge_cells_, *split_cell_;$/;"	m	class:QETTitleBlockTemplateEditor
edit_logos_	titleblock/qettemplateeditor.h	/^	QAction *undo_, *redo_, *cut_, *copy_, *paste_, *edit_logos_, *edit_info_, *add_row_, *add_col_, *merge_cells_, *split_cell_;$/;"	m	class:QETTitleBlockTemplateEditor
edit_menu	editor/qetelementeditor.h	/^	QMenu *file_menu, *edit_menu, *paste_from_menu, *display_menu, *tools_menu;$/;"	m	class:QETElementEditor
edit_menu_	titleblock/qettemplateeditor.h	/^	QMenu *file_menu_, *edit_menu_, *display_menu_;$/;"	m	class:QETTitleBlockTemplateEditor
edit_names	editor/qetelementeditor.h	/^	QAction *edit_delete, *edit_size_hs, *edit_names, *edit_author, *m_edit_properties;$/;"	m	class:QETElementEditor
edit_row_dim_	titleblock/templateview.h	/^	QAction *edit_column_dim_, *edit_row_dim_;$/;"	m	class:TitleBlockTemplateView
edit_selection	qetdiagrameditor.h	/^		QAction *edit_selection;	 \/\/\/< To edit selected item$/;"	m	class:QETDiagramEditor
edit_size_hs	editor/qetelementeditor.h	/^	QAction *edit_delete, *edit_size_hs, *edit_names, *edit_author, *m_edit_properties;$/;"	m	class:QETElementEditor
editedFiles	qetdiagrameditor.cpp	/^QList<QString> QETDiagramEditor::editedFiles() const {$/;"	f	class:QETDiagramEditor
editedP1	editor/lineeditor.cpp	/^QPointF LineEditor::editedP1() const {$/;"	f	class:LineEditor
editedP2	editor/lineeditor.cpp	/^QPointF LineEditor::editedP2() const {$/;"	f	class:LineEditor
editedTopLeft	editor/rectangleeditor.cpp	/^QPointF RectangleEditor::editedTopLeft() const {$/;"	f	class:RectangleEditor
edited_cell_	titleblock/templatecellwidget.h	/^	TitleBlockCell *edited_cell_;$/;"	m	class:TitleBlockTemplateCellWidget
editor	editor/elementscene.cpp	/^QETElementEditor* ElementScene::editor() const {$/;"	f	class:ElementScene
editor_layout	ui/ui_selectautonumw.h	/^    QVBoxLayout *editor_layout;$/;"	m	class:Ui_SelectAutonumW
editor_scene_	editor/editorcommands.h	/^		ElementScene *editor_scene_;$/;"	m	class:ElementEditionCommand
editor_view_	editor/editorcommands.h	/^		ElementView *editor_view_;$/;"	m	class:ElementEditionCommand
editors_	editor/qetelementeditor.h	/^	QHash<QString, ElementItemEditor *> editors_;$/;"	m	class:QETElementEditor
effective_bounding_rect_	editor/elementprimitivedecorator.h	/^	QRectF effective_bounding_rect_; \/\/\/< actual, effective bounding rect -- never shrinks$/;"	m	class:ElementPrimitiveDecorator
eipw_list	ui/elementinfowidget.h	/^		QList <ElementInfoPartWidget *>  eipw_list;$/;"	m	class:ElementInfoWidget
eiw_	ui/elementpropertieswidget.h	/^		ElementInfoWidget       *eiw_;$/;"	m	class:elementpropertieswidget
element	elementdefinition.cpp	/^ElementDefinition *ElementDefinition::element(const QString &path) {$/;"	f	class:ElementDefinition
element	elementdeleter.h	/^	ElementsCollectionItem *element;$/;"	m	class:ElementDeleter
element	elementscollection.cpp	/^ElementDefinition *ElementsCollection::element(const QString &elmt_path) {$/;"	f	class:ElementsCollection
element	fileelementscategory.cpp	/^ElementDefinition *FileElementsCategory::element(const QString &elmt_path) {$/;"	f	class:FileElementsCategory
element	xmlelementscategory.cpp	/^ElementDefinition *XmlElementsCategory::element(const QString &elmt_path) {$/;"	f	class:XmlElementsCategory
elementAlreadyExists	basicmoveelementshandler.cpp	/^QET::Action BasicMoveElementsHandler::elementAlreadyExists(ElementDefinition *, ElementDefinition *) {$/;"	f	class:BasicMoveElementsHandler
elementAlreadyExists	integrationmoveelementshandler.cpp	/^QET::Action IntegrationMoveElementsHandler::elementAlreadyExists(ElementDefinition *src, ElementDefinition *dst) {$/;"	f	class:IntegrationMoveElementsHandler
elementAlreadyExists	interactivemoveelementshandler.cpp	/^QET::Action InteractiveMoveElementsHandler::elementAlreadyExists(ElementDefinition *src, ElementDefinition *dst) {$/;"	f	class:InteractiveMoveElementsHandler
elementContentBoundingRect	editor/elementscene.cpp	/^QRectF ElementScene::elementContentBoundingRect(const ElementContent &content) const {$/;"	f	class:ElementScene
elementEditor	editor/elementitemeditor.cpp	/^QETElementEditor *ElementItemEditor::elementEditor() const {$/;"	f	class:ElementItemEditor
elementEditor	editor/graphicspart/customelementpart.cpp	/^QETElementEditor *CustomElementPart::elementEditor() const {$/;"	f	class:CustomElementPart
elementEditors	qetapp.cpp	/^QList<QETElementEditor *> QETApp::elementEditors (QETProject *project)$/;"	f	class:QETApp
elementEditors	qetapp.cpp	/^QList<QETElementEditor *> QETApp::elementEditors()$/;"	f	class:QETApp
elementFiles	qetarguments.cpp	/^QList<QString> QETArguments::elementFiles() const {$/;"	f	class:QETArguments
elementInfoKeys	qetapp.cpp	/^QStringList QETApp::elementInfoKeys()$/;"	f	class:QETApp
elementInformations	qetgraphicsitem/element.h	/^		DiagramContext  elementInformations    ()const              {return element_informations_;}$/;"	f	class:Element
elementIntegrated	elementspanel.cpp	/^QList<ElementsLocation> ElementsPanel::elementIntegrated(QETProject *project, const ElementsLocation &location) {$/;"	f	class:ElementsPanel
elementIntegrated	genericpanel.cpp	/^QList<ElementsLocation> GenericPanel::elementIntegrated(QETProject *project, const ElementsLocation &location) {$/;"	f	class:GenericPanel
elementIsNotReadable	basicmoveelementshandler.cpp	/^QET::Action BasicMoveElementsHandler::elementIsNotReadable(ElementDefinition *) {$/;"	f	class:BasicMoveElementsHandler
elementIsNotReadable	interactivemoveelementshandler.cpp	/^QET::Action InteractiveMoveElementsHandler::elementIsNotReadable(ElementDefinition *element) {$/;"	f	class:InteractiveMoveElementsHandler
elementIsNotWritable	basicmoveelementshandler.cpp	/^QET::Action BasicMoveElementsHandler::elementIsNotWritable(ElementDefinition *) {$/;"	f	class:BasicMoveElementsHandler
elementIsNotWritable	interactivemoveelementshandler.cpp	/^QET::Action InteractiveMoveElementsHandler::elementIsNotWritable(ElementDefinition *element) {$/;"	f	class:InteractiveMoveElementsHandler
elementKindInfo	editor/elementscene.h	/^	DiagramContext elementKindInfo () const {return m_elmt_kindInfo;}$/;"	f	class:ElementScene
elementLocationForItem	genericpanel.cpp	/^ElementsLocation GenericPanel::elementLocationForItem(QTreeWidgetItem *item) const {$/;"	f	class:GenericPanel
elementPositionText	qetgraphicsitem/crossrefitem.cpp	/^QString CrossRefItem::elementPositionText(const Element *elmt, const bool &add_prefix) const{$/;"	f	class:CrossRefItem
elementScene	editor/editorcommands.cpp	/^ElementScene *ElementEditionCommand::elementScene() const {$/;"	f	class:ElementEditionCommand
elementScene	editor/editorcommands.cpp	/^ElementScene *ScalePartsCommand::elementScene() const {$/;"	f	class:ScalePartsCommand
elementScene	editor/elementitemeditor.cpp	/^ElementScene *ElementItemEditor::elementScene() const {$/;"	f	class:ElementItemEditor
elementScene	editor/graphicspart/customelementpart.cpp	/^ElementScene *CustomElementPart::elementScene() const {$/;"	f	class:CustomElementPart
elementScene	editor/qetelementeditor.h	/^inline ElementScene *QETElementEditor::elementScene() const {$/;"	f	class:QETElementEditor
elementSceneGeometricRect	editor/elementscene.cpp	/^QRectF ElementScene::elementSceneGeometricRect() const{$/;"	f	class:ElementScene
elementTranslatedInfoKey	qetapp.cpp	/^QString QETApp::elementTranslatedInfoKey (QString &info)$/;"	f	class:QETApp
elementType	editor/elementscene.h	/^	QString elementType () const {return m_elmt_type;}$/;"	f	class:ElementScene
elementTypeName	editor/elementitemeditor.cpp	/^QString ElementItemEditor::elementTypeName() const {$/;"	f	class:ElementItemEditor
elementView	editor/editorcommands.cpp	/^ElementView *ElementEditionCommand::elementView() const {$/;"	f	class:ElementEditionCommand
element_	diagramcommands.h	/^	Element *element_;$/;"	m	class:LinkElementsCommand
element_	diagramcommands.h	/^	Element *element_;$/;"	m	class:unlinkElementsCommand
element_	ui/elementinfowidget.h	/^		Element                         *element_;$/;"	m	class:ElementInfoWidget
element_	ui/elementpropertieswidget.h	/^		Element                 *element_;$/;"	m	class:elementpropertieswidget
element_	ui/linksingleelementwidget.h	/^	Element *element_;$/;"	m	class:LinkSingleElementWidget
element_	ui/masterpropertieswidget.h	/^	Element *element_;$/;"	m	class:MasterPropertiesWidget
element_definition_	xmlelementdefinition.h	/^	QDomElement element_definition_;$/;"	m	class:XmlElementDefinition
element_editor	editor/elementitemeditor.h	/^		QETElementEditor *element_editor;$/;"	m	class:ElementItemEditor
element_editor	editor/elementscene.h	/^		QETElementEditor *element_editor;$/;"	m	class:ElementScene
element_editor	editor/graphicspart/customelementpart.h	/^	QETElementEditor *element_editor;$/;"	m	class:CustomElementPart
element_files_	qetarguments.h	/^	QList<QString> element_files_;$/;"	m	class:QETArguments
element_informations_	qetgraphicsitem/element.h	/^		DiagramContext element_informations_, kind_informations_;$/;"	m	class:Element
element_names	newelementwizard.h	/^	NamesListWidget *element_names;$/;"	m	class:NewElementWizard
element_texts_mover_	diagram.h	/^		ElementTextsMover *element_texts_mover_;$/;"	m	class:Diagram
element_toolbar	editor/qetelementeditor.h	/^	QToolBar *parts_toolbar, *main_toolbar, *view_toolbar, *depth_toolbar, *element_toolbar;$/;"	m	class:QETElementEditor
element_type_name	editor/elementitemeditor.h	/^		QString element_type_name;$/;"	m	class:ElementItemEditor
elementpropertieswidget	ui/elementpropertieswidget.cpp	/^elementpropertieswidget::elementpropertieswidget(Element *elmt, QWidget *parent) :$/;"	f	class:elementpropertieswidget
elementpropertieswidget	ui/elementpropertieswidget.h	/^class elementpropertieswidget : public QDialog {$/;"	c
elements	diagram.cpp	/^QList <Element *> Diagram::elements() const {$/;"	f	class:Diagram
elements	diagramcontent.h	/^	QSet<Element *> elements;$/;"	m	class:DiagramContent
elements	elementdefinition.cpp	/^QList<ElementDefinition *> ElementDefinition::elements() {$/;"	f	class:ElementDefinition
elements	elementscollection.cpp	/^QList<ElementDefinition *> ElementsCollection::elements() {$/;"	f	class:ElementsCollection
elements	fileelementscategory.cpp	/^QList<ElementDefinition *> FileElementsCategory::elements() {$/;"	f	class:FileElementsCategory
elements	xmlelementscategory.cpp	/^QList<ElementDefinition *> XmlElementsCategory::elements() {$/;"	f	class:XmlElementsCategory
elementsCache	genericpanel.cpp	/^ElementsCollectionCache *GenericPanel::elementsCache() {$/;"	f	class:GenericPanel
elementsCategoriesList	elementscategorieswidget.h	/^inline ElementsCategoriesList &ElementsCategoriesWidget::elementsCategoriesList() const {$/;"	f	class:ElementsCategoriesWidget
elementsCollectionChanged	genericpanel.cpp	/^void GenericPanel::elementsCollectionChanged(ElementsCollection *collection) {$/;"	f	class:GenericPanel
elementsCollectionItemsCount	elementspanel.cpp	/^int ElementsPanel::elementsCollectionItemsCount() {$/;"	f	class:ElementsPanel
elementsPanel	elementspanelwidget.h	/^inline ElementsPanel &ElementsPanelWidget::elementsPanel() const {$/;"	f	class:ElementsPanelWidget
elementsRecentFiles	qetapp.cpp	/^RecentFiles *QETApp::elementsRecentFiles()$/;"	f	class:QETApp
elements_	fileelementscategory.h	/^	QHash<QString, FileElementDefinition *> elements_;$/;"	m	class:FileElementsCategory
elements_	genericpanel.h	/^	QHash<ElementsLocation, QTreeWidgetItem *>           elements_;     \/\/\/< Allow quick retrieval of the item representing an element$/;"	m	class:GenericPanel
elements_	xmlelementscategory.h	/^	QHash<QString, XmlElementDefinition *> elements_;$/;"	m	class:XmlElementsCategory
elements_list	ui/elementselectorwidget.h	/^	QList <Element *>          elements_list;$/;"	m	class:ElementSelectorWidget
elements_management_	configpages.h	/^	QGroupBox *elements_management_;$/;"	m	class:GeneralConfigurationPage
elements_mover_	diagram.h	/^		ElementsMover     *elements_mover_;$/;"	m	class:Diagram
elements_panel	elementspanelwidget.h	/^	ElementsPanel *elements_panel;$/;"	m	class:ElementsPanelWidget
elements_recent_files_	qetapp.cpp	/^RecentFiles *QETApp::elements_recent_files_ = 0;$/;"	m	class:QETApp	file:
elements_recent_files_	qetapp.h	/^	static RecentFiles *elements_recent_files_;$/;"	m	class:QETApp
elements_to_rotate	diagramcommands.h	/^	QList<Element *> elements_to_rotate;$/;"	m	class:RotateElementsCommand
elementscategorieslist	elementscategorieswidget.h	/^	ElementsCategoriesList *elementscategorieslist;$/;"	m	class:ElementsCategoriesWidget
elmt_info	ui/elementinfowidget.h	/^		DiagramContext                   elmt_info;$/;"	m	class:ElementInfoWidget
elmt_list	diagramcommands.h	/^	QList <Element *> elmt_list;$/;"	m	class:LinkElementsCommand
elmt_list	diagramcommands.h	/^	QList <Element *> elmt_list;$/;"	m	class:unlinkElementsCommand
elmt_state	qetgraphicsitem/customelement.h	/^	int elmt_state; \/\/ hold the error code in case the instanciation fails, or 0 if everything went well$/;"	m	class:CustomElement
embeddedCollection	qetproject.cpp	/^ElementsCollection *QETProject::embeddedCollection() const {$/;"	f	class:QETProject
embeddedCollectionWasModified	qetproject.cpp	/^bool QETProject::embeddedCollectionWasModified() {$/;"	f	class:QETProject
embeddedTitleBlockTemplates	qetproject.cpp	/^QList<QString> QETProject::embeddedTitleBlockTemplates() {$/;"	f	class:QETProject
embeddedTitleBlockTemplatesCollection	qetproject.cpp	/^TitleBlockTemplatesProjectCollection *QETProject::embeddedTitleBlockTemplatesCollection() {$/;"	f	class:QETProject
emitChangeSignals	qtextorientationspinboxwidget.cpp	/^void QTextOrientationSpinBoxWidget::emitChangeSignals() {$/;"	f	class:QTextOrientationSpinBoxWidget
emitFirstActivated	genericpanel.cpp	/^void GenericPanel::emitFirstActivated() {$/;"	f	class:GenericPanel
emitLogosChangedSignal	titleblock/templatelogomanager.cpp	/^void TitleBlockTemplateLogoManager::emitLogosChangedSignal() {$/;"	f	class:TitleBlockTemplateLogoManager
emitModification	titleblock/templatecellwidget.cpp	/^void TitleBlockTemplateCellWidget::emitModification(const QString &attribute, const QVariant &new_value) const {$/;"	f	class:TitleBlockTemplateCellWidget
empty_label_	titleblock/templatecellwidget.h	/^	QLabel *empty_label_;$/;"	m	class:TitleBlockTemplateCellWidget
en	qeticons.cpp	/^		QIcon en;$/;"	m	namespace:QET::Icons	file:
end1_length	editor/lineeditor.h	/^		QDoubleSpinBox*end1_length, *end2_length;$/;"	m	class:LineEditor
end1_type	editor/lineeditor.h	/^		QComboBox *end1_type, *end2_type;$/;"	m	class:LineEditor
end2_length	editor/lineeditor.h	/^		QDoubleSpinBox*end1_length, *end2_length;$/;"	m	class:LineEditor
end2_type	editor/lineeditor.h	/^		QComboBox *end1_type, *end2_type;$/;"	m	class:LineEditor
endCollection	elementscollectioncache.cpp	/^void ElementsCollectionCache::endCollection(ElementsCollection *collection) {$/;"	f	class:ElementsCollectionCache
endEdition	editor/graphicspart/parttext.cpp	/^void PartText::endEdition() {$/;"	f	class:PartText
endEdition	editor/graphicspart/parttextfield.cpp	/^void PartTextField::endEdition() {$/;"	f	class:PartTextField
endMoveElementTexts	diagram.cpp	/^void Diagram::endMoveElementTexts() {$/;"	f	class:Diagram
endMoveElements	diagram.cpp	/^void Diagram::endMoveElements() {$/;"	f	class:Diagram
endMovement	elementsmover.cpp	/^void ElementsMover::endMovement()$/;"	f	class:ElementsMover
endMovement	elementtextsmover.cpp	/^void ElementTextsMover::endMovement() {$/;"	f	class:ElementTextsMover
endOrientation	conductorprofile.h	/^	Qet::Orientation endOrientation;$/;"	m	class:ConductorProfile
endTypeFromString	qet.cpp	/^Qet::EndType Qet::endTypeFromString(const QString &string) {$/;"	f	class:Qet
endTypeToString	qet.cpp	/^QString Qet::endTypeToString(const Qet::EndType &end_type) {$/;"	f	class:Qet
ensureHierarchyIsVisible	elementspanel.cpp	/^void ElementsPanel::ensureHierarchyIsVisible(const QList<QTreeWidgetItem *> &items) {$/;"	f	class:ElementsPanel
ensureIntegrationCategoryExists	qetproject.cpp	/^bool QETProject::ensureIntegrationCategoryExists() {$/;"	f	class:QETProject
epw	configpages.h	/^	ExportPropertiesWidget *epw;$/;"	m	class:ExportConfigPage
epw	configpages.h	/^	ExportPropertiesWidget *epw;$/;"	m	class:PrintConfigPage
epw	exportdialog.h	/^	ExportPropertiesWidget *epw;$/;"	m	class:ExportDialog
equals	elementdefinition.cpp	/^bool ElementDefinition::equals(ElementDefinition &other) {$/;"	f	class:ElementDefinition
erase_all_button_	interactivemoveelementshandler.h	/^	QPushButton *erase_all_button_;$/;"	m	class:InteractiveMoveElementsHandler
erase_button_	interactivemoveelementshandler.h	/^	QPushButton *erase_button_;$/;"	m	class:InteractiveMoveElementsHandler
erase_element_	integrationmoveelementshandler.h	/^	QRadioButton *erase_element_;$/;"	m	class:IntegrationMoveElementsHandler
erase_template_	titleblock/integrationmovetemplateshandler.h	/^	QRadioButton *erase_template_;           \/\/\/< Radio button the user may click for the integrated template to erase the existing one$/;"	m	class:IntegrationMoveTitleBlockTemplatesHandler
erase_textfield	elementspanelwidget.h	/^	QAction *erase_textfield;$/;"	m	class:ElementsPanelWidget
erased_cells_	titleblock/templatecommands.h	/^	QHash<TitleBlockCell *, TitleBlockCell> erased_cells_;$/;"	m	class:PasteTemplateCellsCommand
errorMessage	qetresult.cpp	/^QString QETResult::errorMessage() const {$/;"	f	class:QETResult
errorWithACategory	basicmoveelementshandler.cpp	/^QET::Action BasicMoveElementsHandler::errorWithACategory(ElementsCategory *, const QString &) {$/;"	f	class:BasicMoveElementsHandler
errorWithACategory	interactivemoveelementshandler.cpp	/^QET::Action InteractiveMoveElementsHandler::errorWithACategory(ElementsCategory *category, const QString &message) {$/;"	f	class:InteractiveMoveElementsHandler
errorWithATemplate	titleblock/integrationmovetemplateshandler.cpp	/^QET::Action IntegrationMoveTitleBlockTemplatesHandler::errorWithATemplate(const TitleBlockTemplateLocation &tbt, const QString &message) {$/;"	f	class:IntegrationMoveTitleBlockTemplatesHandler
errorWithAnElement	basicmoveelementshandler.cpp	/^QET::Action BasicMoveElementsHandler::errorWithAnElement(ElementDefinition *, const QString &) {$/;"	f	class:BasicMoveElementsHandler
errorWithAnElement	interactivemoveelementshandler.cpp	/^QET::Action InteractiveMoveElementsHandler::errorWithAnElement(ElementDefinition *element, const QString &message) {$/;"	f	class:InteractiveMoveElementsHandler
error_	basicmoveelementshandler.h	/^	QET::Action error_;$/;"	m	class:BasicMoveElementsHandler
error_message_	qetresult.h	/^	QString error_message_; \/\/\/< Embedded error message, typically used to explain what failed to users$/;"	m	class:QETResult
es	qeticons.cpp	/^		QIcon es;$/;"	m	namespace:QET::Icons	file:
escapeSpaces	qet.cpp	/^QString QET::escapeSpaces(const QString &string) {$/;"	f	class:QET
esw_	ui/linksingleelementwidget.h	/^	ElementSelectorWidget *esw_;$/;"	m	class:LinkSingleElementWidget
event	diagramview.cpp	/^bool DiagramView::event(QEvent *e) {$/;"	f	class:DiagramView
event	editor/elementview.cpp	/^bool ElementView::event(QEvent *e) {$/;"	f	class:ElementView
event	genericpanel.cpp	/^bool GenericPanel::event(QEvent *event) {$/;"	f	class:GenericPanel
event	qetapp.cpp	/^bool QETApp::event (QEvent *e)$/;"	f	class:QETApp
event	qetdiagrameditor.cpp	/^bool QETDiagramEditor::event(QEvent *e) {$/;"	f	class:QETDiagramEditor
event	qetmainwindow.cpp	/^bool QETMainWindow::event(QEvent *e) {$/;"	f	class:QETMainWindow
event	titleblock/templateview.cpp	/^bool TitleBlockTemplateView::event(QEvent *event) {$/;"	f	class:TitleBlockTemplateView
every_diagram_reduced	qetapp.h	/^	bool every_diagram_reduced;$/;"	m	class:QETApp
every_diagram_visible	qetapp.h	/^	bool every_diagram_visible;$/;"	m	class:QETApp
every_editor_reduced	qetapp.h	/^	bool every_editor_reduced;$/;"	m	class:QETApp
every_element_reduced	qetapp.h	/^	bool every_element_reduced;$/;"	m	class:QETApp
every_element_visible	qetapp.h	/^	bool every_element_visible;$/;"	m	class:QETApp
every_template_reduced	qetapp.h	/^	bool every_template_reduced;$/;"	m	class:QETApp
every_template_visible	qetapp.h	/^	bool every_template_visible;$/;"	m	class:QETApp
exec	diagramprintdialog.cpp	/^void DiagramPrintDialog::exec() {$/;"	f	class:DiagramPrintDialog
exec	elementdeleter.cpp	/^bool ElementDeleter::exec() {$/;"	f	class:ElementDeleter
exec	elementdialog.cpp	/^int ElementDialog::exec() {$/;"	f	class:ElementDialog
exec	elementscategorydeleter.cpp	/^bool ElementsCategoryDeleter::exec() {$/;"	f	class:ElementsCategoryDeleter
exec	titleblock/templatedeleter.cpp	/^bool TitleBlockTemplateDeleter::exec() {$/;"	f	class:TitleBlockTemplateDeleter
exec	ui/projectpropertiesdialog.cpp	/^void ProjectPropertiesDialog::exec() {$/;"	f	class:ProjectPropertiesDialog
execConfiguredDialog	elementdialog.cpp	/^ElementsLocation ElementDialog::execConfiguredDialog(int mode, QWidget *parentWidget) {$/;"	f	class:ElementDialog
exists	fileelementdefinition.cpp	/^bool FileElementDefinition::exists() {$/;"	f	class:FileElementDefinition
exists	fileelementscategory.cpp	/^bool FileElementsCategory::exists() {$/;"	f	class:FileElementsCategory
exists	fileelementscollection.cpp	/^bool FileElementsCollection::exists() {$/;"	f	class:FileElementsCollection
exists	xmlelementdefinition.cpp	/^bool XmlElementDefinition::exists() {$/;"	f	class:XmlElementDefinition
exists	xmlelementscategory.cpp	/^bool XmlElementsCategory::exists() {$/;"	f	class:XmlElementsCategory
exists	xmlelementscollection.cpp	/^bool XmlElementsCollection::exists() {$/;"	f	class:XmlElementsCollection
exportBorder	bordertitleblock.cpp	/^BorderProperties BorderTitleBlock::exportBorder() {$/;"	f	class:BorderTitleBlock
exportCellToXml	titleblocktemplate.cpp	/^void TitleBlockTemplate::exportCellToXml(TitleBlockCell *cell, QDomElement &xml_element) const {$/;"	f	class:TitleBlockTemplate
exportDate	titleblockproperties.cpp	/^QString TitleBlockProperties::exportDate() const {$/;"	f	class:TitleBlockProperties
exportDiagram	exportdialog.cpp	/^void ExportDialog::exportDiagram(ExportDiagramLine *diagram_line) {$/;"	f	class:ExportDialog
exportDialog	qetdiagrameditor.cpp	/^void QETDiagramEditor::exportDialog() {$/;"	f	class:QETDiagramEditor
exportLogo	titleblock/templatelogomanager.cpp	/^void TitleBlockTemplateLogoManager::exportLogo() {$/;"	f	class:TitleBlockTemplateLogoManager
exportProject	projectview.cpp	/^void ProjectView::exportProject() {$/;"	f	class:ProjectView
exportProperties	exportpropertieswidget.cpp	/^ExportProperties ExportPropertiesWidget::exportProperties() const {$/;"	f	class:ExportPropertiesWidget
exportProperties	qetprintpreviewdialog.cpp	/^ExportProperties QETPrintPreviewDialog::exportProperties() const {$/;"	f	class:QETPrintPreviewDialog
exportTitleBlock	bordertitleblock.cpp	/^TitleBlockProperties BorderTitleBlock::exportTitleBlock() {$/;"	f	class:BorderTitleBlock
export_border	exportpropertieswidget.h	/^	QRadioButton *export_border;$/;"	m	class:ExportPropertiesWidget
export_button_	titleblock/templatelogomanager.h	/^	QPushButton *export_button_;           \/\/\/< button to export an embedded logo$/;"	m	class:TitleBlockTemplateLogoManager
export_diagram	qetdiagrameditor.h	/^		QAction *export_diagram;     \/\/\/< Export diagrams of the current project as imagess$/;"	m	class:QETDiagramEditor
export_elements	exportpropertieswidget.h	/^	QRadioButton *export_elements;$/;"	m	class:ExportPropertiesWidget
exported_area	exportproperties.h	/^	QET::DiagramArea exported_area; \/\/\/< Area of diagrams to be rendered$/;"	m	class:ExportProperties
exported_content_choices	exportpropertieswidget.h	/^	QButtonGroup *exported_content_choices;$/;"	m	class:ExportPropertiesWidget
extendTerminal	qetgraphicsitem/conductor.cpp	/^QPointF Conductor::extendTerminal(const QPointF &terminal, Qet::Orientation terminal_orientation, qreal ext_size) {$/;"	f	class:Conductor
extra_cells_width_helper_cell_	titleblock/templateview.h	/^	HelperCell *extra_cells_width_helper_cell_;$/;"	m	class:TitleBlockTemplateView
extractFilesFromSettings	recentfiles.cpp	/^void RecentFiles::extractFilesFromSettings() {$/;"	f	class:RecentFiles
facing_pages_view_	qetprintpreviewdialog.h	/^	QAction *facing_pages_view_;$/;"	m	class:QETPrintPreviewDialog
factory_	factory/elementfactory.cpp	/^ElementFactory* ElementFactory::factory_ = 0;$/;"	m	class:ElementFactory	file:
factory_	factory/elementfactory.h	/^		static ElementFactory* factory_;$/;"	m	class:ElementFactory
fakePath	qetgraphicsitem/conductor.h	/^	int fakePath() {return 1;}$/;"	f	class:Conductor
fallback_label_	projectview.h	/^	QLabel *fallback_label_;$/;"	m	class:ProjectView
fallback_widget_	projectview.h	/^	QWidget *fallback_widget_;$/;"	m	class:ProjectView
fetchData	elementscollectioncache.cpp	/^bool ElementsCollectionCache::fetchData(const ElementsLocation &location) {$/;"	f	class:ElementsCollectionCache
fetchElement	elementscollectioncache.cpp	/^bool ElementsCollectionCache::fetchElement(ElementDefinition *element) {$/;"	f	class:ElementsCollectionCache
fetchNameFromCache	elementscollectioncache.cpp	/^bool ElementsCollectionCache::fetchNameFromCache(const QString &path, const QDateTime &file_mtime) {$/;"	f	class:ElementsCollectionCache
fetchPixmapFromCache	elementscollectioncache.cpp	/^bool ElementsCollectionCache::fetchPixmapFromCache(const QString &path, const QDateTime &file_mtime) {$/;"	f	class:ElementsCollectionCache
fetchWindowStats	qetapp.cpp	/^void QETApp::fetchWindowStats ($/;"	f	class:QETApp
fileName	bordertitleblock.h	/^	QString fileName() const { return(btb_filename_); }$/;"	f	class:BorderTitleBlock
fileName	diagramprintdialog.cpp	/^QString DiagramPrintDialog::fileName() const {$/;"	f	class:DiagramPrintDialog
fileName	editor/qetelementeditor.h	/^inline QString QETElementEditor::fileName() const {$/;"	f	class:QETElementEditor
filePath	fileelementdefinition.cpp	/^QString FileElementDefinition::filePath() {$/;"	f	class:FileElementDefinition
filePath	fileelementscategory.cpp	/^QString FileElementsCategory::filePath() {$/;"	f	class:FileElementsCategory
filePath	fileelementscollection.cpp	/^QString FileElementsCollection::filePath() {$/;"	f	class:FileElementsCollection
filePath	qetproject.cpp	/^QString QETProject::filePath() {$/;"	f	class:QETProject
filePath	titleblock/templatescollection.cpp	/^QString TitleBlockTemplatesFilesCollection::filePath() {$/;"	f	class:TitleBlockTemplatesFilesCollection
filePath	titleblock/templatescollection.cpp	/^QString TitleBlockTemplatesProjectCollection::filePath() {$/;"	f	class:TitleBlockTemplatesProjectCollection
filePath	xmlelementdefinition.cpp	/^QString XmlElementDefinition::filePath() {$/;"	f	class:XmlElementDefinition
filePath	xmlelementscategory.cpp	/^QString XmlElementsCategory::filePath() {$/;"	f	class:XmlElementsCategory
filePath	xmlelementscollection.cpp	/^QString XmlElementsCollection::filePath() {$/;"	f	class:XmlElementsCollection
filePathForItem	elementspanel.cpp	/^QString ElementsPanel::filePathForItem(QTreeWidgetItem *item) {$/;"	f	class:ElementsPanel
fileSystemChanged	titleblock/templatescollection.cpp	/^void TitleBlockTemplatesFilesCollection::fileSystemChanged(const QString &str) {$/;"	f	class:TitleBlockTemplatesFilesCollection
fileWasOpened	recentfiles.cpp	/^void RecentFiles::fileWasOpened(const QString &filepath) {$/;"	f	class:RecentFiles
file_menu	editor/qetelementeditor.h	/^	QMenu *file_menu, *edit_menu, *paste_from_menu, *display_menu, *tools_menu;$/;"	m	class:QETElementEditor
file_menu_	titleblock/qettemplateeditor.h	/^	QMenu *file_menu_, *edit_menu_, *display_menu_;$/;"	m	class:QETTitleBlockTemplateEditor
file_name	exportdialog.h	/^		QLineEdit *file_name;$/;"	m	class:ExportDialog::ExportDiagramLine
file_name_	diagramprintdialog.h	/^	QString file_name_;$/;"	m	class:DiagramPrintDialog
file_parent_category_	fileelementscategory.h	/^	FileElementsCategory   *file_parent_category_;$/;"	m	class:FileElementsCategory
file_parent_collection_	fileelementscategory.h	/^	FileElementsCollection *file_parent_collection_;$/;"	m	class:FileElementsCategory
file_path	fileelementdefinition.h	/^	QString file_path;$/;"	m	class:FileElementDefinition
file_path_	qetproject.h	/^	QString file_path_;$/;"	m	class:QETProject
filename	titleblockproperties.h	/^	QString filename;         \/\/\/< Filename (displayed by the default template)$/;"	m	class:TitleBlockProperties
filename_	editor/qetelementeditor.h	/^	QString filename_;$/;"	m	class:QETElementEditor
filepath_	titleblock/qettemplateeditor.h	/^	QString filepath_;$/;"	m	class:QETTitleBlockTemplateEditor
filepath_field_	diagramprintdialog.h	/^	QLineEdit *filepath_field_;$/;"	m	class:DiagramPrintDialog
files	qetarguments.cpp	/^QList<QString> QETArguments::files() const {$/;"	f	class:QETArguments
files_icon_	recentfiles.h	/^	QIcon files_icon_;$/;"	m	class:RecentFiles
fillCrossRef	qetgraphicsitem/crossrefitem.cpp	/^void CrossRefItem::fillCrossRef(QPainter &painter) {$/;"	f	class:CrossRefItem
fillDiagramItem	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::fillDiagramItem(QTreeWidgetItem *diagram_qtwi, Diagram *diagram, PanelOptions options, bool freshly_created) {$/;"	f	class:GenericPanel
fillElementItem	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::fillElementItem (QTreeWidgetItem *element_qtwi, ElementDefinition *element, PanelOptions options, bool freshly_created) {$/;"	f	class:GenericPanel
fillElementsCategoryItem	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::fillElementsCategoryItem(QTreeWidgetItem *category_qtwi, ElementsCategory *category, PanelOptions options, bool freshly_created) {$/;"	f	class:GenericPanel
fillElementsCollectionItem	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::fillElementsCollectionItem(QTreeWidgetItem *collection_qtwi, ElementsCollection *collection, PanelOptions options, bool freshly_created) {$/;"	f	class:GenericPanel
fillHeader	diagramfoliolist.cpp	/^void DiagramFolioList::fillHeader(QPainter *qp, const QRectF &row_RectF) {$/;"	f	class:DiagramFolioList
fillInfo	ui/elementinfowidget.cpp	/^void ElementInfoWidget::fillInfo() {$/;"	f	class:ElementInfoWidget
fillItem	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::fillItem(QTreeWidgetItem *qtwi, PanelOptions options, bool freshly_created) {$/;"	f	class:GenericPanel
fillLang	configpages.cpp	/^void GeneralConfigurationPage::fillLang(QSettings &settings) {$/;"	f	class:GeneralConfigurationPage
fillProjectItem	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::fillProjectItem(QTreeWidgetItem *project_qtwi, QETProject *project, PanelOptions options, bool freshly_created) {$/;"	f	class:GenericPanel
fillRow	diagramfoliolist.cpp	/^void DiagramFolioList::fillRow(QPainter *qp, const QRectF &row_rect, QString author, QString title,$/;"	f	class:DiagramFolioList
fillRow	exportdialog.cpp	/^void ExportDialog::fillRow(QString file_path, const QRectF &row_rect, QString author, QString title,$/;"	f	class:ExportDialog
fillTemplateItem	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::fillTemplateItem(QTreeWidgetItem *tb_template_qtwi, const TitleBlockTemplateLocation &tb_template, PanelOptions options, bool freshly_created) {$/;"	f	class:GenericPanel
fillTemplatesCollectionItem	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::fillTemplatesCollectionItem(QTreeWidgetItem *tbt_collection_qtwi, TitleBlockTemplatesCollection *tbt_collection, PanelOptions options, bool freshly_created) {$/;"	f	class:GenericPanel
fillView	titleblock/templatelogomanager.cpp	/^void TitleBlockTemplateLogoManager::fillView() {$/;"	f	class:TitleBlockTemplateLogoManager
fillWithEmptyCells	titleblock/templateview.cpp	/^void TitleBlockTemplateView::fillWithEmptyCells() {$/;"	f	class:TitleBlockTemplateView
filling	editor/graphicspart/customelementgraphicpart.h	/^		Filling filling   () const {return _filling;}$/;"	f	class:CustomElementGraphicPart
filling_color	editor/styleeditor.h	/^		QComboBox *filling_color, *outline_color, *size_weight, *line_style;$/;"	m	class:StyleEditor
filter	diagramcommands.h	/^	int filter;$/;"	m	class:PasteDiagramCommand
filter	elementspanel.cpp	/^void ElementsPanel::filter(const QString &m, QET::Filtering filtering) {$/;"	f	class:ElementsPanel
filter	ui/elementselectorwidget.cpp	/^QStringList ElementSelectorWidget::filter() const {$/;"	f	class:ElementSelectorWidget
filterAttributes	richtext/richtexteditor.cpp	/^	static inline void filterAttributes(const QStringRef &name,$/;"	f	namespace:qdesigner_internal
filterEdited	elementspanelwidget.cpp	/^void ElementsPanelWidget::filterEdited(const QString &next_text) {$/;"	f	class:ElementsPanelWidget
filterElement	richtext/richtexteditor.cpp	/^	static inline bool filterElement(const QStringRef &name)$/;"	f	namespace:qdesigner_internal
filter_	elementspanel.h	/^	QString filter_;                               \/\/\/< Currently applied filter$/;"	m	class:ElementsPanel
filter_	ui/linksingleelementwidget.h	/^	Element::kind filter_;$/;"	m	class:LinkSingleElementWidget
filter_list_	elementspanel.h	/^	QStringList filter_list_;                       \/\/\/< Currently applied list of filter$/;"	m	class:ElementsPanel
filter_textfield	elementspanelwidget.h	/^	QLineEdit *filter_textfield;$/;"	m	class:ElementsPanelWidget
filter_toolbar	elementspanelwidget.h	/^	QToolBar *toolbar, *filter_toolbar;$/;"	m	class:ElementsPanelWidget
filtered	ui/elementselectorwidget.cpp	/^void ElementSelectorWidget::filtered(const QString &str) {$/;"	f	class:ElementSelectorWidget
finalDate	titleblockproperties.cpp	/^QDate TitleBlockProperties::finalDate() const {$/;"	f	class:TitleBlockProperties
finalDestinationInternalName	moveelementsdescription.cpp	/^QString MoveElementsDescription::finalDestinationInternalName() const {$/;"	f	class:MoveElementsDescription
finalTextForCell	titleblocktemplate.cpp	/^QString TitleBlockTemplate::finalTextForCell(const TitleBlockCell &cell, const DiagramContext &diagram_context) const {$/;"	f	class:TitleBlockTemplate
find	elementprovider.cpp	/^QList <Element *> ElementProvider::find(const int filter) const {$/;"	f	class:ElementProvider
findDiagram	projectview.cpp	/^DiagramView *ProjectView::findDiagram(Diagram *diagram) {$/;"	f	class:ProjectView
findElementInPanel	qetdiagrameditor.cpp	/^void QETDiagramEditor::findElementInPanel(const ElementsLocation &location) {$/;"	f	class:QETDiagramEditor
findInDomElement	qet.cpp	/^QList<QDomElement> QET::findInDomElement(const QDomElement &e, const QString &parent, const QString &children) {$/;"	f	class:QET
findInDomElement	qet.cpp	/^QList<QDomElement> QET::findInDomElement(const QDomElement &e, const QString &tag_name) {$/;"	f	class:QET
findInPanel	ui/elementpropertieswidget.cpp	/^void elementpropertieswidget::findInPanel() {$/;"	f	class:elementpropertieswidget
findProject	qetdiagrameditor.cpp	/^ProjectView *QETDiagramEditor::findProject(Diagram *diagram) const {$/;"	f	class:QETDiagramEditor
findProject	qetdiagrameditor.cpp	/^ProjectView *QETDiagramEditor::findProject(DiagramView *diagram_view) const {$/;"	f	class:QETDiagramEditor
findProject	qetdiagrameditor.cpp	/^ProjectView *QETDiagramEditor::findProject(QETProject *project) const {$/;"	f	class:QETDiagramEditor
findProject	qetdiagrameditor.cpp	/^ProjectView *QETDiagramEditor::findProject(const QString &filepath) const {$/;"	f	class:QETDiagramEditor
findSelectedElementInPanel	qetdiagrameditor.cpp	/^void QETDiagramEditor::findSelectedElementInPanel() {$/;"	f	class:QETDiagramEditor
find_element	qetdiagrameditor.h	/^		QAction *find_element;					\/\/\/< Find the selected element in the panel$/;"	m	class:QETDiagramEditor
find_element_	diagramview.h	/^		QAction          *find_element_;$/;"	m	class:DiagramView
find_in_panel	ui/elementpropertieswidget.h	/^		QPushButton             *find_in_panel,$/;"	m	class:elementpropertieswidget
firstActivation	editor/qetelementeditor.cpp	/^void QETElementEditor::firstActivation(QEvent *event) {$/;"	f	class:QETElementEditor
firstActivation	elementspanel.cpp	/^void ElementsPanel::firstActivation() {$/;"	f	class:ElementsPanel
firstActivation	qetmainwindow.cpp	/^void QETMainWindow::firstActivation(QEvent *) {$/;"	f	class:QETMainWindow
firstActivation	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::firstActivation(QEvent *event) {$/;"	f	class:QETTitleBlockTemplateEditor
firstEndCircleRect	editor/graphicspart/partline.cpp	/^QRectF PartLine::firstEndCircleRect() const$/;"	f	class:PartLine
firstEndLength	editor/graphicspart/partline.h	/^		qreal firstEndLength() const {return first_length;}$/;"	f	class:PartLine
firstEndType	editor/graphicspart/partline.h	/^		Qet::EndType firstEndType() const {return first_end;}$/;"	f	class:PartLine
firstPage	qetprintpreviewdialog.cpp	/^void QETPrintPreviewDialog::firstPage() {$/;"	f	class:QETPrintPreviewDialog
firstPoint	conductorsegment.cpp	/^QPointF ConductorSegment::firstPoint() const {$/;"	f	class:ConductorSegment
firstTabInserted	projectview.cpp	/^void ProjectView::firstTabInserted() {$/;"	f	class:ProjectView
first_activation_	genericpanel.h	/^	bool first_activation_; \/\/\/< boolean used to track the first time this widget is activated\/shown$/;"	m	class:GenericPanel
first_activation_	qetmainwindow.h	/^	bool first_activation_;                  \/\/\/< Used to detect whether the window is activated for the first time$/;"	m	class:QETMainWindow
first_activation_	titleblock/qettemplateeditor.h	/^	bool first_activation_;$/;"	m	class:QETTitleBlockTemplateEditor
first_activation_	titleblock/templateview.h	/^	bool first_activation_;                \/\/\/< Boolean used to detect the first display of this widget$/;"	m	class:TitleBlockTemplateView
first_end	editor/graphicspart/partline.h	/^		Qet::EndType first_end;$/;"	m	class:PartLine
first_length	editor/graphicspart/partline.h	/^		qreal        first_length;$/;"	m	class:PartLine
first_load	elementscategorieslist.h	/^	bool first_load;$/;"	m	class:ElementsCategoriesList
first_move_	qetgraphicsitem/qetgraphicsitem.h	/^		bool first_move_;$/;"	m	class:QetGraphicsItem
first_page_	qetprintpreviewdialog.h	/^	QAction *first_page_;$/;"	m	class:QETPrintPreviewDialog
first_pos_	editor/elementprimitivedecorator.h	/^	QPointF first_pos_;            \/\/\/< First point involved within the current resizing operation$/;"	m	class:ElementPrimitiveDecorator
first_redo	diagramcommands.h	/^		bool first_redo;$/;"	m	class:MoveElementsTextsCommand
first_redo	diagramcommands.h	/^	bool first_redo;$/;"	m	class:ChangeConductorCommand
first_redo	diagramcommands.h	/^	bool first_redo;$/;"	m	class:ChangeDiagramTextCommand
first_redo	diagramcommands.h	/^	bool first_redo;$/;"	m	class:LinkElementsCommand
first_redo	diagramcommands.h	/^	bool first_redo;$/;"	m	class:MoveConductorsTextsCommand
first_redo	diagramcommands.h	/^	bool first_redo;$/;"	m	class:MoveElementsCommand
first_redo	diagramcommands.h	/^	bool first_redo;$/;"	m	class:PasteDiagramCommand
first_redo	editor/editorcommands.h	/^	bool first_redo;$/;"	m	class:AddPartCommand
first_redo	editor/editorcommands.h	/^	bool first_redo;$/;"	m	class:MovePartsCommand
first_redo	editor/editorcommands.h	/^	bool first_redo;$/;"	m	class:PastePartsCommand
first_redo	editor/editorcommands.h	/^	bool first_redo;$/;"	m	class:ScalePartsCommand
first_reload_	elementspanel.h	/^	bool first_reload_;                            \/\/\/< used to distinguish the first time this panel is reloaded$/;"	m	class:ElementsPanel
fitDiagramToPage	qetprintpreviewdialog.cpp	/^void QETPrintPreviewDialog::fitDiagramToPage(bool fit_diagram) {$/;"	f	class:QETPrintPreviewDialog
fitDiagramsToPages	qetprintpreviewdialog.cpp	/^bool QETPrintPreviewDialog::fitDiagramsToPages() const {$/;"	f	class:QETPrintPreviewDialog
fit_diagram_to_page_	qetprintpreviewdialog.h	/^	QCheckBox *fit_diagram_to_page_;$/;"	m	class:QETPrintPreviewDialog
fit_diagram_to_page_label_	qetprintpreviewdialog.h	/^	QLabel *fit_diagram_to_page_label_;$/;"	m	class:QETPrintPreviewDialog
floatingToolbarsAndDocksForMainWindow	qetapp.cpp	/^QList<QWidget *> QETApp::floatingToolbarsAndDocksForMainWindow (QMainWindow *window) const$/;"	f	class:QETApp
focusInEvent	diagramview.cpp	/^void DiagramView::focusInEvent(QFocusEvent *e) {$/;"	f	class:DiagramView
focusInEvent	editor/graphicspart/parttext.cpp	/^void PartText::focusInEvent(QFocusEvent *e) {$/;"	f	class:PartText
focusInEvent	editor/graphicspart/parttextfield.cpp	/^void PartTextField::focusInEvent(QFocusEvent *e) {$/;"	f	class:PartTextField
focusInEvent	qetgraphicsitem/diagramtextitem.cpp	/^void DiagramTextItem::focusInEvent(QFocusEvent *e) {$/;"	f	class:DiagramTextItem
focusOutEvent	editor/graphicspart/parttext.cpp	/^void PartText::focusOutEvent(QFocusEvent *e) {$/;"	f	class:PartText
focusOutEvent	editor/graphicspart/parttextfield.cpp	/^void PartTextField::focusOutEvent(QFocusEvent *e) {$/;"	f	class:PartTextField
focusOutEvent	qetgraphicsitem/diagramtextitem.cpp	/^void DiagramTextItem::focusOutEvent(QFocusEvent *e) {$/;"	f	class:DiagramTextItem
folio	bordertitleblock.h	/^	QString folio() const { return(btb_folio_); }$/;"	f	class:BorderTitleBlock
folio	titleblockproperties.h	/^	QString folio;            \/\/\/< Folio information (displayed by the default template)$/;"	m	class:TitleBlockProperties
folio	ui/numparteditorw.h	/^	enum type {unit,ten,hundred,string,folio};$/;"	e	enum:NumPartEditorW::type
folioIndex	diagram.cpp	/^int Diagram::folioIndex() const {$/;"	f	class:Diagram
folioIndex	qetproject.cpp	/^int QETProject::folioIndex(const Diagram *diagram) const {$/;"	f	class:QETProject
folioSheetsQuantity	qetproject.h	/^	int folioSheetsQuantity;$/;"	m	class:QETProject
folio_combo_box	ui/ui_linksingleelementwidget.h	/^    QComboBox *folio_combo_box;$/;"	m	class:Ui_LinkSingleElementWidget
folio_index_	bordertitleblock.h	/^	int folio_index_;$/;"	m	class:BorderTitleBlock
folio_total_	bordertitleblock.h	/^	int folio_total_;$/;"	m	class:BorderTitleBlock
followParentRotations	editor/graphicspart/parttextfield.h	/^		bool followParentRotations() const {return follow_parent_rotations;}$/;"	f	class:PartTextField
followParentRotations	qetgraphicsitem/elementtextitem.h	/^inline bool ElementTextItem::followParentRotations() const {$/;"	f	class:ElementTextItem
follow_parent_rotations	editor/graphicspart/parttextfield.h	/^	bool follow_parent_rotations;$/;"	m	class:PartTextField
follow_parent_rotations	qetgraphicsitem/elementtextitem.h	/^		bool     follow_parent_rotations;$/;"	m	class:ElementTextItem
font	qtextorientationwidget.cpp	/^QFont QTextOrientationWidget::font() const {$/;"	f	class:QTextOrientationWidget
fontForCell	titleblocktemplate.cpp	/^QFont TitleBlockTemplate::fontForCell(const TitleBlockCell &cell) {$/;"	f	class:TitleBlockTemplate
font_adjust_input_	titleblock/templatecellwidget.h	/^	QCheckBox     *font_adjust_input_;$/;"	m	class:TitleBlockTemplateCellWidget
font_size	editor/texteditor.h	/^	QSpinBox *font_size;$/;"	m	class:TextEditor
font_size	editor/textfieldeditor.h	/^	QSpinBox *font_size;$/;"	m	class:TextFieldEditor
font_size	titleblockcell.h	/^	int font_size;                     \/\/\/< Font size the text should be rendered with$/;"	m	class:TitleBlockCell
font_size_input_	titleblock/templatecellwidget.h	/^	QSpinBox      *font_size_input_;$/;"	m	class:TitleBlockTemplateCellWidget
font_size_label_	titleblock/templatecellwidget.h	/^	QLabel        *font_size_label_;$/;"	m	class:TitleBlockTemplateCellWidget
forbid_antialiasing	qetgraphicsitem/customelement.h	/^	bool forbid_antialiasing;$/;"	m	class:CustomElement
forbiddenCharacters	qet.cpp	/^QList<QChar> QET::forbiddenCharacters() {$/;"	f	class:QET
forbiddenCharactersString	qet.cpp	/^QString QET::forbiddenCharactersString(bool escape) {$/;"	f	class:QET
forbiddenColor	qetgraphicsitem/terminal.cpp	/^QColor Terminal::forbiddenColor    = QColor(Qt::red);$/;"	m	class:Terminal	file:
forbiddenColor	qetgraphicsitem/terminal.h	/^	static QColor forbiddenColor;$/;"	m	class:Terminal
forceMovedByUser	qetgraphicsitem/conductortextitem.cpp	/^void ConductorTextItem::forceMovedByUser(bool moved_by_user) {$/;"	f	class:ConductorTextItem
forceRotateByUser	qetgraphicsitem/conductortextitem.cpp	/^void ConductorTextItem::forceRotateByUser(bool rotate_by_user) {$/;"	f	class:ConductorTextItem
foreground_color	titleblock/helpercell.h	/^	QColor foreground_color;     \/\/\/< Text color when rendering this cell$/;"	m	class:HelperCell
forgetSpanning	titleblocktemplate.cpp	/^void TitleBlockTemplate::forgetSpanning() {$/;"	f	class:TitleBlockTemplate
forgetSpanning	titleblocktemplate.cpp	/^void TitleBlockTemplate::forgetSpanning(TitleBlockCell *spanning_cell, bool modify_cell) {$/;"	f	class:TitleBlockTemplate
formLayout	richtext/ui_addlinkdialog.h	/^    QFormLayout *formLayout;$/;"	m	class:Ui_AddLinkDialog
formLayout	ui/ui_addlinkdialog.h	/^    QFormLayout *formLayout;$/;"	m	class:Ui_AddLinkDialog
form_	titleblock/templateview.h	/^	QGraphicsWidget *form_;$/;"	m	class:TitleBlockTemplateView
form_layout_	titleblock/templatelocationchooser.h	/^	QFormLayout *form_layout_;$/;"	m	class:TitleBlockTemplateLocationChooser
format	exportproperties.h	/^	QString format;                 \/\/\/< Image format of generated files$/;"	m	class:ExportProperties
format	exportpropertieswidget.h	/^	QComboBox *format;$/;"	m	class:ExportPropertiesWidget
format_label	diagramcontextwidget.h	/^	QLabel *format_label; \/\/\/< label used to detail keys format$/;"	m	class:DiagramContextWidget
format_label	exportpropertieswidget.h	/^	QLabel *format_label;$/;"	m	class:ExportPropertiesWidget
fourEndPoints	editor/graphicspart/partline.cpp	/^QList<QPointF> PartLine::fourEndPoints(const QPointF &end_point, const QPointF &other_point, const qreal &length)$/;"	f	class:PartLine
fourShapePoints	editor/graphicspart/partline.cpp	/^QList<QPointF> PartLine::fourShapePoints() const$/;"	f	class:PartLine
fr	qeticons.cpp	/^		QIcon fr;$/;"	m	namespace:QET::Icons	file:
freeElement	elementprovider.cpp	/^QList <Element *> ElementProvider::freeElement(const int filter) const{$/;"	f	class:ElementProvider
free_list	ui/ui_masterpropertieswidget.h	/^    QListWidget *free_list;$/;"	m	class:Ui_MasterPropertiesWidget
fresh_focus_in_	diagramview.h	/^		bool              fresh_focus_in_;    \/\/\/< Indicate the focus was freshly gained$/;"	m	class:DiagramView
fromConductor	conductorprofile.cpp	/^void ConductorProfile::fromConductor(Conductor *conductor) {$/;"	f	class:ConductorProfile
fromFile	editor/qetelementeditor.cpp	/^void QETElementEditor::fromFile(const QString &filepath) {$/;"	f	class:QETElementEditor
fromLocation	editor/qetelementeditor.cpp	/^void QETElementEditor::fromLocation(const ElementsLocation &location) {$/;"	f	class:QETElementEditor
fromSettings	borderproperties.cpp	/^void BorderProperties::fromSettings(QSettings &settings, const QString &prefix) {$/;"	f	class:BorderProperties
fromSettings	conductorproperties.cpp	/^void ConductorProperties::fromSettings(QSettings &settings, const QString &prefix) {$/;"	f	class:ConductorProperties
fromSettings	conductorproperties.cpp	/^void SingleLineProperties::fromSettings(QSettings &settings, const QString &prefix) {$/;"	f	class:SingleLineProperties
fromSettings	diagramcontext.cpp	/^void DiagramContext::fromSettings(QSettings &settings, const QString &array_name) {$/;"	f	class:DiagramContext
fromSettings	exportproperties.cpp	/^void ExportProperties::fromSettings(QSettings &settings, const QString &prefix) {$/;"	f	class:ExportProperties
fromSettings	properties/xrefproperties.cpp	/^void XRefProperties::fromSettings(const QSettings &settings, const QString prefix) {$/;"	f	class:XRefProperties
fromSettings	titleblockproperties.cpp	/^void TitleBlockProperties::fromSettings(QSettings &settings, const QString &prefix) {$/;"	f	class:TitleBlockProperties
fromString	elementslocation.cpp	/^void ElementsLocation::fromString(const QString &string) {$/;"	f	class:ElementsLocation
fromString	orientationset.cpp	/^bool OrientationSet::fromString(const QString &str) {$/;"	f	class:OrientationSet
fromString	titleblock/templatelocation.cpp	/^void TitleBlockTemplateLocation::fromString(const QString &loc_str) {$/;"	f	class:TitleBlockTemplateLocation
fromUuids	elementprovider.cpp	/^QList <Element *> ElementProvider::fromUuids(QList<QUuid> uuid_list) const {$/;"	f	class:ElementProvider
fromXml	borderproperties.cpp	/^void BorderProperties::fromXml(QDomElement &e) {$/;"	f	class:BorderProperties
fromXml	conductorproperties.cpp	/^void ConductorProperties::fromXml(QDomElement &e) {$/;"	f	class:ConductorProperties
fromXml	conductorproperties.cpp	/^void SingleLineProperties::fromXml(QDomElement &e) {$/;"	f	class:SingleLineProperties
fromXml	diagram.cpp	/^bool Diagram::fromXml(QDomDocument &document, QPointF position, bool consider_informations, DiagramContent *content_ptr) {$/;"	f	class:Diagram
fromXml	diagram.cpp	/^bool Diagram::fromXml(QDomElement &document, QPointF position, bool consider_informations, DiagramContent *content_ptr) {$/;"	f	class:Diagram
fromXml	diagramcontext.cpp	/^void DiagramContext::fromXml(const QDomElement &e, const QString &tag_name) {$/;"	f	class:DiagramContext
fromXml	editor/elementscene.cpp	/^void ElementScene::fromXml($/;"	f	class:ElementScene
fromXml	editor/graphicspart/partarc.cpp	/^void PartArc::fromXml(const QDomElement &qde) {$/;"	f	class:PartArc
fromXml	editor/graphicspart/partellipse.cpp	/^void PartEllipse::fromXml(const QDomElement &qde)$/;"	f	class:PartEllipse
fromXml	editor/graphicspart/partline.cpp	/^void PartLine::fromXml(const QDomElement &qde) {$/;"	f	class:PartLine
fromXml	editor/graphicspart/partpolygon.cpp	/^void PartPolygon::fromXml(const QDomElement &qde)$/;"	f	class:PartPolygon
fromXml	editor/graphicspart/partrectangle.cpp	/^void PartRectangle::fromXml(const QDomElement &qde)$/;"	f	class:PartRectangle
fromXml	editor/graphicspart/partterminal.cpp	/^void PartTerminal::fromXml(const QDomElement &xml_elmt) {$/;"	f	class:PartTerminal
fromXml	editor/graphicspart/parttext.cpp	/^void PartText::fromXml(const QDomElement &xml_element) {$/;"	f	class:PartText
fromXml	editor/graphicspart/parttextfield.cpp	/^void PartTextField::fromXml(const QDomElement &xml_element) {$/;"	f	class:PartTextField
fromXml	nameslist.cpp	/^void NamesList::fromXml(const QDomElement &xml_element, const QHash<QString, QString> &xml_options) {$/;"	f	class:NamesList
fromXml	numerotationcontext.cpp	/^void NumerotationContext::fromXml(QDomElement &e) {$/;"	f	class:NumerotationContext
fromXml	properties/xrefproperties.cpp	/^void XRefProperties::fromXml(const QDomElement &xml_element) {$/;"	f	class:XRefProperties
fromXml	qetgraphicsitem/conductor.cpp	/^bool Conductor::fromXml(QDomElement &e) {$/;"	f	class:Conductor
fromXml	qetgraphicsitem/conductortextitem.cpp	/^void ConductorTextItem::fromXml(const QDomElement &e) {$/;"	f	class:ConductorTextItem
fromXml	qetgraphicsitem/diagramimageitem.cpp	/^bool DiagramImageItem::fromXml(const QDomElement &e) {$/;"	f	class:DiagramImageItem
fromXml	qetgraphicsitem/element.cpp	/^bool Element::fromXml(QDomElement &e, QHash<int, Terminal *> &table_id_adr, bool handle_inputs_rotation) {$/;"	f	class:Element
fromXml	qetgraphicsitem/elementtextitem.cpp	/^void ElementTextItem::fromXml(const QDomElement &e) {$/;"	f	class:ElementTextItem
fromXml	qetgraphicsitem/ghostelement.cpp	/^bool GhostElement::fromXml(QDomElement &e, QHash<int, Terminal *> &table_id_adr, bool handle_inputs_rotation) {$/;"	f	class:GhostElement
fromXml	qetgraphicsitem/independenttextitem.cpp	/^void IndependentTextItem::fromXml(const QDomElement &e) {$/;"	f	class:IndependentTextItem
fromXml	qetgraphicsitem/qetshapeitem.cpp	/^bool QetShapeItem::fromXml(const QDomElement &e) {$/;"	f	class:QetShapeItem
fromXml	qetgraphicsitem/terminal.cpp	/^bool Terminal::fromXml(QDomElement &terminal) {$/;"	f	class:Terminal
fromXml	titleblock/templatescollection.cpp	/^void TitleBlockTemplatesProjectCollection::fromXml(const QDomElement &xml_element) {$/;"	f	class:TitleBlockTemplatesProjectCollection
fromXml	titleblockproperties.cpp	/^void TitleBlockProperties::fromXml(const QDomElement &e) {$/;"	f	class:TitleBlockProperties
fsi_pos	editor/elementscene.h	/^		QPointF fsi_pos;$/;"	m	class:ElementScene
fullVirtualPath	elementdefinition.cpp	/^QString ElementDefinition::fullVirtualPath() {$/;"	f	class:ElementDefinition
fullVirtualPath	elementscategory.cpp	/^QString ElementsCategory::fullVirtualPath() {$/;"	f	class:ElementsCategory
fullVirtualPath	elementscollection.cpp	/^QString ElementsCollection::fullVirtualPath() {$/;"	f	class:ElementsCollection
fullscreen_action_	qetmainwindow.h	/^	QAction *fullscreen_action_;             \/\/\/< Toggle full screen$/;"	m	class:QETMainWindow
generalWidget	ui/elementpropertieswidget.cpp	/^QWidget* elementpropertieswidget::generalWidget() {$/;"	f	class:elementpropertieswidget
generateConductorPath	qetgraphicsitem/conductor.cpp	/^void Conductor::generateConductorPath(const QPointF &p1, Qet::Orientation o1, const QPointF &p2, Qet::Orientation o2) {$/;"	f	class:Conductor
generateDrawing	qetgraphicsitem/ghostelement.cpp	/^void GhostElement::generateDrawing(QPainter *painter) {$/;"	f	class:GhostElement
generateDrawings	qetgraphicsitem/ghostelement.cpp	/^void GhostElement::generateDrawings() {$/;"	f	class:GhostElement
generateDxf	exportdialog.cpp	/^void ExportDialog::generateDxf(Diagram *diagram, int width, int height, bool keep_aspect_ratio, QString &file_path) {$/;"	f	class:ExportDialog
generateImage	exportdialog.cpp	/^QImage ExportDialog::generateImage(Diagram *diagram, int width, int height, bool keep_aspect_ratio) {$/;"	f	class:ExportDialog
generateSvg	exportdialog.cpp	/^void ExportDialog::generateSvg(Diagram *diagram, int width, int height, bool keep_aspect_ratio, QIODevice &io_device) {$/;"	f	class:ExportDialog
generateTextSizeHash	qtextorientationwidget.cpp	/^void QTextOrientationWidget::generateTextSizeHash() {$/;"	f	class:QTextOrientationWidget
gestureEvent	diagramview.cpp	/^bool DiagramView::gestureEvent(QGestureEvent *event){$/;"	f	class:DiagramView
gestureEvent	editor/elementview.cpp	/^bool ElementView::gestureEvent(QGestureEvent *event){$/;"	f	class:ElementView
gestures	diagramview.cpp	/^bool DiagramView::gestures() const {$/;"	f	class:DiagramView
gestures	editor/elementview.cpp	/^bool ElementView::gestures() const {$/;"	f	class:ElementView
getAllSpans	titleblocktemplate.cpp	/^QHash<TitleBlockCell *, QPair<int, int> > TitleBlockTemplate::getAllSpans() const {$/;"	f	class:TitleBlockTemplate
getBottomRightCell	titleblock/templatecommands.cpp	/^TitleBlockCell *MergeCellsCommand::getBottomRightCell(const TitleBlockTemplateCellsSet &cells_set) {$/;"	f	class:MergeCellsCommand
getCoeff	qetgraphicsitem/conductor.cpp	/^int Conductor::getCoeff(const qreal &value1, const qreal &value2) {$/;"	f	class:Conductor
getDiagrams	projectview.cpp	/^QList<Diagram *> ProjectView::getDiagrams(ProjectSaveOptions options) {$/;"	f	class:ProjectView
getElementInfo	nomenclature.cpp	/^QString nomenclature::getElementInfo(const Element *elmt) {$/;"	f	class:nomenclature
getElementsCache	genericpanel.cpp	/^ElementsCollectionCache *GenericPanel::getElementsCache() {$/;"	f	class:GenericPanel
getExistingCategoryLocation	elementdialog.cpp	/^ElementsLocation ElementDialog::getExistingCategoryLocation(QWidget *parentWidget) {$/;"	f	class:ElementDialog
getFolioSheetsQuantity	qetproject.cpp	/^int QETProject::getFolioSheetsQuantity() const {$/;"	f	class:QETProject
getGenericSquare	editor/elementprimitivedecorator.cpp	/^QRectF ElementPrimitiveDecorator::getGenericSquare(const QPointF &position) {$/;"	f	class:ElementPrimitiveDecorator
getId	diagramfoliolist.h	/^	int getId() const {return id;}$/;"	f	class:DiagramFolioList
getItemForDiagram	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::getItemForDiagram(Diagram *diagram, bool *created) {$/;"	f	class:GenericPanel
getItemForElement	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::getItemForElement(ElementDefinition *element, bool *created) {$/;"	f	class:GenericPanel
getItemForElementsCategory	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::getItemForElementsCategory(ElementsCategory *category, bool *created) {$/;"	f	class:GenericPanel
getItemForElementsCollection	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::getItemForElementsCollection(ElementsCollection *collection, bool *created) {$/;"	f	class:GenericPanel
getItemForProject	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::getItemForProject(QETProject *project, bool *created) {$/;"	f	class:GenericPanel
getItemForTemplate	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::getItemForTemplate(const TitleBlockTemplateLocation &tb_template, bool *created) {$/;"	f	class:GenericPanel
getItemForTemplatesCollection	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::getItemForTemplatesCollection(TitleBlockTemplatesCollection *tbt_collection, bool *created) {$/;"	f	class:GenericPanel
getMostUsableStringForRadius	qtextorientationwidget.cpp	/^QString QTextOrientationWidget::getMostUsableStringForRadius(const qreal &radius) {$/;"	f	class:QTextOrientationWidget
getNewCategoryLocation	elementdialog.cpp	/^ElementsLocation ElementDialog::getNewCategoryLocation(QWidget *parentWidget) {$/;"	f	class:ElementDialog
getNomenclature	nomenclature.cpp	/^QString nomenclature::getNomenclature() {$/;"	f	class:nomenclature
getOpenElementFileName	editor/qetelementeditor.cpp	/^QString QETElementEditor::getOpenElementFileName(QWidget *parent, const QString &initial_dir) {$/;"	f	class:QETElementEditor
getOpenElementLocation	elementdialog.cpp	/^ElementsLocation ElementDialog::getOpenElementLocation(QWidget *parentWidget) {$/;"	f	class:ElementDialog
getPasteArea	editor/elementscene.cpp	/^void ElementScene::getPasteArea(const QRectF &to_paste) {$/;"	f	class:ElementScene
getPasteArea	editor/elementview.cpp	/^void ElementView::getPasteArea(const QRectF &to_paste) {$/;"	f	class:ElementView
getPointsFromTree	editor/polygoneditor.cpp	/^QVector<QPointF> PolygonEditor::getPointsFromTree() {$/;"	f	class:PolygonEditor
getResizingSquares	editor/elementprimitivedecorator.cpp	/^QList<QRectF> ElementPrimitiveDecorator::getResizingSquares() {$/;"	f	class:ElementPrimitiveDecorator
getSaveElementLocation	elementdialog.cpp	/^ElementsLocation ElementDialog::getSaveElementLocation(QWidget *parentWidget) {$/;"	f	class:ElementDialog
getSceneBoundingRect	editor/elementprimitivedecorator.cpp	/^QRectF ElementPrimitiveDecorator::getSceneBoundingRect(QGraphicsItem *item) const {$/;"	f	class:ElementPrimitiveDecorator
getSign	qetgraphicsitem/conductor.cpp	/^int Conductor::getSign(const qreal &value) {$/;"	f	class:Conductor
getTemplate	titleblock/templatelocation.cpp	/^TitleBlockTemplate *TitleBlockTemplateLocation::getTemplate() const {$/;"	f	class:TitleBlockTemplateLocation
getTemplate	titleblock/templatescollection.cpp	/^TitleBlockTemplate *TitleBlockTemplatesFilesCollection::getTemplate(const QString &template_name) {$/;"	f	class:TitleBlockTemplatesFilesCollection
getTemplate	titleblock/templatescollection.cpp	/^TitleBlockTemplate *TitleBlockTemplatesProjectCollection::getTemplate(const QString &template_name){$/;"	f	class:TitleBlockTemplatesProjectCollection
getTemplateByName	qetproject.cpp	/^const TitleBlockTemplate *QETProject::getTemplateByName(const QString &template_name) {$/;"	f	class:QETProject
getTemplateXmlDescription	titleblock/templatelocation.cpp	/^QDomElement TitleBlockTemplateLocation::getTemplateXmlDescription() const {$/;"	f	class:TitleBlockTemplateLocation
getTemplateXmlDescription	titleblock/templatescollection.cpp	/^QDomElement TitleBlockTemplatesFilesCollection::getTemplateXmlDescription(const QString &template_name) {$/;"	f	class:TitleBlockTemplatesFilesCollection
getTemplateXmlDescription	titleblock/templatescollection.cpp	/^QDomElement TitleBlockTemplatesProjectCollection::getTemplateXmlDescription(const QString &template_name)  {$/;"	f	class:TitleBlockTemplatesProjectCollection
getTemplateXmlDescriptionByName	qetproject.cpp	/^QDomElement QETProject::getTemplateXmlDescriptionByName(const QString &template_name) {$/;"	f	class:QETProject
getTitleBlockTemplateLocationFromUser	titleblock/qettemplateeditor.cpp	/^TitleBlockTemplateLocation QETTitleBlockTemplateEditor::getTitleBlockTemplateLocationFromUser(const QString &title, bool existing_only) {$/;"	f	class:QETTitleBlockTemplateEditor
getXmlOptions	nameslist.cpp	/^QHash<QString, QString> NamesList::getXmlOptions(const QHash<QString, QString> &xml_options) const {$/;"	f	class:NamesList
glayout0_	diagramprintdialog.h	/^	QGridLayout *glayout0_;$/;"	m	class:DiagramPrintDialog
gr	qeticons.cpp	/^		QIcon gr;$/;"	m	namespace:QET::Icons	file:
graphicsItems	editor/elementprimitivedecorator.cpp	/^QList<QGraphicsItem *> ElementPrimitiveDecorator::graphicsItems() const {$/;"	f	class:ElementPrimitiveDecorator
graphicsSceneEventPos	qet.cpp	/^QPointF QET::graphicsSceneEventPos(QEvent *event) {$/;"	f	class:QET
green_color	editor/styleeditor.h	/^		QRadioButton *black_color, *white_color,  *normal_style, *dashed_style, *dashdotted_style, *dotted_style, *green_color, *red_color, *blue_color;$/;"	m	class:StyleEditor
green_filling	editor/styleeditor.h	/^		QRadioButton *black_filling, *white_filling, *green_filling, *red_filling, *blue_filling;$/;"	m	class:StyleEditor
grid	titleblock/gridlayoutanimation.cpp	/^QGraphicsGridLayout *GridLayoutAnimation::grid() {$/;"	f	class:GridLayoutAnimation
gridLayout	ui/ui_borderpropertieswidget.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_BorderPropertiesWidget
gridLayout	ui/ui_conductorpropertieswidget.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_ConductorPropertiesWidget
gridLayout	ui/ui_elementpropertieseditorwidget.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_ElementPropertiesEditorWidget
gridLayout	ui/ui_xrefpropertieswidget.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_XRefPropertiesWidget
gridLayout_2	ui/ui_conductorpropertieswidget.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_ConductorPropertiesWidget
gridLayout_2	ui/ui_elementinfopartwidget.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_ElementInfoPartWidget
gridLayout_2	ui/ui_masterpropertieswidget.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_MasterPropertiesWidget
gridLayout_2	ui/ui_titleblockpropertieswidget.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_TitleBlockPropertiesWidget
gridLayout_3	ui/ui_elementpropertieseditorwidget.h	/^    QGridLayout *gridLayout_3;$/;"	m	class:Ui_ElementPropertiesEditorWidget
gridLayout_4	ui/ui_titleblockpropertieswidget.h	/^    QGridLayout *gridLayout_4;$/;"	m	class:Ui_TitleBlockPropertiesWidget
grid_	titleblock/gridlayoutanimation.h	/^	QGraphicsGridLayout *grid_; \/\/\/< Grid this class will animate$/;"	m	class:GridLayoutAnimation
grid_step_x_	editor/elementprimitivedecorator.h	/^	int grid_step_x_;              \/\/\/< Grid horizontal step$/;"	m	class:ElementPrimitiveDecorator
grid_step_y_	editor/elementprimitivedecorator.h	/^	int grid_step_y_;              \/\/\/< Grid horizontal step$/;"	m	class:ElementPrimitiveDecorator
groupBox_2	ui/ui_conductorpropertieswidget.h	/^    QGroupBox *groupBox_2;$/;"	m	class:Ui_ConductorPropertiesWidget
groupBox_Selection	ui/ui_dialogautonum.h	/^    QGroupBox *groupBox_Selection;$/;"	m	class:Ui_DialogAutoNum
grp_view_mode	qetdiagrameditor.h	/^		QActionGroup *grp_view_mode; \/\/\/< Action group for project$/;"	m	class:QETDiagramEditor
grp_visu_sel	qetdiagrameditor.h	/^		QActionGroup *grp_visu_sel;  \/\/\/< Action group for visualisation vs edition mode$/;"	m	class:QETDiagramEditor
h	editor/arceditor.h	/^	QDoubleSpinBox *x, *y, *h, *v;$/;"	m	class:ArcEditor
h	editor/ellipseeditor.h	/^	QDoubleSpinBox *x, *y, *h, *v;$/;"	m	class:EllipseEditor
h	editor/rectangleeditor.h	/^	QDoubleSpinBox *x, *y, *w, *h;$/;"	m	class:RectangleEditor
hadjust	titleblockcell.h	/^	bool hadjust;                      \/\/\/< Whether to reduce the font size if the text does not fit in the cell$/;"	m	class:TitleBlockCell
handleCollectionRequest	elementspanelwidget.cpp	/^void ElementsPanelWidget::handleCollectionRequest(const ElementsLocation &item_location) {$/;"	f	class:ElementsPanelWidget
handleContextMenu	elementspanelwidget.cpp	/^void ElementsPanelWidget::handleContextMenu(const QPoint &pos) {$/;"	f	class:ElementsPanelWidget
handleElementDrop	diagramview.cpp	/^void DiagramView::handleElementDrop(QDropEvent *e) {$/;"	f	class:DiagramView
handleFileArgument	qetarguments.cpp	/^void QETArguments::handleFileArgument(const QString &file) {$/;"	f	class:QETArguments
handleMenuRequest	recentfiles.cpp	/^void RecentFiles::handleMenuRequest(const QString &filepath) {$/;"	f	class:RecentFiles
handleMoveElementsRequest	elementspanelwidget.cpp	/^void ElementsPanelWidget::handleMoveElementsRequest(ElementsCollectionItem *src, ElementsCollectionItem *dst, const QPoint &pos) {$/;"	f	class:ElementsPanelWidget
handleOptionArgument	qetarguments.cpp	/^void QETArguments::handleOptionArgument(const QString &option) {$/;"	f	class:QETArguments
handleTextDrop	diagramview.cpp	/^void DiagramView::handleTextDrop(QDropEvent *e) {$/;"	f	class:DiagramView
handleTitleBlockDrop	diagramview.cpp	/^void DiagramView::handleTitleBlockDrop(QDropEvent *e) {$/;"	f	class:DiagramView
handleUserTransformation	editor/graphicspart/abstractpartellipse.cpp	/^void AbstractPartEllipse::handleUserTransformation(const QRectF &initial_selection_rect, const QRectF &new_selection_rect)$/;"	f	class:AbstractPartEllipse
handleUserTransformation	editor/graphicspart/partline.cpp	/^void PartLine::handleUserTransformation(const QRectF &initial_selection_rect, const QRectF &new_selection_rect)$/;"	f	class:PartLine
handleUserTransformation	editor/graphicspart/partpolygon.cpp	/^void PartPolygon::handleUserTransformation(const QRectF &initial_selection_rect, const QRectF &new_selection_rect)$/;"	f	class:PartPolygon
handleUserTransformation	editor/graphicspart/partrectangle.cpp	/^void PartRectangle::handleUserTransformation(const QRectF &initial_selection_rect, const QRectF &new_selection_rect)$/;"	f	class:PartRectangle
handleUserTransformation	editor/graphicspart/partterminal.cpp	/^void PartTerminal::handleUserTransformation(const QRectF &initial_selection_rect, const QRectF &new_selection_rect) {$/;"	f	class:PartTerminal
handleUserTransformation	editor/graphicspart/parttext.cpp	/^void PartText::handleUserTransformation(const QRectF &initial_selection_rect, const QRectF &new_selection_rect) {$/;"	f	class:PartText
handleUserTransformation	editor/graphicspart/parttextfield.cpp	/^void PartTextField::handleUserTransformation(const QRectF &initial_selection_rect, const QRectF &new_selection_rect) {$/;"	f	class:PartTextField
handledFileExtensions	qetapp.cpp	/^QStringList QETApp::handledFileExtensions()$/;"	f	class:QETApp
handledFiles	qetapp.cpp	/^QStringList QETApp::handledFiles (const QList<QUrl> &urls)$/;"	f	class:QETApp
handler	moveelementsdescription.cpp	/^MoveElementsHandler *MoveElementsDescription::handler() const {$/;"	f	class:MoveElementsDescription
handler_	moveelementsdescription.h	/^	MoveElementsHandler *handler_;$/;"	m	class:MoveElementsDescription
hasClickedOn	qetgraphicsitem/conductor.cpp	/^bool Conductor::hasClickedOn(QPointF press_point, QPointF point) const {$/;"	f	class:Conductor
hasCopiableItems	diagramview.cpp	/^bool DiagramView::hasCopiableItems() {$/;"	f	class:DiagramView
hasDeletableItems	diagramview.cpp	/^bool DiagramView::hasDeletableItems() {$/;"	f	class:DiagramView
hasExternalSpan	titleblock/templatecellsset.cpp	/^bool TitleBlockTemplateCellsSet::hasExternalSpan() const {$/;"	f	class:TitleBlockTemplateCellsSet
hasFilePath	fileelementdefinition.cpp	/^bool FileElementDefinition::hasFilePath() {$/;"	f	class:FileElementDefinition
hasFilePath	fileelementscategory.cpp	/^bool FileElementsCategory::hasFilePath() {$/;"	f	class:FileElementsCategory
hasFilePath	fileelementscollection.cpp	/^bool FileElementsCollection::hasFilePath() {$/;"	f	class:FileElementsCollection
hasFilePath	titleblock/templatescollection.cpp	/^bool TitleBlockTemplatesFilesCollection::hasFilePath() {$/;"	f	class:TitleBlockTemplatesFilesCollection
hasFilePath	titleblock/templatescollection.cpp	/^bool TitleBlockTemplatesProjectCollection::hasFilePath() {$/;"	f	class:TitleBlockTemplatesProjectCollection
hasFilePath	xmlelementdefinition.cpp	/^bool XmlElementDefinition::hasFilePath() {$/;"	f	class:XmlElementDefinition
hasFilePath	xmlelementscategory.cpp	/^bool XmlElementsCategory::hasFilePath() {$/;"	f	class:XmlElementsCategory
hasFilePath	xmlelementscollection.cpp	/^bool XmlElementsCollection::hasFilePath() {$/;"	f	class:XmlElementsCollection
hasGround	conductorproperties.h	/^	bool hasGround;$/;"	m	class:SingleLineProperties
hasNeutral	conductorproperties.h	/^	bool hasNeutral;$/;"	m	class:SingleLineProperties
hasNextSegment	conductorsegment.cpp	/^bool ConductorSegment::hasNextSegment() const {$/;"	f	class:ConductorSegment
hasParentCategory	elementdefinition.cpp	/^bool ElementDefinition::hasParentCategory() {$/;"	f	class:ElementDefinition
hasParentCategory	elementscategory.cpp	/^bool ElementsCategory::hasParentCategory() {$/;"	f	class:ElementsCategory
hasParentCategory	elementscollection.cpp	/^bool ElementsCollection::hasParentCategory() {$/;"	f	class:ElementsCollection
hasParentCollection	elementdefinition.cpp	/^bool ElementDefinition::hasParentCollection() {$/;"	f	class:ElementDefinition
hasParentCollection	elementscategory.cpp	/^bool ElementsCategory::hasParentCollection() {$/;"	f	class:ElementsCategory
hasParentCollection	elementscollection.cpp	/^bool ElementsCollection::hasParentCollection() {$/;"	f	class:ElementsCollection
hasPreviousSegment	conductorsegment.cpp	/^bool ConductorSegment::hasPreviousSegment() const {$/;"	f	class:ConductorSegment
hasSelectedItems	diagramview.cpp	/^bool DiagramView::hasSelectedItems() {$/;"	f	class:DiagramView
has_to_save_profile	qetgraphicsitem/conductor.h	/^	bool has_to_save_profile;$/;"	m	class:Conductor
hash_names	nameslist.h	/^	QHash<QString, QString> hash_names;$/;"	m	class:NamesList
hash_names	nameslistwidget.h	/^	NamesList hash_names;$/;"	m	class:NamesListWidget
header	qetgraphicsitem/crossrefitem.cpp	27;"	d	file:
header_layout	ui/ui_linksingleelementwidget.h	/^    QHBoxLayout *header_layout;$/;"	m	class:Ui_LinkSingleElementWidget
height	conductorprofile.cpp	/^qreal ConductorProfile::height() const{$/;"	f	class:ConductorProfile
height	editor/graphicspart/abstractpartellipse.h	/^		qreal height() const {return rect().height();}$/;"	f	class:AbstractPartEllipse
height	editor/graphicspart/partrectangle.h	/^		qreal height    () const { return rect().height();}$/;"	f	class:PartRectangle
height	exportdialog.h	/^		QSpinBox *height;$/;"	m	class:ExportDialog::ExportDiagramLine
height	titleblocktemplate.cpp	/^int TitleBlockTemplate::height() const {$/;"	f	class:TitleBlockTemplate
height	titleblocktemplaterenderer.cpp	/^int TitleBlockTemplateRenderer::height() const {$/;"	f	class:TitleBlockTemplateRenderer
heightForWidth	qtextorientationwidget.cpp	/^int QTextOrientationWidget::heightForWidth(int w) const {$/;"	f	class:QTextOrientationWidget
height_mapper_	exportdialog.h	/^	QSignalMapper *height_mapper_;$/;"	m	class:ExportDialog
help_menu_	qetmainwindow.h	/^	QMenu *help_menu_;                       \/\/\/< Help menu$/;"	m	class:QETMainWindow
highlight	qetgraphicsitem/conductor.cpp	/^Conductor::Highlight Conductor::highlight() const {$/;"	f	class:Conductor
highlightItems	elementspanel.cpp	/^void ElementsPanel::highlightItems(const QList<QTreeWidgetItem *> &items, const QObject *receiver, const char *method) {$/;"	f	class:ElementsPanel
highlightNonAcceptableKeys	diagramcontextwidget.cpp	/^int DiagramContextWidget::highlightNonAcceptableKeys() {$/;"	f	class:DiagramContextWidget
highlight_angle_	qtextorientationwidget.h	/^	double highlight_angle_;$/;"	m	class:QTextOrientationWidget
highlight_integrated_elements_	configpages.h	/^	QCheckBox *highlight_integrated_elements_;$/;"	m	class:GeneralConfigurationPage
hlayout0_	diagramprintdialog.h	/^	QHBoxLayout *hlayout0_;$/;"	m	class:DiagramPrintDialog
hlayout0_	qetprintpreviewdialog.h	/^	QHBoxLayout *hlayout0_;$/;"	m	class:QETPrintPreviewDialog
hlayout0_	titleblock/templatelogomanager.h	/^	QHBoxLayout *hlayout0_, *hlayout1_;    \/\/\/< horizontal layouts$/;"	m	class:TitleBlockTemplateLogoManager
hlayout1_	titleblock/templatelogomanager.h	/^	QHBoxLayout *hlayout0_, *hlayout1_;    \/\/\/< horizontal layouts$/;"	m	class:TitleBlockTemplateLogoManager
horiz_align_indexes_	titleblock/templatecellwidget.h	/^	QHash<int, int> horiz_align_indexes_;$/;"	m	class:TitleBlockTemplateCellWidget
horiz_align_input_	titleblock/templatecellwidget.h	/^	QComboBox     *horiz_align_input_;$/;"	m	class:TitleBlockTemplateCellWidget
horiz_align_label_	titleblock/templatecellwidget.h	/^	QLabel        *horiz_align_label_;$/;"	m	class:TitleBlockTemplateCellWidget
horiz_line_	configpages.h	/^	QFrame *horiz_line_;$/;"	m	class:GeneralConfigurationPage
horiz_rotate_text	conductorproperties.h	/^	double horiz_rotate_text;$/;"	m	class:ConductorProperties
horizontalAlign	titleblockcell.cpp	/^int TitleBlockCell::horizontalAlign() const {$/;"	f	class:TitleBlockCell
horizontalAlignment	titleblock/templatecellwidget.cpp	/^int TitleBlockTemplateCellWidget::horizontalAlignment() const {$/;"	f	class:TitleBlockTemplateCellWidget
horizontalLayout	ui/ui_autonumselectorwidget.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_AutonumSelectorWidget
horizontalLayout	ui/ui_conductorpropertieswidget.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_ConductorPropertiesWidget
horizontalLayout	ui/ui_dialogautonum.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_DialogAutoNum
horizontalLayout	ui/ui_dialogwaiting.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_DialogWaiting
horizontalLayout	ui/ui_elementpropertieseditorwidget.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_ElementPropertiesEditorWidget
horizontalLayout	ui/ui_reportpropertiewidget.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_ReportPropertieWidget
horizontalLayout	ui/ui_selectautonumw.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_SelectAutonumW
horizontalLayout	ui/ui_xrefpropertieswidget.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_XRefPropertiesWidget
horizontalLayout_	ui/ui_dialogautonum.h	/^    QHBoxLayout *horizontalLayout_;$/;"	m	class:Ui_DialogAutoNum
horizontalLayout_2	ui/ui_dialogautonum.h	/^    QHBoxLayout *horizontalLayout_2;$/;"	m	class:Ui_DialogAutoNum
horizontalLayout_2	ui/ui_linksingleelementwidget.h	/^    QHBoxLayout *horizontalLayout_2;$/;"	m	class:Ui_LinkSingleElementWidget
horizontalLayout_2	ui/ui_numparteditorw.h	/^    QHBoxLayout *horizontalLayout_2;$/;"	m	class:Ui_NumPartEditorW
horizontalLayout_2	ui/ui_xrefpropertieswidget.h	/^    QHBoxLayout *horizontalLayout_2;$/;"	m	class:Ui_XRefPropertiesWidget
horizontalPagesCount	diagramprintdialog.cpp	/^int DiagramPrintDialog::horizontalPagesCount(Diagram *diagram, const ExportProperties &options, bool fullpage) const {$/;"	f	class:DiagramPrintDialog
horizontalSegments	conductorprofile.cpp	/^QList<ConductorSegmentProfile *> ConductorProfile::horizontalSegments() {$/;"	f	class:ConductorProfile
horizontalSpacer	ui/ui_autonumselectorwidget.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_AutonumSelectorWidget
horizontalSpacer	ui/ui_dialogautonum.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_DialogAutoNum
horizontalSpacer	ui/ui_linksingleelementwidget.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_LinkSingleElementWidget
horizontalSpacer	ui/ui_selectautonumw.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_SelectAutonumW
horizontalSpacer_2	ui/ui_selectautonumw.h	/^    QSpacerItem *horizontalSpacer_2;$/;"	m	class:Ui_SelectAutonumW
hotspot	qetgraphicsitem/element.cpp	/^QPoint Element::hotspot() const {$/;"	f	class:Element
hotspot_coord	qetgraphicsitem/element.h	/^		QPoint  hotspot_coord;$/;"	m	class:Element
hoverEnterEvent	editor/graphicspart/customelementgraphicpart.cpp	/^void CustomElementGraphicPart::hoverEnterEvent(QGraphicsSceneHoverEvent *event)$/;"	f	class:CustomElementGraphicPart
hoverEnterEvent	qetgraphicsitem/conductor.cpp	/^void Conductor::hoverEnterEvent(QGraphicsSceneHoverEvent *e) {$/;"	f	class:Conductor
hoverEnterEvent	qetgraphicsitem/conductortextitem.cpp	/^void ConductorTextItem::hoverEnterEvent(QGraphicsSceneHoverEvent *e) {$/;"	f	class:ConductorTextItem
hoverEnterEvent	qetgraphicsitem/diagramtextitem.cpp	/^void DiagramTextItem::hoverEnterEvent(QGraphicsSceneHoverEvent *e) {$/;"	f	class:DiagramTextItem
hoverEnterEvent	qetgraphicsitem/element.cpp	/^void Element::hoverEnterEvent(QGraphicsSceneHoverEvent *e) {$/;"	f	class:Element
hoverEnterEvent	qetgraphicsitem/elementtextitem.cpp	/^void ElementTextItem::hoverEnterEvent(QGraphicsSceneHoverEvent *event)$/;"	f	class:ElementTextItem
hoverEnterEvent	qetgraphicsitem/qetshapeitem.cpp	/^void QetShapeItem::hoverEnterEvent(QGraphicsSceneHoverEvent *event) {$/;"	f	class:QetShapeItem
hoverEnterEvent	qetgraphicsitem/terminal.cpp	/^void Terminal::hoverEnterEvent(QGraphicsSceneHoverEvent *) {$/;"	f	class:Terminal
hoverLeaveEvent	editor/graphicspart/customelementgraphicpart.cpp	/^void CustomElementGraphicPart::hoverLeaveEvent(QGraphicsSceneHoverEvent *event)$/;"	f	class:CustomElementGraphicPart
hoverLeaveEvent	qetgraphicsitem/conductor.cpp	/^void Conductor::hoverLeaveEvent(QGraphicsSceneHoverEvent *e) {$/;"	f	class:Conductor
hoverLeaveEvent	qetgraphicsitem/conductortextitem.cpp	/^void ConductorTextItem::hoverLeaveEvent(QGraphicsSceneHoverEvent *e) {$/;"	f	class:ConductorTextItem
hoverLeaveEvent	qetgraphicsitem/diagramtextitem.cpp	/^void DiagramTextItem::hoverLeaveEvent(QGraphicsSceneHoverEvent *e) {$/;"	f	class:DiagramTextItem
hoverLeaveEvent	qetgraphicsitem/element.cpp	/^void Element::hoverLeaveEvent(QGraphicsSceneHoverEvent *e) {$/;"	f	class:Element
hoverLeaveEvent	qetgraphicsitem/elementtextitem.cpp	/^void ElementTextItem::hoverLeaveEvent(QGraphicsSceneHoverEvent *event)$/;"	f	class:ElementTextItem
hoverLeaveEvent	qetgraphicsitem/qetshapeitem.cpp	/^void QetShapeItem::hoverLeaveEvent(QGraphicsSceneHoverEvent *event) {$/;"	f	class:QetShapeItem
hoverLeaveEvent	qetgraphicsitem/terminal.cpp	/^void Terminal::hoverLeaveEvent(QGraphicsSceneHoverEvent *) {$/;"	f	class:Terminal
hoverMoveEvent	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::hoverMoveEvent(QGraphicsSceneHoverEvent *event) {$/;"	f	class:ElementPrimitiveDecorator
hoverMoveEvent	editor/graphicspart/parttext.cpp	/^void PartText::hoverMoveEvent(QGraphicsSceneHoverEvent *event) {$/;"	f	class:PartText
hoverMoveEvent	editor/graphicspart/parttextfield.cpp	/^void PartTextField::hoverMoveEvent(QGraphicsSceneHoverEvent *event) {$/;"	f	class:PartTextField
hoverMoveEvent	qetgraphicsitem/conductor.cpp	/^void Conductor::hoverMoveEvent(QGraphicsSceneHoverEvent *e) {$/;"	f	class:Conductor
hoverMoveEvent	qetgraphicsitem/conductortextitem.cpp	/^void ConductorTextItem::hoverMoveEvent(QGraphicsSceneHoverEvent *e) {$/;"	f	class:ConductorTextItem
hoverMoveEvent	qetgraphicsitem/diagramtextitem.cpp	/^void DiagramTextItem::hoverMoveEvent(QGraphicsSceneHoverEvent *e) {$/;"	f	class:DiagramTextItem
hoverMoveEvent	qetgraphicsitem/terminal.cpp	/^void Terminal::hoverMoveEvent(QGraphicsSceneHoverEvent *) {$/;"	f	class:Terminal
hovered_	qetgraphicsitem/terminal.h	/^	bool hovered_;$/;"	m	class:Terminal
hovered_color_	qetgraphicsitem/terminal.h	/^	QColor hovered_color_;$/;"	m	class:Terminal
hr	qeticons.cpp	/^		QIcon hr;$/;"	m	namespace:QET::Icons	file:
hundred	ui/numparteditorw.h	/^	enum type {unit,ten,hundred,string,folio};$/;"	e	enum:NumPartEditorW::type
icon	configpages.cpp	/^QIcon ExportConfigPage::icon() const {$/;"	f	class:ExportConfigPage
icon	configpages.cpp	/^QIcon GeneralConfigurationPage::icon() const {$/;"	f	class:GeneralConfigurationPage
icon	configpages.cpp	/^QIcon NewDiagramPage::icon() const {$/;"	f	class:NewDiagramPage
icon	configpages.cpp	/^QIcon PrintConfigPage::icon() const {$/;"	f	class:PrintConfigPage
icon	elementscollection.cpp	/^QIcon ElementsCollection::icon() const {$/;"	f	class:ElementsCollection
icon	projectconfigpages.cpp	/^QIcon ProjectAutoNumConfigPage::icon() const {$/;"	f	class:ProjectAutoNumConfigPage
icon	projectconfigpages.cpp	/^QIcon ProjectMainConfigPage::icon() const {$/;"	f	class:ProjectMainConfigPage
iconForFiles	recentfiles.cpp	/^QIcon RecentFiles::iconForFiles() const {$/;"	f	class:RecentFiles
icon_	elementscollection.h	/^	QIcon icon_;$/;"	m	class:ElementsCollection
iconsize	titleblock/templatelogomanager.cpp	/^QSize TitleBlockTemplateLogoManager::iconsize() const {$/;"	f	class:TitleBlockTemplateLogoManager
id	diagramfoliolist.h	/^	int id;$/;"	m	class:DiagramFolioList
id	titleblock/templatecommands.cpp	/^int ModifyTitleBlockCellCommand::id() const {$/;"	f	class:ModifyTitleBlockCellCommand
identifier_	recentfiles.h	/^	QString identifier_;$/;"	m	class:RecentFiles
ignore_all_button_	interactivemoveelementshandler.h	/^	QPushButton *ignore_all_button_;$/;"	m	class:InteractiveMoveElementsHandler
ignore_button_	interactivemoveelementshandler.h	/^	QPushButton *ignore_button_;$/;"	m	class:InteractiveMoveElementsHandler
imageSize	diagram.cpp	/^QSize Diagram::imageSize() const {$/;"	f	class:Diagram
images	diagramcontent.h	/^	QSet<DiagramImageItem *> images;$/;"	m	class:DiagramContent
images_to_rotate	diagramcommands.h	/^	QList<DiagramImageItem *> images_to_rotate;$/;"	m	class:RotateElementsCommand
importBorder	bordertitleblock.cpp	/^void BorderTitleBlock::importBorder(const BorderProperties &bp) {$/;"	f	class:BorderTitleBlock
importTitleBlock	bordertitleblock.cpp	/^void BorderTitleBlock::importTitleBlock(const TitleBlockProperties &ip) {$/;"	f	class:BorderTitleBlock
in_filter	ui/elementselectorwidget.h	/^	QStringList                in_filter,  \/\/In filter is used inside this class to filter the content of this widget$/;"	m	class:ElementSelectorWidget
increase_label	ui/ui_selectautonumw.h	/^    QLabel *increase_label;$/;"	m	class:Ui_SelectAutonumW
increase_spinBox	ui/ui_numparteditorw.h	/^    QSpinBox *increase_spinBox;$/;"	m	class:Ui_NumPartEditorW
incrementLetters	bordertitleblock.cpp	/^QString BorderTitleBlock::incrementLetters(const QString &string) {$/;"	f	class:BorderTitleBlock
index	titleblock/gridlayoutanimation.cpp	/^int GridLayoutAnimation::index() const {$/;"	f	class:GridLayoutAnimation
index	titleblock/helpercell.h	/^	int index;                   \/\/\/< Index of this cell$/;"	m	class:HelperCell
index	titleblock/templatecommands.cpp	/^int ModifyTemplateDimension::index() const {$/;"	f	class:ModifyTemplateDimension
index	titleblock/templatecommands.cpp	/^int ModifyTemplateGridCommand::index() const {$/;"	f	class:ModifyTemplateGridCommand
indexForCollection	titleblock/templatelocationchooser.cpp	/^int TitleBlockTemplateLocationChooser::indexForCollection(TitleBlockTemplatesCollection *coll) const {$/;"	f	class:TitleBlockTemplateLocationChooser
indexOf	titleblock/templateview.cpp	/^int TitleBlockTemplateView::indexOf(QGraphicsLayoutItem *item) {$/;"	f	class:TitleBlockTemplateView
index_	titleblock/gridlayoutanimation.h	/^	int index_;                 \/\/\/< Index of the row\/column to be animated$/;"	m	class:GridLayoutAnimation
index_	titleblock/templatecommands.h	/^	int index_;                     \/\/\/< Index of the inserted\/deleted row\/column$/;"	m	class:ModifyTemplateGridCommand
index_	titleblock/templatecommands.h	/^	int index_;                   \/\/\/< Index of the resized row\/column$/;"	m	class:ModifyTemplateDimension
information	qetmessagebox.cpp	/^QMessageBox::StandardButton QET::MessageBox::information(QWidget *parent, const QString &title, const QString &text, QMessageBox::StandardButtons buttons, QMessageBox::StandardButton defaultButton) {$/;"	f	class:QET::MessageBox
information	titleblocktemplate.cpp	/^QString TitleBlockTemplate::information() const {$/;"	f	class:TitleBlockTemplate
information_	titleblocktemplate.h	/^	QString information_;$/;"	m	class:TitleBlockTemplate
informations	editor/elementscene.h	/^inline QString ElementScene::informations() const {$/;"	f	class:ElementScene
informations_	editor/elementscene.h	/^		QString informations_;$/;"	m	class:ElementScene
infos_diagram	qetdiagrameditor.h	/^		QAction *infos_diagram;      \/\/\/< Show a dialog to edit diagram properties$/;"	m	class:QETDiagramEditor
init	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::init() {$/;"	f	class:ElementPrimitiveDecorator
init	editor/esevent/eseventinterface.cpp	/^void ESEventInterface::init() {$/;"	f	class:ESEventInterface
init	projectconfigpages.cpp	/^void ProjectConfigPage::init() {$/;"	f	class:ProjectConfigPage
init	qetgraphicsitem/terminal.cpp	/^void Terminal::init(QPointF pf, Qet::Orientation o, QString number, QString name, bool hiddenName) {$/;"	f	class:Terminal
init	qfilenameedit.cpp	/^void QFileNameEdit::init() {$/;"	f	class:QFileNameEdit
init	titleblock/templatelocationchooser.cpp	/^void TitleBlockTemplateLocationChooser::init() {$/;"	f	class:TitleBlockTemplateLocationChooser
init	titleblock/templatelocationsaver.cpp	/^void TitleBlockTemplateLocationSaver::init() {$/;"	f	class:TitleBlockTemplateLocationSaver
init	titleblock/templateview.cpp	/^void TitleBlockTemplateView::init() {$/;"	f	class:TitleBlockTemplateView
initActions	projectview.cpp	/^void ProjectView::initActions() {$/;"	f	class:ProjectView
initActions	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::initActions() {$/;"	f	class:QETTitleBlockTemplateEditor
initCells	titleblocktemplate.cpp	/^void TitleBlockTemplate::initCells() {$/;"	f	class:TitleBlockTemplate
initCommonActions	qetmainwindow.cpp	/^void QETMainWindow::initCommonActions() {$/;"	f	class:QETMainWindow
initCommonMenus	qetmainwindow.cpp	/^void QETMainWindow::initCommonMenus() {$/;"	f	class:QETMainWindow
initConfiguration	qetapp.cpp	/^void QETApp::initConfiguration()$/;"	f	class:QETApp
initConflictDialog	interactivemoveelementshandler.cpp	/^void InteractiveMoveElementsHandler::initConflictDialog() {$/;"	f	class:InteractiveMoveElementsHandler
initDiagramsListPart	exportdialog.cpp	/^QWidget *ExportDialog::initDiagramsListPart() {$/;"	f	class:ExportDialog
initDialog	integrationmoveelementshandler.cpp	/^void IntegrationMoveElementsHandler::initDialog() {$/;"	f	class:IntegrationMoveElementsHandler
initDialog	titleblock/integrationmovetemplateshandler.cpp	/^void IntegrationMoveTitleBlockTemplatesHandler::initDialog() {$/;"	f	class:IntegrationMoveTitleBlockTemplatesHandler
initDialog	ui/titleblockpropertieswidget.cpp	/^void TitleBlockPropertiesWidget::initDialog(const bool &current_date) {$/;"	f	class:TitleBlockPropertiesWidget
initElementsLinks	diagram.cpp	/^void Diagram::initElementsLinks() {$/;"	f	class:Diagram
initFromXml	diagram.cpp	/^bool Diagram::initFromXml(QDomElement &document, QPointF position, bool consider_informations, DiagramContent *content_ptr) {$/;"	f	class:Diagram
initIcons	qeticons.cpp	/^void QET::Icons::initIcons() {$/;"	f	class:QET::Icons
initLanguage	qetapp.cpp	/^void QETApp::initLanguage()$/;"	f	class:QETApp
initLayout	diagramcontextwidget.cpp	/^void DiagramContextWidget::initLayout() {$/;"	f	class:DiagramContextWidget
initLayout	projectconfigpages.cpp	/^void ProjectAutoNumConfigPage::initLayout() {$/;"	f	class:ProjectAutoNumConfigPage
initLayout	projectconfigpages.cpp	/^void ProjectMainConfigPage::initLayout() {$/;"	f	class:ProjectMainConfigPage
initLayout	projectview.cpp	/^void ProjectView::initLayout() {$/;"	f	class:ProjectView
initLayouts	titleblock/dimensionwidget.cpp	/^void TitleBlockDimensionWidget::initLayouts() {$/;"	f	class:TitleBlockDimensionWidget
initLink	qetgraphicsitem/element.cpp	/^void Element::initLink(QETProject *prj)$/;"	f	class:Element
initLink	qetgraphicsitem/masterelement.cpp	/^void MasterElement::initLink(QETProject *project) {$/;"	f	class:MasterElement
initLink	qetgraphicsitem/simpleelement.cpp	/^void SimpleElement::initLink(QETProject *project) {$/;"	f	class:SimpleElement
initLogoManager	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::initLogoManager() {$/;"	f	class:QETTitleBlockTemplateEditor
initMenus	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::initMenus() {$/;"	f	class:QETTitleBlockTemplateEditor
initPasteArea	editor/elementscene.cpp	/^void ElementScene::initPasteArea() {$/;"	f	class:ElementScene
initSplashScreen	qetapp.cpp	/^void QETApp::initSplashScreen()$/;"	f	class:QETApp
initStyle	qetapp.cpp	/^void QETApp::initStyle()$/;"	f	class:QETApp
initSystemTray	qetapp.cpp	/^void QETApp::initSystemTray()$/;"	f	class:QETApp
initToolbars	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::initToolbars() {$/;"	f	class:QETTitleBlockTemplateEditor
initWidget	ui/conductorpropertieswidget.cpp	/^void ConductorPropertiesWidget::initWidget() {$/;"	f	class:ConductorPropertiesWidget
initWidgets	diagramcontextwidget.cpp	/^void DiagramContextWidget::initWidgets() {$/;"	f	class:DiagramContextWidget
initWidgets	projectconfigpages.cpp	/^void ProjectAutoNumConfigPage::initWidgets() {$/;"	f	class:ProjectAutoNumConfigPage
initWidgets	projectconfigpages.cpp	/^void ProjectMainConfigPage::initWidgets() {$/;"	f	class:ProjectMainConfigPage
initWidgets	projectview.cpp	/^void ProjectView::initWidgets() {$/;"	f	class:ProjectView
initWidgets	titleblock/dimensionwidget.cpp	/^void TitleBlockDimensionWidget::initWidgets() {$/;"	f	class:TitleBlockDimensionWidget
initWidgets	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::initWidgets() {$/;"	f	class:QETTitleBlockTemplateEditor
initWidgets	titleblock/templatecellwidget.cpp	/^void TitleBlockTemplateCellWidget::initWidgets() {$/;"	f	class:TitleBlockTemplateCellWidget
initWidgets	titleblock/templatelogomanager.cpp	/^void TitleBlockTemplateLogoManager::initWidgets() {$/;"	f	class:TitleBlockTemplateLogoManager
initial_palette_	qetapp.h	/^	QPalette initial_palette_;          \/\/\/< System color palette$/;"	m	class:QETApp
insertColumn	titleblocktemplate.cpp	/^bool TitleBlockTemplate::insertColumn(const TitleBlockDimension &dimension, const QList<TitleBlockCell *> &column, int i) {$/;"	f	class:TitleBlockTemplate
insertFile	recentfiles.cpp	/^void RecentFiles::insertFile(const QString &filepath) {$/;"	f	class:RecentFiles
insertImage	richtext/richtexteditor.cpp	/^void RichTextEditorToolBar::insertImage()$/;"	f	class:qdesigner_internal::RichTextEditorToolBar
insertLink	richtext/richtexteditor.cpp	/^void RichTextEditorToolBar::insertLink()$/;"	f	class:qdesigner_internal::RichTextEditorToolBar
insertMenu	qetmainwindow.cpp	/^void QETMainWindow::insertMenu(QMenu *before, QMenu *menu, bool customize) {$/;"	f	class:QETMainWindow
insertRow	titleblocktemplate.cpp	/^bool TitleBlockTemplate::insertRow(int dimension, const QList<TitleBlockCell *> &row, int i) {$/;"	f	class:TitleBlockTemplate
insert_name_	elementscollectioncache.h	/^	QSqlQuery *insert_name_;        \/\/\/< Prepared statement to insert names into the cache$/;"	m	class:ElementsCollectionCache
insert_pixmap_	elementscollectioncache.h	/^	QSqlQuery *insert_pixmap_;      \/\/\/< Prepared statement to insert pixmaps into the cache$/;"	m	class:ElementsCollectionCache
insertion_	titleblock/templatecommands.h	/^	bool insertion_;                \/\/\/ true if the row\/column is inserted, false if it is deleted$/;"	m	class:ModifyTemplateGridCommand
instance	qetapp.cpp	/^QETApp *QETApp::instance()$/;"	f	class:QETApp
intValidator	ui/numparteditorw.h	/^	QValidator *intValidator;$/;"	m	class:NumPartEditorW
integ_dialog_	integrationmoveelementshandler.h	/^	QDialog *integ_dialog_;               \/\/\/< Dialog in case of conflict when integration an element$/;"	m	class:IntegrationMoveElementsHandler
integ_dialog_	titleblock/integrationmovetemplateshandler.h	/^	QDialog *integ_dialog_;               \/\/\/< Dialog in case of conflict when integrating a title block template$/;"	m	class:IntegrationMoveTitleBlockTemplatesHandler
integrateElement	qetproject.cpp	/^QString QETProject::integrateElement(const QString &elmt_location, QString &error_msg) {$/;"	f	class:QETProject
integrateElement	qetproject.cpp	/^QString QETProject::integrateElement(const QString &elmt_path, MoveElementsHandler *handler, QString &error_message) {$/;"	f	class:QETProject
integrateTitleBlockTemplate	qetproject.cpp	/^QString QETProject::integrateTitleBlockTemplate(const TitleBlockTemplateLocation &src_tbt, MoveTitleBlockTemplatesHandler *handler) {$/;"	f	class:QETProject
integrate_both_	integrationmoveelementshandler.h	/^	QRadioButton *integrate_both_;$/;"	m	class:IntegrationMoveElementsHandler
integrate_both_	titleblock/integrationmovetemplateshandler.h	/^	QRadioButton *integrate_both_;$/;"	m	class:IntegrationMoveTitleBlockTemplatesHandler
integrate_elements_	configpages.h	/^	QCheckBox *integrate_elements_;$/;"	m	class:GeneralConfigurationPage
integrate_new_element_	integrationmoveelementshandler.h	/^	QRadioButton *integrate_new_element_;$/;"	m	class:IntegrationMoveElementsHandler
integrate_new_template_	titleblock/integrationmovetemplateshandler.h	/^	QRadioButton *integrate_new_template_;   \/\/\/< Radio button the user may click to integrate the template$/;"	m	class:IntegrationMoveTitleBlockTemplatesHandler
integrationCategory	qetproject.cpp	/^ElementsCategory *QETProject::integrationCategory() const {$/;"	f	class:QETProject
integration_category_name	qetproject.cpp	/^QString QETProject::integration_category_name = "import";$/;"	m	class:QETProject	file:
integration_category_name	qetproject.h	/^	static QString integration_category_name;$/;"	m	class:QETProject
internalBoundingRect	editor/elementprimitivedecorator.cpp	/^QRectF ElementPrimitiveDecorator::internalBoundingRect() const {$/;"	f	class:ElementPrimitiveDecorator
internal_name_	elementscategoryeditor.h	/^	QFileNameEdit *internal_name_;$/;"	m	class:ElementsCategoryEditor
internal_name_label_	elementscategoryeditor.h	/^	QLabel *internal_name_label_;$/;"	m	class:ElementsCategoryEditor
interpreteVariables	titleblocktemplate.cpp	/^QString TitleBlockTemplate::interpreteVariables(const QString &string, const DiagramContext &diagram_context) const {$/;"	f	class:TitleBlockTemplate
inv_select	editor/qetelementeditor.h	/^	QAction *selectall, *deselectall, *inv_select;$/;"	m	class:QETElementEditor
invalidateRenderedTemplate	titleblocktemplaterenderer.cpp	/^void TitleBlockTemplateRenderer::invalidateRenderedTemplate() {$/;"	f	class:TitleBlockTemplateRenderer
inverse_report	qetgraphicsitem/reportelement.h	/^	int              inverse_report;$/;"	m	class:ReportElement
invertMainWindowVisibility	qetapp.cpp	/^void QETApp::invertMainWindowVisibility (QWidget *window)$/;"	f	class:QETApp
invertSelection	diagram.cpp	/^void Diagram::invertSelection() {$/;"	f	class:Diagram
ipw	configpages.h	/^	TitleBlockPropertiesWidget *ipw;       \/\/\/< Widget to edit default title block properties$/;"	m	class:NewDiagramPage
isBetween	qetgraphicsitem/conductor.h	/^bool isBetween (const T a, const T b, const T c) {$/;"	f
isBlack	editor/graphicspart/parttext.h	/^		bool isBlack() const {return defaultTextColor() == Qt::black;}$/;"	f	class:PartText
isCacheable	fileelementscollection.cpp	/^bool FileElementsCollection::isCacheable() const {$/;"	f	class:FileElementsCollection
isCacheable	xmlelementscollection.cpp	/^bool XmlElementsCollection::isCacheable() const {$/;"	f	class:XmlElementsCollection
isCategory	elementdefinition.h	/^	virtual bool isCategory()     const { return(false); } \/\/\/< @return always false$/;"	f	class:ElementDefinition
isCategory	elementscategory.cpp	/^bool ElementsCategory::isCategory() const {$/;"	f	class:ElementsCategory
isCategory	elementscollection.cpp	/^bool ElementsCollection::isCategory()  const {$/;"	f	class:ElementsCollection
isChildOf	elementdefinition.cpp	/^bool ElementDefinition::isChildOf(ElementsCollectionItem *other_item) {$/;"	f	class:ElementDefinition
isChildOf	elementscategory.cpp	/^bool ElementsCategory::isChildOf(ElementsCollectionItem *other_item) {$/;"	f	class:ElementsCategory
isChildOf	elementscollection.cpp	/^bool ElementsCollection::isChildOf(ElementsCollectionItem *) {$/;"	f	class:ElementsCollection
isClosed	editor/graphicspart/partpolygon.h	/^		bool isClosed  () const {return m_closed;}$/;"	f	class:PartPolygon
isCollection	elementdefinition.h	/^	virtual bool isCollection()   const { return(false); } \/\/\/< @return always false$/;"	f	class:ElementDefinition
isCollection	elementscategory.cpp	/^bool ElementsCategory::isCollection() const {$/;"	f	class:ElementsCategory
isCollection	elementscollection.cpp	/^bool ElementsCollection::isCollection() const {$/;"	f	class:ElementsCollection
isComplete	titleblock/dimensionwidget.cpp	/^bool TitleBlockDimensionWidget::isComplete() const {$/;"	f	class:TitleBlockDimensionWidget
isContained	qetgraphicsitem/conductor.cpp	/^bool isContained(const QPointF &a, const QPointF &b, const QPointF &c) {$/;"	f
isCtrlShifting	diagramview.cpp	/^bool DiagramView::isCtrlShifting(QInputEvent *e) {$/;"	f	class:DiagramView
isDestroyed	qetgraphicsitem/conductor.h	/^	bool isDestroyed() const { return(destroyed_); }$/;"	f	class:Conductor
isEditing	editor/qetelementeditor.cpp	/^bool QETElementEditor::isEditing(const ElementsLocation &provided_location) {$/;"	f	class:QETElementEditor
isEditing	editor/qetelementeditor.cpp	/^bool QETElementEditor::isEditing(const QString &provided_filepath) {$/;"	f	class:QETElementEditor
isEditing	titleblock/qettemplateeditor.cpp	/^bool QETTitleBlockTemplateEditor::isEditing(const QString &filepath) {$/;"	f	class:QETTitleBlockTemplateEditor
isElement	elementdefinition.h	/^	virtual bool isElement()      const { return(true ); } \/\/\/< @return always  true$/;"	f	class:ElementDefinition
isElement	elementscategory.cpp	/^bool ElementsCategory::isElement() const {$/;"	f	class:ElementsCategory
isElement	elementscollection.cpp	/^bool ElementsCollection::isElement() const {$/;"	f	class:ElementsCollection
isEmpty	diagram.cpp	/^bool Diagram::isEmpty() const {$/;"	f	class:Diagram
isEmpty	elementdefinition.cpp	/^bool ElementDefinition::isEmpty() {$/;"	f	class:ElementDefinition
isEmpty	elementscategory.cpp	/^bool ElementsCategory::isEmpty() {$/;"	f	class:ElementsCategory
isEmpty	elementscollection.cpp	/^bool ElementsCollection::isEmpty() {$/;"	f	class:ElementsCollection
isEmpty	nameslist.cpp	/^bool NamesList::isEmpty() const {$/;"	f	class:NamesList
isEmpty	numerotationcontext.cpp	/^bool NumerotationContext::isEmpty() const {$/;"	f	class:NumerotationContext
isEmpty	qetproject.cpp	/^bool QETProject::isEmpty() const {$/;"	f	class:QETProject
isEmpty	qfilenameedit.cpp	/^bool QFileNameEdit::isEmpty() {$/;"	f	class:QFileNameEdit
isFinish	dvevent/dveventinterface.cpp	/^bool DVEventInterface::isFinish() const {$/;"	f	class:DVEventInterface
isFinish	editor/esevent/eseventinterface.cpp	/^bool ESEventInterface::isFinish() const {$/;"	f	class:ESEventInterface
isFirstSegment	conductorsegment.cpp	/^bool ConductorSegment::isFirstSegment() const {$/;"	f	class:ConductorSegment
isFree	qetgraphicsitem/element.h	/^inline bool Element::isFree() const {$/;"	f	class:Element
isHighlighted	qetgraphicsitem/element.cpp	/^bool Element::isHighlighted() const {$/;"	f	class:Element
isHorizontal	conductorsegment.cpp	/^bool ConductorSegment::isHorizontal() const {$/;"	f	class:ConductorSegment
isHorizontal	conductorsegmentprofile.h	/^	bool isHorizontal;$/;"	m	class:ConductorSegmentProfile
isHorizontal	qet.cpp	/^bool Qet::isHorizontal(Qet::Orientation a) {$/;"	f	class:Qet
isHorizontal	qettabbar.cpp	/^bool QETTabBar::isHorizontal() const {$/;"	f	class:QETTabBar
isInsertion	titleblock/templatecommands.cpp	/^bool ModifyTemplateGridCommand::isInsertion() const {$/;"	f	class:ModifyTemplateGridCommand
isLastSegment	conductorsegment.cpp	/^bool ConductorSegment::isLastSegment() const {$/;"	f	class:ConductorSegment
isLinkedTo	qetgraphicsitem/terminal.cpp	/^bool Terminal::isLinkedTo(Terminal *other_terminal) {$/;"	f	class:Terminal
isMovable	qettabbar.cpp	/^bool QETTabBar::isMovable() const {$/;"	f	class:QETTabBar
isMovable	qettabwidget.cpp	/^bool QETTabWidget::isMovable() const {$/;"	f	class:QETTabWidget
isNearConductor	qetgraphicsitem/conductor.cpp	/^bool Conductor::isNearConductor(const QPointF &point) {$/;"	f	class:Conductor
isNull	conductorprofile.cpp	/^bool ConductorProfile::isNull() const {$/;"	f	class:ConductorProfile
isNull	dvevent/dveventaddimage.cpp	/^bool DVEventAddImage::isNull() const {$/;"	f	class:DVEventAddImage
isNull	elementslocation.cpp	/^bool ElementsLocation::isNull() const {$/;"	f	class:ElementsLocation
isNull	fileelementdefinition.cpp	/^bool FileElementDefinition::isNull() const {$/;"	f	class:FileElementDefinition
isNull	qetgraphicsitem/customelement.h	/^inline bool CustomElement::isNull() const {$/;"	f	class:CustomElement
isNull	xmlelementdefinition.cpp	/^bool XmlElementDefinition::isNull() const {$/;"	f	class:XmlElementDefinition
isOk	qetresult.cpp	/^bool QETResult::isOk() const {$/;"	f	class:QETResult
isOpposed	qet.cpp	/^bool Qet::isOpposed(Qet::Orientation a, Qet::Orientation b)$/;"	f	class:Qet
isOutOfBounds	diagramposition.cpp	/^bool DiagramPosition::isOutOfBounds() const {$/;"	f	class:DiagramPosition
isPen	conductorproperties.cpp	/^bool SingleLineProperties::isPen() const {$/;"	f	class:SingleLineProperties
isPoint	conductorsegment.cpp	/^bool ConductorSegment::isPoint() const {$/;"	f	class:ConductorSegment
isReadOnly	diagram.cpp	/^bool Diagram::isReadOnly() const$/;"	f	class:Diagram
isReadOnly	diagramcontextwidget.cpp	/^bool DiagramContextWidget::isReadOnly() {$/;"	f	class:DiagramContextWidget
isReadOnly	editor/qetelementeditor.cpp	/^bool QETElementEditor::isReadOnly() const {$/;"	f	class:QETElementEditor
isReadOnly	nameslistwidget.cpp	/^bool NamesListWidget::isReadOnly() const {$/;"	f	class:NamesListWidget
isReadOnly	qetproject.cpp	/^bool QETProject::isReadOnly() const {$/;"	f	class:QETProject
isReadOnly	qtextorientationspinboxwidget.cpp	/^bool QTextOrientationSpinBoxWidget::isReadOnly() const {$/;"	f	class:QTextOrientationSpinBoxWidget
isReadOnly	qtextorientationwidget.cpp	/^bool QTextOrientationWidget::isReadOnly() const {$/;"	f	class:QTextOrientationWidget
isReadOnly	titleblock/dimensionwidget.cpp	/^bool TitleBlockDimensionWidget::isReadOnly() const {$/;"	f	class:TitleBlockDimensionWidget
isReadOnly	titleblock/templatecellwidget.cpp	/^bool TitleBlockTemplateCellWidget::isReadOnly() const {$/;"	f	class:TitleBlockTemplateCellWidget
isReadOnly	titleblock/templatelocation.cpp	/^bool TitleBlockTemplateLocation::isReadOnly() const {$/;"	f	class:TitleBlockTemplateLocation
isReadOnly	titleblock/templatelogomanager.cpp	/^bool TitleBlockTemplateLogoManager::isReadOnly() const {$/;"	f	class:TitleBlockTemplateLogoManager
isReadOnly	titleblock/templatescollection.cpp	/^bool TitleBlockTemplatesFilesCollection::isReadOnly(const QString &template_name) const {$/;"	f	class:TitleBlockTemplatesFilesCollection
isReadOnly	titleblock/templatescollection.cpp	/^bool TitleBlockTemplatesProjectCollection::isReadOnly(const QString &template_name) const {$/;"	f	class:TitleBlockTemplatesProjectCollection
isReadable	fileelementdefinition.cpp	/^bool FileElementDefinition::isReadable() {$/;"	f	class:FileElementDefinition
isReadable	fileelementscategory.cpp	/^bool FileElementsCategory::isReadable() {$/;"	f	class:FileElementsCategory
isReadable	fileelementscollection.cpp	/^bool FileElementsCollection::isReadable() {$/;"	f	class:FileElementsCollection
isReadable	xmlelementdefinition.cpp	/^bool XmlElementDefinition::isReadable() {$/;"	f	class:XmlElementDefinition
isReadable	xmlelementscategory.cpp	/^bool XmlElementsCategory::isReadable() {$/;"	f	class:XmlElementsCategory
isReadable	xmlelementscollection.cpp	/^bool XmlElementsCollection::isReadable() {$/;"	f	class:XmlElementsCollection
isReady	elementsmover.cpp	/^bool ElementsMover::isReady() const {$/;"	f	class:ElementsMover
isReady	elementtextsmover.cpp	/^bool ElementTextsMover::isReady() const {$/;"	f	class:ElementTextsMover
isRectangle	titleblock/templatecellsset.cpp	/^bool TitleBlockTemplateCellsSet::isRectangle() const {$/;"	f	class:TitleBlockTemplateCellsSet
isRecursive	moveelementsdescription.cpp	/^bool MoveElementsDescription::isRecursive() const {$/;"	f	class:MoveElementsDescription
isRootCategory	elementdefinition.h	/^	virtual bool isRootCategory() const { return(false); } \/\/\/< @return always false$/;"	f	class:ElementDefinition
isRootCategory	elementscategory.cpp	/^bool ElementsCategory::isRootCategory() const {$/;"	f	class:ElementsCategory
isRootCategory	elementscollection.cpp	/^bool ElementsCollection::isRootCategory() const {$/;"	f	class:ElementsCollection
isRunning	dvevent/dveventinterface.cpp	/^bool DVEventInterface::isRunning() const {$/;"	f	class:DVEventInterface
isRunning	editor/esevent/eseventinterface.cpp	/^bool ESEventInterface::isRunning() const {$/;"	f	class:ESEventInterface
isRunning	qetsingleapplication.cpp	/^bool QETSingleApplication::isRunning() {$/;"	f	class:QETSingleApplication
isStatic	conductorsegment.cpp	/^bool ConductorSegment::isStatic() const {$/;"	f	class:ConductorSegment
isStyleEditable	editor/styleeditor.cpp	/^bool StyleEditor::isStyleEditable(QList<CustomElementPart *> cep_list)$/;"	f	class:StyleEditor
isUseless	editor/graphicspart/abstractpartellipse.cpp	/^bool AbstractPartEllipse::isUseless() const {$/;"	f	class:AbstractPartEllipse
isUseless	editor/graphicspart/partline.cpp	/^bool PartLine::isUseless() const {$/;"	f	class:PartLine
isUseless	editor/graphicspart/partpolygon.cpp	/^bool PartPolygon::isUseless() const$/;"	f	class:PartPolygon
isUseless	editor/graphicspart/partrectangle.cpp	/^bool PartRectangle::isUseless() const {$/;"	f	class:PartRectangle
isUseless	editor/graphicspart/partterminal.cpp	/^bool PartTerminal::isUseless() const {$/;"	f	class:PartTerminal
isUseless	editor/graphicspart/parttext.cpp	/^bool PartText::isUseless() const {$/;"	f	class:PartText
isUseless	editor/graphicspart/parttextfield.cpp	/^bool PartTextField::isUseless() const {$/;"	f	class:PartTextField
isValid	qfilenameedit.cpp	/^bool QFileNameEdit::isValid() {$/;"	f	class:QFileNameEdit
isValid	titleblock/templatecommands.cpp	/^bool MergeCellsCommand::isValid() const {$/;"	f	class:MergeCellsCommand
isValid	titleblock/templatecommands.cpp	/^bool SplitCellsCommand::isValid() const {$/;"	f	class:SplitCellsCommand
isValid	titleblock/templatelocation.cpp	/^bool TitleBlockTemplateLocation::isValid() const {$/;"	f	class:TitleBlockTemplateLocation
isValid	ui/numparteditorw.cpp	/^bool NumPartEditorW::isValid() {$/;"	f	class:NumPartEditorW
isVertical	conductorsegment.cpp	/^bool ConductorSegment::isVertical() const {$/;"	f	class:ConductorSegment
isVertical	qet.cpp	/^bool Qet::isVertical(Qet::Orientation a) {$/;"	f	class:Qet
isVertical	qettabbar.cpp	/^bool QETTabBar::isVertical() const {$/;"	f	class:QETTabBar
isWhiteSpace	richtext/richtexteditor.cpp	/^	static inline bool isWhiteSpace(const QStringRef &in)$/;"	f	namespace:qdesigner_internal
isWritable	fileelementdefinition.cpp	/^bool FileElementDefinition::isWritable() {$/;"	f	class:FileElementDefinition
isWritable	fileelementscategory.cpp	/^bool FileElementsCategory::isWritable() {$/;"	f	class:FileElementsCategory
isWritable	fileelementscollection.cpp	/^bool FileElementsCollection::isWritable() {$/;"	f	class:FileElementsCollection
isWritable	xmlelementdefinition.cpp	/^bool XmlElementDefinition::isWritable() {$/;"	f	class:XmlElementDefinition
isWritable	xmlelementscategory.cpp	/^bool XmlElementsCategory::isWritable() {$/;"	f	class:XmlElementsCategory
isWritable	xmlelementscollection.cpp	/^bool XmlElementsCollection::isWritable() {$/;"	f	class:XmlElementsCollection
is_movable_	qetgraphicsitem/qetgraphicsitem.h	/^		bool is_movable_;$/;"	m	class:QetGraphicsItem
is_moving_view_	editor/elementview.h	/^	bool is_moving_view_;               \/\/\/< Indicate whether the visualisation mode has been enabled due to mouse\/keyboard interactions$/;"	m	class:ElementView
is_null	fileelementdefinition.h	/^	bool is_null;$/;"	m	class:FileElementDefinition
is_null_	xmlelementdefinition.h	/^	bool is_null_;$/;"	m	class:XmlElementDefinition
is_pen	conductorproperties.h	/^	bool is_pen;$/;"	m	class:SingleLineProperties
is_running_	qetsingleapplication.h	/^	bool is_running_;$/;"	m	class:QETSingleApplication
it	qeticons.cpp	/^		QIcon it;$/;"	m	namespace:QET::Icons	file:
it_	elementspanel.h	/^	QTreeWidgetItem *it_prev_, *it_;$/;"	m	class:ElementsPanel
it_prev_	elementspanel.h	/^	QTreeWidgetItem *it_prev_, *it_;$/;"	m	class:ElementsPanel
item	elementscollection.cpp	/^ElementsCollectionItem *ElementsCollection::item(const QString &item_path, bool prefer_collections) {$/;"	f	class:ElementsCollection
itemAt	numerotationcontext.cpp	/^QStringList NumerotationContext::itemAt(const int i) const {$/;"	f	class:NumerotationContext
itemChange	editor/graphicspart/customelementgraphicpart.cpp	/^QVariant CustomElementGraphicPart::itemChange(GraphicsItemChange change, const QVariant &value)$/;"	f	class:CustomElementGraphicPart
itemChange	editor/graphicspart/parttext.cpp	/^QVariant PartText::itemChange(GraphicsItemChange change, const QVariant &value) {$/;"	f	class:PartText
itemChange	editor/graphicspart/parttextfield.cpp	/^QVariant PartTextField::itemChange(GraphicsItemChange change, const QVariant &value) {$/;"	f	class:PartTextField
itemChange	qetgraphicsitem/conductor.cpp	/^QVariant Conductor::itemChange(GraphicsItemChange change, const QVariant &value) {$/;"	f	class:Conductor
itemForDiagram	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::itemForDiagram(Diagram *diagram) {$/;"	f	class:GenericPanel
itemForElement	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::itemForElement(ElementDefinition *element) {$/;"	f	class:GenericPanel
itemForElementsCategory	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::itemForElementsCategory(ElementsCategory *category) {$/;"	f	class:GenericPanel
itemForElementsCollection	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::itemForElementsCollection(ElementsCollection *collection) {$/;"	f	class:GenericPanel
itemForElementsLocation	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::itemForElementsLocation(const ElementsLocation &location) {$/;"	f	class:GenericPanel
itemForProject	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::itemForProject(QETProject *project) {$/;"	f	class:GenericPanel
itemForTemplate	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::itemForTemplate(const TitleBlockTemplateLocation &tb_template) {$/;"	f	class:GenericPanel
itemForTemplatesCollection	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::itemForTemplatesCollection(TitleBlockTemplatesCollection *tbt_collection) {$/;"	f	class:GenericPanel
itemIsWritable	elementspanel.cpp	/^bool ElementsPanel::itemIsWritable(QTreeWidgetItem *qtwi) const {$/;"	f	class:ElementsPanel
itemText	diagramcommands.cpp	/^QString itemText(const Conductor *item) {$/;"	f
itemText	diagramcommands.cpp	/^QString itemText(const IndependentTextItem *item) {$/;"	f
itemText	diagramcommands.cpp	/^QString itemText(const QetGraphicsItem *item) {$/;"	f
items	diagramcontent.cpp	/^QList<QGraphicsItem *> DiagramContent::items(int filter) const {$/;"	f	class:DiagramContent
items	editor/elementprimitivedecorator.cpp	/^QList<CustomElementPart *> ElementPrimitiveDecorator::items() const {$/;"	f	class:ElementPrimitiveDecorator
items	treecoloranimation.cpp	/^QList<QTreeWidgetItem *> TreeColorAnimation::items() const {$/;"	f	class:TreeColorAnimation
items_	treecoloranimation.h	/^	QList<QTreeWidgetItem *> items_; \/\/\/< Items this object will animate$/;"	m	class:TreeColorAnimation
joinWithSpaces	qet.cpp	/^QString QET::joinWithSpaces(const QStringList &string_list) {$/;"	f	class:QET
junctions	qetgraphicsitem/conductor.cpp	/^QList<QPointF> Conductor::junctions() const {$/;"	f	class:Conductor
keep_ratio	exportdialog.h	/^		QPushButton *keep_ratio;$/;"	m	class:ExportDialog::ExportDiagramLine
key	ui/elementinfopartwidget.h	/^		QString key         () const {return key_;}$/;"	f	class:ElementInfoPartWidget
keyIsAcceptable	diagramcontext.cpp	/^bool DiagramContext::keyIsAcceptable(const QString &key) const {$/;"	f	class:DiagramContext
keyIsAcceptable	numerotationcontext.cpp	/^bool NumerotationContext::keyIsAcceptable(const QString &type) const {$/;"	f	class:NumerotationContext
keyIsNumber	numerotationcontext.cpp	/^bool NumerotationContext::keyIsNumber(const QString &type) const {$/;"	f	class:NumerotationContext
keyMustShow	diagramcontext.cpp	/^bool DiagramContext::keyMustShow(const QString &key) const {$/;"	f	class:DiagramContext
keyPressEvent	diagram.cpp	/^void Diagram::keyPressEvent(QKeyEvent *e) {$/;"	f	class:Diagram
keyPressEvent	diagramview.cpp	/^void DiagramView::keyPressEvent(QKeyEvent *e) {$/;"	f	class:DiagramView
keyPressEvent	dvevent/dveventinterface.cpp	/^bool DVEventInterface::keyPressEvent(QKeyEvent *event) {$/;"	f	class:DVEventInterface
keyPressEvent	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::keyPressEvent(QKeyEvent *e) {$/;"	f	class:ElementPrimitiveDecorator
keyPressEvent	editor/elementscene.cpp	/^void ElementScene::keyPressEvent(QKeyEvent *event) {$/;"	f	class:ElementScene
keyPressEvent	editor/esevent/eseventaddarc.cpp	/^bool ESEventAddArc::keyPressEvent(QKeyEvent *event) {$/;"	f	class:ESEventAddArc
keyPressEvent	editor/esevent/eseventaddterminal.cpp	/^bool ESEventAddTerminal::keyPressEvent(QKeyEvent *event) {$/;"	f	class:ESEventAddTerminal
keyPressEvent	editor/esevent/eseventinterface.cpp	/^bool ESEventInterface::keyPressEvent(QKeyEvent *event) {$/;"	f	class:ESEventInterface
keyPressEvent	editor/graphicspart/parttext.cpp	/^void PartText::keyPressEvent(QKeyEvent *event) {$/;"	f	class:PartText
keyPressEvent	editor/graphicspart/parttextfield.cpp	/^void PartTextField::keyPressEvent(QKeyEvent *event) {$/;"	f	class:PartTextField
keyReleaseEvent	diagram.cpp	/^void Diagram::keyReleaseEvent(QKeyEvent *e) {$/;"	f	class:Diagram
keyReleaseEvent	diagramview.cpp	/^void DiagramView::keyReleaseEvent(QKeyEvent *e) {$/;"	f	class:DiagramView
keyReleaseEvent	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::keyReleaseEvent(QKeyEvent *e) {$/;"	f	class:ElementPrimitiveDecorator
key_	ui/elementinfopartwidget.h	/^		QString key_;$/;"	m	class:ElementInfoPartWidget
keys	diagramcontext.cpp	/^QList<QString> DiagramContext::keys(DiagramContext::KeyOrder order) const {$/;"	f	class:DiagramContext
keys_movement_	editor/elementprimitivedecorator.h	/^	QPointF keys_movement_;           \/\/\/< Movement applied to our decorated items using the arrow keys$/;"	m	class:ElementPrimitiveDecorator
kind	qetgraphicsitem/element.h	/^		enum kind {Simple = 1,$/;"	g	class:Element
kindInformations	qetgraphicsitem/element.h	/^		DiagramContext  kindInformations       () const             {return kind_informations_;}	\/\/@kind_information_ is used to store more information$/;"	f	class:Element
kind_informations_	qetgraphicsitem/element.h	/^		DiagramContext element_informations_, kind_informations_;$/;"	m	class:Element
label	richtext/ui_addlinkdialog.h	/^    QLabel *label;$/;"	m	class:Ui_AddLinkDialog
label	titleblock/dimensionwidget.cpp	/^QLabel *TitleBlockDimensionWidget::label() const {$/;"	f	class:TitleBlockDimensionWidget
label	titleblock/helpercell.h	/^	QString label;               \/\/\/< Label displayed in this cell$/;"	m	class:HelperCell
label	titleblockcell.h	/^	NamesList label;                   \/\/\/< Label displayed by the cell$/;"	m	class:TitleBlockCell
label	ui/ui_addlinkdialog.h	/^    QLabel *label;$/;"	m	class:Ui_AddLinkDialog
label	ui/ui_autonumselectorwidget.h	/^    QLabel *label;$/;"	m	class:Ui_AutonumSelectorWidget
label	ui/ui_conductorpropertieswidget.h	/^    QLabel *label;$/;"	m	class:Ui_ConductorPropertiesWidget
label	ui/ui_dialogwaiting.h	/^    QLabel *label;$/;"	m	class:Ui_DialogWaiting
label	ui/ui_elementpropertieseditorwidget.h	/^    QLabel *label;$/;"	m	class:Ui_ElementPropertiesEditorWidget
label	ui/ui_linksingleelementwidget.h	/^    QLabel *label;$/;"	m	class:Ui_LinkSingleElementWidget
label	ui/ui_masterpropertieswidget.h	/^    QLabel *label;$/;"	m	class:Ui_MasterPropertiesWidget
label	ui/ui_potentialtextsdialog.h	/^    QLabel *label;$/;"	m	class:Ui_PotentialTextsDialog
label	ui/ui_xrefpropertieswidget.h	/^    QLabel *label;$/;"	m	class:Ui_XRefPropertiesWidget
labelTitle	ui/ui_dialogwaiting.h	/^    QLabel *labelTitle;$/;"	m	class:Ui_DialogWaiting
labelValueInformationString	titleblock/templatecellwidget.cpp	/^QString TitleBlockTemplateCellWidget::labelValueInformationString() const {$/;"	f	class:TitleBlockTemplateCellWidget
label_	elementdialog.h	/^	QString label_;$/;"	m	class:ElementDialog
label_	qetgraphicsitem/reportelement.h	/^	QString          label_;$/;"	m	class:ReportElement
label_	ui/ui_elementinfopartwidget.h	/^    QLabel *label_;$/;"	m	class:Ui_ElementInfoPartWidget
label_	ui/ui_reportpropertiewidget.h	/^    QLabel *label_;$/;"	m	class:Ui_ReportPropertieWidget
label_2	richtext/ui_addlinkdialog.h	/^    QLabel *label_2;$/;"	m	class:Ui_AddLinkDialog
label_2	ui/ui_addlinkdialog.h	/^    QLabel *label_2;$/;"	m	class:Ui_AddLinkDialog
label_2	ui/ui_borderpropertieswidget.h	/^    QLabel *label_2;$/;"	m	class:Ui_BorderPropertiesWidget
label_2	ui/ui_conductorpropertieswidget.h	/^    QLabel *label_2;$/;"	m	class:Ui_ConductorPropertiesWidget
label_2	ui/ui_elementpropertieseditorwidget.h	/^    QLabel *label_2;$/;"	m	class:Ui_ElementPropertiesEditorWidget
label_2	ui/ui_masterpropertieswidget.h	/^    QLabel *label_2;$/;"	m	class:Ui_MasterPropertiesWidget
label_2	ui/ui_titleblockpropertieswidget.h	/^    QLabel *label_2;$/;"	m	class:Ui_TitleBlockPropertiesWidget
label_2	ui/ui_xrefpropertieswidget.h	/^    QLabel *label_2;$/;"	m	class:Ui_XRefPropertiesWidget
label_3	ui/ui_borderpropertieswidget.h	/^    QLabel *label_3;$/;"	m	class:Ui_BorderPropertiesWidget
label_3	ui/ui_conductorpropertieswidget.h	/^    QLabel *label_3;$/;"	m	class:Ui_ConductorPropertiesWidget
label_3	ui/ui_elementpropertieseditorwidget.h	/^    QLabel *label_3;$/;"	m	class:Ui_ElementPropertiesEditorWidget
label_3	ui/ui_titleblockpropertieswidget.h	/^    QLabel *label_3;$/;"	m	class:Ui_TitleBlockPropertiesWidget
label_3	ui/ui_xrefpropertieswidget.h	/^    QLabel *label_3;$/;"	m	class:Ui_XRefPropertiesWidget
label_4	ui/ui_borderpropertieswidget.h	/^    QLabel *label_4;$/;"	m	class:Ui_BorderPropertiesWidget
label_4	ui/ui_conductorpropertieswidget.h	/^    QLabel *label_4;$/;"	m	class:Ui_ConductorPropertiesWidget
label_4	ui/ui_elementpropertieseditorwidget.h	/^    QLabel *label_4;$/;"	m	class:Ui_ElementPropertiesEditorWidget
label_4	ui/ui_titleblockpropertieswidget.h	/^    QLabel *label_4;$/;"	m	class:Ui_TitleBlockPropertiesWidget
label_4	ui/ui_xrefpropertieswidget.h	/^    QLabel *label_4;$/;"	m	class:Ui_XRefPropertiesWidget
label_5	ui/ui_conductorpropertieswidget.h	/^    QLabel *label_5;$/;"	m	class:Ui_ConductorPropertiesWidget
label_5	ui/ui_elementpropertieseditorwidget.h	/^    QLabel *label_5;$/;"	m	class:Ui_ElementPropertiesEditorWidget
label_5	ui/ui_titleblockpropertieswidget.h	/^    QLabel *label_5;$/;"	m	class:Ui_TitleBlockPropertiesWidget
label_5	ui/ui_xrefpropertieswidget.h	/^    QLabel *label_5;$/;"	m	class:Ui_XRefPropertiesWidget
label_6	ui/ui_conductorpropertieswidget.h	/^    QLabel *label_6;$/;"	m	class:Ui_ConductorPropertiesWidget
label_6	ui/ui_titleblockpropertieswidget.h	/^    QLabel *label_6;$/;"	m	class:Ui_TitleBlockPropertiesWidget
label_7	ui/ui_conductorpropertieswidget.h	/^    QLabel *label_7;$/;"	m	class:Ui_ConductorPropertiesWidget
label_7	ui/ui_titleblockpropertieswidget.h	/^    QLabel *label_7;$/;"	m	class:Ui_TitleBlockPropertiesWidget
label_8	ui/ui_titleblockpropertieswidget.h	/^    QLabel *label_8;$/;"	m	class:Ui_TitleBlockPropertiesWidget
label_checkbox_	titleblock/templatecellwidget.h	/^	QCheckBox     *label_checkbox_;$/;"	m	class:TitleBlockTemplateCellWidget
label_detail	ui/ui_dialogwaiting.h	/^    QLabel *label_detail;$/;"	m	class:Ui_DialogWaiting
label_edit_	titleblock/templatecellwidget.h	/^	QPushButton   *label_edit_;$/;"	m	class:TitleBlockTemplateCellWidget
label_input_	titleblock/templatecellwidget.h	/^	QLineEdit     *label_input_;$/;"	m	class:TitleBlockTemplateCellWidget
label_layout	ui/ui_selectautonumw.h	/^    QHBoxLayout *label_layout;$/;"	m	class:Ui_SelectAutonumW
label_prj	ui/ui_diagramselection.h	/^    QLabel *label_prj;$/;"	m	class:Ui_diagramselection
landscape_	qetprintpreviewdialog.h	/^	QAction *landscape_;$/;"	m	class:QETPrintPreviewDialog
langDir	qetarguments.cpp	/^QString QETArguments::langDir() const {$/;"	f	class:QETArguments
langDirSpecified	qetarguments.cpp	/^bool QETArguments::langDirSpecified() const {$/;"	f	class:QETArguments
langFromSetting	qetapp.cpp	/^QString QETApp::langFromSetting()$/;"	f	class:QETApp
lang_combo_box	configpages.h	/^	QComboBox *lang_combo_box;$/;"	m	class:GeneralConfigurationPage
lang_dir	qetapp.cpp	/^QString QETApp::lang_dir = QString();$/;"	m	class:QETApp	file:
lang_dir	qetapp.h	/^	static QString lang_dir; \/\/\/< Directory containing localization files.$/;"	m	class:QETApp
lang_dir_	qetarguments.h	/^	QString lang_dir_;$/;"	m	class:QETArguments
lang_group_box	configpages.h	/^	QGroupBox *lang_group_box;$/;"	m	class:GeneralConfigurationPage
lang_label	configpages.h	/^	QLabel *lang_label;$/;"	m	class:GeneralConfigurationPage
langs	nameslist.cpp	/^QList<QString> NamesList::langs() const {$/;"	f	class:NamesList
languagesPath	qetapp.cpp	/^QString QETApp::languagesPath()$/;"	f	class:QETApp
lastContextMenuCellIndex	titleblock/templateview.cpp	/^int TitleBlockTemplateView::lastContextMenuCellIndex() const {$/;"	f	class:TitleBlockTemplateView
lastPage	qetprintpreviewdialog.cpp	/^void QETPrintPreviewDialog::lastPage() {$/;"	f	class:QETPrintPreviewDialog
lastTabRemoved	projectview.cpp	/^void ProjectView::lastTabRemoved() {$/;"	f	class:ProjectView
last_context_menu_cell_	titleblock/templateview.h	/^	HelperCell *last_context_menu_cell_;$/;"	m	class:TitleBlockTemplateView
last_copied_	editor/elementscene.h	/^		QString last_copied_;$/;"	m	class:ElementScene
last_known_titleblock_width_	titleblocktemplaterenderer.h	/^	int last_known_titleblock_width_;$/;"	m	class:TitleBlockTemplateRenderer
last_page_	qetprintpreviewdialog.h	/^	QAction *last_page_;$/;"	m	class:QETPrintPreviewDialog
latest_pos_	editor/elementprimitivedecorator.h	/^	QPointF latest_pos_;           \/\/\/< Latest point involved within the current resizing operation$/;"	m	class:ElementPrimitiveDecorator
launchCategoriesManager	elementspanelwidget.cpp	/^int ElementsPanelWidget::launchCategoriesManager() {$/;"	f	class:ElementsPanelWidget
launchCategoryEditor	elementspanelwidget.cpp	/^void ElementsPanelWidget::launchCategoryEditor(const ElementsLocation &location) {$/;"	f	class:ElementsPanelWidget
launchElementEditor	elementspanelwidget.cpp	/^void ElementsPanelWidget::launchElementEditor(const ElementsLocation &location) {$/;"	f	class:ElementsPanelWidget
layout_	projectview.h	/^	QVBoxLayout *layout_;$/;"	m	class:ProjectView
length	conductorsegment.cpp	/^qreal ConductorSegment::length() const {$/;"	f	class:ConductorSegment
length	conductorsegmentprofile.h	/^	qreal length;$/;"	m	class:ConductorSegmentProfile
length	qetgraphicsitem/conductor.cpp	/^qreal Conductor::length() const{$/;"	f	class:Conductor
lengthRange	titleblocktemplate.cpp	/^int TitleBlockTemplate::lengthRange(int start, int end, const QList<int> &lengths_list) const {$/;"	f	class:TitleBlockTemplate
letter	diagramposition.h	/^	QString letter()const {return letter_;}$/;"	f	class:DiagramPosition
letter_	diagramposition.h	/^	QString letter_;$/;"	m	class:DiagramPosition
license	qet.cpp	/^QString QET::license() {$/;"	f	class:QET
licenseTab	aboutqet.cpp	/^QWidget *AboutQET::licenseTab() const {$/;"	f	class:AboutQET
line	richtext/ui_addlinkdialog.h	/^    QFrame *line;$/;"	m	class:Ui_AddLinkDialog
line	ui/ui_addlinkdialog.h	/^    QFrame *line;$/;"	m	class:Ui_AddLinkDialog
lineContainsPoint	qet.cpp	/^bool QET::lineContainsPoint(const QLineF &line, const QPointF &point) {$/;"	f	class:QET
lineStyle	editor/graphicspart/customelementgraphicpart.h	/^		LineStyle lineStyle    () const {return _linestyle;}$/;"	f	class:CustomElementGraphicPart
lineWeight	editor/graphicspart/customelementgraphicpart.h	/^		LineWeight lineWeight    () const {return _lineweight;}$/;"	f	class:CustomElementGraphicPart
line_edit	ui/ui_elementinfopartwidget.h	/^    QLineEdit *line_edit;$/;"	m	class:Ui_ElementInfoPartWidget
line_edit	ui/ui_reportpropertiewidget.h	/^    QLineEdit *line_edit;$/;"	m	class:Ui_ReportPropertieWidget
line_style	editor/styleeditor.h	/^		QComboBox *filling_color, *outline_color, *size_weight, *line_style;$/;"	m	class:StyleEditor
lines	diagramfoliolist.h	/^	virtual QList<QLineF *> lines() const		{return list_lines_;}$/;"	f	class:DiagramFolioList
lines	qetgraphicsitem/customelement.cpp	/^QList<QLineF *> CustomElement::lines() const {$/;"	f	class:CustomElement
linkToElement	qetgraphicsitem/element.h	/^		virtual void linkToElement     (Element *) {}$/;"	f	class:Element
linkToElement	qetgraphicsitem/masterelement.cpp	/^void MasterElement::linkToElement(Element *elmt) {	$/;"	f	class:MasterElement
linkToElement	qetgraphicsitem/reportelement.cpp	/^void ReportElement::linkToElement(Element * elmt)$/;"	f	class:ReportElement
linkToElement	qetgraphicsitem/slaveelement.cpp	/^void SlaveElement::linkToElement(Element *elmt) {$/;"	f	class:SlaveElement
linkType	qetgraphicsitem/element.h	/^		virtual int linkType() const {return link_type_;} \/\/ @return the linkable type$/;"	f	class:Element
linkType	qetgraphicsitem/ghostelement.h	/^	virtual int linkType() const {return Simple;}$/;"	f	class:GhostElement
link_button	ui/ui_masterpropertieswidget.h	/^    QPushButton *link_button;$/;"	m	class:Ui_MasterPropertiesWidget
link_type_	qetgraphicsitem/element.h	/^		kind              link_type_;$/;"	m	class:Element
linkedElements	qetgraphicsitem/element.h	/^inline QList <Element *> Element::linkedElements() {$/;"	f	class:Element
linked_list	ui/ui_masterpropertieswidget.h	/^    QListWidget *linked_list;$/;"	m	class:Ui_MasterPropertiesWidget
listDrawings	qeticons.cpp	/^		QIcon listDrawings;$/;"	m	namespace:QET::Icons	file:
listOfVariables	titleblocktemplate.cpp	/^QStringList TitleBlockTemplate::listOfVariables() {$/;"	f	class:TitleBlockTemplate
list_	elementdialog.h	/^	ElementsCategoriesList *list_;$/;"	m	class:ElementDialog
list_	recentfiles.h	/^	QList<QString> list_;$/;"	m	class:RecentFiles
list_arcs_	qetgraphicsitem/customelement.h	/^	QList<QVector<qreal> *> list_arcs_;$/;"	m	class:CustomElement
list_circles_	qetgraphicsitem/customelement.h	/^	QList<QRectF *> list_circles_;$/;"	m	class:CustomElement
list_diagram_	ui/diagramselection.h	/^	QList<Diagram *> list_diagram_;$/;"	m	class:diagramselection
list_lines_	diagramfoliolist.h	/^	QList<QLineF *> list_lines_;$/;"	m	class:DiagramFolioList
list_lines_	qetgraphicsitem/customelement.h	/^	QList<QLineF *> list_lines_;$/;"	m	class:CustomElement
list_of_DiagramSelected	ui/diagramselection.cpp	/^QList<Diagram *> diagramselection::list_of_DiagramSelected() {$/;"	f	class:diagramselection
list_polygons_	qetgraphicsitem/customelement.h	/^	QList<QVector<QPointF> *> list_polygons_;$/;"	m	class:CustomElement
list_rectangles_	diagramfoliolist.h	/^	QList<QRectF *> list_rectangles_;$/;"	m	class:DiagramFolioList
list_rectangles_	qetgraphicsitem/customelement.h	/^	QList<QRectF *> list_rectangles_;$/;"	m	class:CustomElement
list_terminals	qetgraphicsitem/customelement.h	/^	QList<Terminal *> list_terminals;$/;"	m	class:CustomElement
list_texts_	qetgraphicsitem/customelement.h	/^	QList<ElementTextItem *> list_texts_;$/;"	m	class:CustomElement
loadCell	titleblocktemplate.cpp	/^void TitleBlockTemplate::loadCell(const QDomElement &cell_element) {$/;"	f	class:TitleBlockTemplate
loadCells	titleblocktemplate.cpp	/^bool TitleBlockTemplate::loadCells(const QDomElement &xml_element) {$/;"	f	class:TitleBlockTemplate
loadContent	editor/elementscene.cpp	/^ElementContent ElementScene::loadContent(const QDomDocument &xml_document, QString *error_message) {$/;"	f	class:ElementScene
loadContent	xmlelementscategory.cpp	/^void XmlElementsCategory::loadContent(const QDomElement &xml_element) {$/;"	f	class:XmlElementsCategory
loadContentFromCell	titleblockcell.cpp	/^void TitleBlockCell::loadContentFromCell(const TitleBlockCell &other_cell) {$/;"	f	class:TitleBlockCell
loadContentFromXml	titleblockcell.cpp	/^void TitleBlockCell::loadContentFromXml(const QDomElement &cell_element) {$/;"	f	class:TitleBlockCell
loadDiagrams	projectview.cpp	/^void ProjectView::loadDiagrams() {$/;"	f	class:ProjectView
loadFromXmlElement	titleblocktemplate.cpp	/^bool TitleBlockTemplate::loadFromXmlElement(const QDomElement &xml_element) {$/;"	f	class:TitleBlockTemplate
loadFromXmlFile	titleblocktemplate.cpp	/^bool TitleBlockTemplate::loadFromXmlFile(const QString &filepath) {$/;"	f	class:TitleBlockTemplate
loadGrid	titleblocktemplate.cpp	/^bool TitleBlockTemplate::loadGrid(const QDomElement &xml_element) {$/;"	f	class:TitleBlockTemplate
loadInformation	titleblocktemplate.cpp	/^void TitleBlockTemplate::loadInformation(const QDomElement &xml_element) {$/;"	f	class:TitleBlockTemplate
loadLogo	titleblocktemplate.cpp	/^bool TitleBlockTemplate::loadLogo(const QDomElement &xml_element) {$/;"	f	class:TitleBlockTemplate
loadLogos	titleblocktemplate.cpp	/^bool TitleBlockTemplate::loadLogos(const QDomElement &xml_element, bool reset) {$/;"	f	class:TitleBlockTemplate
loadNames	fileelementscategory.cpp	/^void FileElementsCategory::loadNames() {$/;"	f	class:FileElementsCategory
loadPageSetupForCurrentPrinter	diagramprintdialog.cpp	/^void DiagramPrintDialog::loadPageSetupForCurrentPrinter() {$/;"	f	class:DiagramPrintDialog
loadTemplate	titleblock/templateview.cpp	/^void TitleBlockTemplateView::loadTemplate(TitleBlockTemplate *tbt) {$/;"	f	class:TitleBlockTemplateView
load_TableDiagram	ui/diagramselection.cpp	/^void diagramselection::load_TableDiagram() {$/;"	f	class:diagramselection
loadingFinished	elementspanelwidget.cpp	/^void ElementsPanelWidget::loadingFinished() {$/;"	f	class:ElementsPanelWidget
loading_progress_	elementspanel.h	/^	int loading_progress_;                         \/\/\/< used to track the loading progress of elements collections$/;"	m	class:ElementsPanel
local_server_	qetsingleapplication.h	/^	QLocalServer *local_server_;$/;"	m	class:QETSingleApplication
locale	elementscollectioncache.cpp	/^QString ElementsCollectionCache::locale() const {$/;"	f	class:ElementsCollectionCache
locale_	elementscollectioncache.h	/^	QString locale_;                \/\/\/< Locale to be used when dealing with names$/;"	m	class:ElementsCollectionCache
location	editor/qetelementeditor.h	/^inline ElementsLocation QETElementEditor::location() const {$/;"	f	class:QETElementEditor
location	elementdefinition.cpp	/^ElementsLocation ElementDefinition::location() {$/;"	f	class:ElementDefinition
location	elementdialog.cpp	/^ElementsLocation ElementDialog::location() const {$/;"	f	class:ElementDialog
location	elementscategory.cpp	/^ElementsLocation ElementsCategory::location() {$/;"	f	class:ElementsCategory
location	elementscollection.cpp	/^ElementsLocation ElementsCollection::location() {$/;"	f	class:ElementsCollection
location	qetgraphicsitem/customelement.h	/^inline ElementsLocation CustomElement::location() const {$/;"	f	class:CustomElement
location	titleblock/qettemplateeditor.cpp	/^TitleBlockTemplateLocation QETTitleBlockTemplateEditor::location() const {$/;"	f	class:QETTitleBlockTemplateEditor
location	titleblock/templatelocationchooser.cpp	/^TitleBlockTemplateLocation TitleBlockTemplateLocationChooser::location() const {$/;"	f	class:TitleBlockTemplateLocationChooser
location	titleblock/templatescollection.cpp	/^TitleBlockTemplateLocation TitleBlockTemplatesFilesCollection::location(const QString &template_name) {$/;"	f	class:TitleBlockTemplatesFilesCollection
location	titleblock/templatescollection.cpp	/^TitleBlockTemplateLocation TitleBlockTemplatesProjectCollection::location(const QString &template_name) {$/;"	f	class:TitleBlockTemplatesProjectCollection
locationChanged	elementdialog.cpp	/^void ElementDialog::locationChanged(const ElementsLocation &new_loc) {$/;"	f	class:ElementDialog
locationFromString	elementslocation.cpp	/^ElementsLocation ElementsLocation::locationFromString(const QString &string) {$/;"	f	class:ElementsLocation
locationFromString	titleblock/templatelocation.cpp	/^TitleBlockTemplateLocation TitleBlockTemplateLocation::locationFromString(const QString &loc_str) {$/;"	f	class:TitleBlockTemplateLocation
location_	editor/qetelementeditor.h	/^	ElementsLocation location_;$/;"	m	class:QETElementEditor
location_	elementdialog.h	/^	ElementsLocation location_;$/;"	m	class:ElementDialog
location_	qetgraphicsitem/customelement.h	/^	ElementsLocation location_;$/;"	m	class:CustomElement
location_	titleblock/qettemplateeditor.h	/^	TitleBlockTemplateLocation location_;$/;"	m	class:QETTitleBlockTemplateEditor
logoType	titleblocktemplate.cpp	/^QString TitleBlockTemplate::logoType(const QString &logo_name) const {$/;"	f	class:TitleBlockTemplate
logo_box_	titleblock/templatelogomanager.h	/^	QGroupBox *logo_box_;                  \/\/\/< current logo properties box$/;"	m	class:TitleBlockTemplateLogoManager
logo_input_	titleblock/templatecellwidget.h	/^	QComboBox   *logo_input_;$/;"	m	class:TitleBlockTemplateCellWidget
logo_label_	titleblock/templatecellwidget.h	/^	QLabel      *logo_label_;$/;"	m	class:TitleBlockTemplateCellWidget
logo_manager_	titleblock/qettemplateeditor.h	/^	TitleBlockTemplateLogoManager *logo_manager_;$/;"	m	class:QETTitleBlockTemplateEditor
logo_name_	titleblock/templatelogomanager.h	/^	QLineEdit *logo_name_;                 \/\/\/< current logo name$/;"	m	class:TitleBlockTemplateLogoManager
logo_name_label_	titleblock/templatelogomanager.h	/^	QLabel *logo_name_label_;              \/\/\/< "name:" label$/;"	m	class:TitleBlockTemplateLogoManager
logo_reference	titleblockcell.h	/^	QString logo_reference;            \/\/\/< Logo displayed by this cell, it it is a logo cell$/;"	m	class:TitleBlockCell
logo_type_	titleblock/templatelogomanager.h	/^	QLabel *logo_type_;                    \/\/\/< current logo type$/;"	m	class:TitleBlockTemplateLogoManager
logos	titleblocktemplate.cpp	/^QList<QString> TitleBlockTemplate::logos() const {$/;"	f	class:TitleBlockTemplate
logos_label_	titleblock/templatelogomanager.h	/^	QLabel *logos_label_;                  \/\/\/< simple displayed label$/;"	m	class:TitleBlockTemplateLogoManager
logos_view_	titleblock/templatelogomanager.h	/^	QListWidget *logos_view_;              \/\/\/< area showing the logos$/;"	m	class:TitleBlockTemplateLogoManager
longuestConductorInPotential	qetgraphicsitem/conductor.cpp	/^Conductor * longuestConductorInPotential(Conductor *conductor, bool all_diagram) {$/;"	f
low_zoom_drawing	qetgraphicsitem/customelement.h	/^	QPicture low_zoom_drawing;$/;"	m	class:CustomElement
lsew_	ui/elementpropertieswidget.h	/^		LinkSingleElementWidget *lsew_;$/;"	m	class:elementpropertieswidget
lwi_hash	ui/masterpropertieswidget.h	/^	QHash <QListWidgetItem *, Element *> lwi_hash;$/;"	m	class:MasterPropertiesWidget
m_P1	qetgraphicsitem/qetshapeitem.h	/^	QPointF		 m_P1, m_P2;$/;"	m	class:QetShapeItem
m_P2	qetgraphicsitem/qetshapeitem.h	/^	QPointF		 m_P1, m_P2;$/;"	m	class:QetShapeItem
m_abort	dvevent/dveventinterface.h	/^		bool m_abort;$/;"	m	class:DVEventInterface
m_abort	editor/esevent/eseventinterface.h	/^		bool m_running, m_abort;$/;"	m	class:ESEventInterface
m_add_item_actions_group	qetdiagrameditor.h	/^		QActionGroup m_add_item_actions_group; \/\/\/Action related to adding (add text image shape...)$/;"	m	class:QETDiagramEditor
m_add_item_toolBar	qetdiagrameditor.h	/^		QToolBar *m_add_item_toolBar;$/;"	m	class:QETDiagramEditor
m_align_center_action	richtext/richtexteditor.cpp	/^    QAction *m_align_center_action;$/;"	m	class:qdesigner_internal::RichTextEditorToolBar	file:
m_align_justify_action	richtext/richtexteditor.cpp	/^    QAction *m_align_justify_action;$/;"	m	class:qdesigner_internal::RichTextEditorToolBar	file:
m_align_left_action	richtext/richtexteditor.cpp	/^    QAction *m_align_left_action;$/;"	m	class:qdesigner_internal::RichTextEditorToolBar	file:
m_align_right_action	richtext/richtexteditor.cpp	/^    QAction *m_align_right_action;$/;"	m	class:qdesigner_internal::RichTextEditorToolBar	file:
m_anim_group	diagramcommands.h	/^	QParallelAnimationGroup *m_anim_group;$/;"	m	class:MoveElementsCommand
m_apply_all_cb	ui/ui_conductorpropertiesdialog.h	/^    QCheckBox *m_apply_all_cb;$/;"	m	class:Ui_ConductorPropertiesDialog
m_arc	editor/esevent/eseventaddarc.h	/^		PartArc *m_arc;$/;"	m	class:ESEventAddArc
m_asw	ui/diagrampropertiesdialog.h	/^		AutonumSelectorWidget *m_asw;$/;"	m	class:DiagramPropertiesDialog
m_author_le	ui/ui_titleblockpropertieswidget.h	/^    QLineEdit *m_author_le;$/;"	m	class:Ui_TitleBlockPropertiesWidget
m_auto_conductor	qetdiagrameditor.h	/^		QAction *m_auto_conductor;   \/\/\/< Enable\/Disable the use of auto conductor$/;"	m	class:QETDiagramEditor
m_auto_conductor	qetproject.h	/^	bool m_auto_conductor;$/;"	m	class:QETProject
m_autonum_layout	ui/ui_conductorpropertieswidget.h	/^    QVBoxLayout *m_autonum_layout;$/;"	m	class:Ui_ConductorPropertiesWidget
m_available_autonum_cb	ui/ui_autonumselectorwidget.h	/^    QComboBox *m_available_autonum_cb;$/;"	m	class:Ui_AutonumSelectorWidget
m_base_type_cb	ui/ui_elementpropertieseditorwidget.h	/^    QComboBox *m_base_type_cb;$/;"	m	class:Ui_ElementPropertiesEditorWidget
m_basic_type	editor/ui/elementpropertieseditorwidget.h	/^	QString &m_basic_type;$/;"	m	class:ElementPropertiesEditorWidget
m_bold_action	richtext/richtexteditor.cpp	/^    QAction *m_bold_action;$/;"	m	class:qdesigner_internal::RichTextEditorToolBar	file:
m_bounding_rect	qetgraphicsitem/commentitem.h	/^		QRectF   m_bounding_rect;$/;"	m	class:CommentItem
m_bounding_rect	qetgraphicsitem/crossrefitem.h	/^	QRectF		   m_bounding_rect;$/;"	m	class:CrossRefItem
m_buttonBox	ui/ui_elementpropertieseditorwidget.h	/^    QDialogButtonBox *m_buttonBox;$/;"	m	class:Ui_ElementPropertiesEditorWidget
m_button_group	ui/elementselectorwidget.h	/^	QButtonGroup               *m_button_group;$/;"	m	class:ElementSelectorWidget
m_buttons_layout	ui/ui_potentialtextsdialog.h	/^    QVBoxLayout *m_buttons_layout;$/;"	m	class:Ui_PotentialTextsDialog
m_cep_list	editor/styleeditor.h	/^		QList <CustomElementPart *> m_cep_list;$/;"	m	class:StyleEditor
m_closed	editor/graphicspart/partpolygon.h	/^		bool m_closed;$/;"	m	class:PartPolygon
m_color	richtext/richtexteditor.cpp	/^    QColor m_color;$/;"	m	class:qdesigner_internal::ColorAction	file:
m_color_action	richtext/richtexteditor.cpp	/^    ColorAction *m_color_action;$/;"	m	class:qdesigner_internal::RichTextEditorToolBar	file:
m_color_pb	ui/ui_conductorpropertieswidget.h	/^    QPushButton *m_color_pb;$/;"	m	class:Ui_ConductorPropertiesWidget
m_columns_width_sp	ui/ui_borderpropertieswidget.h	/^    QSpinBox *m_columns_width_sp;$/;"	m	class:Ui_BorderPropertiesWidget
m_colums_count_sp	ui/ui_borderpropertieswidget.h	/^    QSpinBox *m_colums_count_sp;$/;"	m	class:Ui_BorderPropertiesWidget
m_comment	qetgraphicsitem/commentitem.h	/^		QString  m_comment;$/;"	m	class:CommentItem
m_comment_item	qetgraphicsitem/simpleelement.h	/^		CommentItem *m_comment_item;$/;"	m	class:SimpleElement
m_conductor	ui/potentialtextsdialog.h	/^		Conductor *m_conductor;$/;"	m	class:PotentialTextsDialog
m_conductor_autonum	qetproject.h	/^	QHash <QString, NumerotationContext> m_conductor_autonum;$/;"	m	class:QETProject
m_conductors_autonum_name	diagram.h	/^		QString m_conductors_autonum_name;$/;"	m	class:Diagram
m_context	ui/selectautonumw.h	/^		NumerotationContext m_context;$/;"	m	class:SelectAutonumW
m_context_cb	projectconfigpages.h	/^		QComboBox      *m_context_cb;$/;"	m	class:ProjectAutoNumConfigPage
m_cpw	ui/conductorpropertiesdialog.h	/^		ConductorPropertiesWidget *m_cpw;$/;"	m	class:ConductorPropertiesDialog
m_cross_properties_gb	ui/ui_xrefpropertieswidget.h	/^    QGroupBox *m_cross_properties_gb;$/;"	m	class:Ui_XRefPropertiesWidget
m_current_date_rb	ui/ui_titleblockpropertieswidget.h	/^    QRadioButton *m_current_date_rb;$/;"	m	class:Ui_TitleBlockPropertiesWidget
m_date_edit	ui/ui_titleblockpropertieswidget.h	/^    QDateEdit *m_date_edit;$/;"	m	class:Ui_TitleBlockPropertiesWidget
m_date_now_pb	ui/ui_titleblockpropertieswidget.h	/^    QPushButton *m_date_now_pb;$/;"	m	class:Ui_TitleBlockPropertiesWidget
m_dc	editor/ui/elementpropertieseditorwidget.h	/^	DiagramContext &m_dc;$/;"	m	class:ElementPropertiesEditorWidget
m_dcw	ui/titleblockpropertieswidget.h	/^		DiagramContextWidget *m_dcw;$/;"	m	class:TitleBlockPropertiesWidget
m_default_xref_properties	qetproject.h	/^	QHash <QString, XRefProperties> m_default_xref_properties;$/;"	m	class:QETProject
m_delay_prefix_le	ui/ui_xrefpropertieswidget.h	/^    QLineEdit *m_delay_prefix_le;$/;"	m	class:Ui_XRefPropertiesWidget
m_depth_ag	editor/qetelementeditor.h	/^	QActionGroup *parts, *m_zoom_ag, *m_depth_ag;$/;"	m	class:QETElementEditor
m_diagram	conductorautonumerotation.h	/^		Diagram            *m_diagram;$/;"	m	class:ConductorAutoNumerotation
m_diagram	diagramcommands.h	/^		Diagram *m_diagram;$/;"	m	class:AddItemCommand
m_diagram	dvevent/dveventinterface.h	/^		Diagram *m_diagram;$/;"	m	class:DVEventInterface
m_diagram	ui/diagrampropertiesdialog.h	/^		Diagram               *m_diagram;$/;"	m	class:DiagramPropertiesDialog
m_display	properties/xrefproperties.h	/^	DisplayHas m_display;$/;"	m	class:XRefProperties
m_display_columns_cb	ui/ui_borderpropertieswidget.h	/^    QCheckBox *m_display_columns_cb;$/;"	m	class:Ui_BorderPropertiesWidget
m_display_gb	ui/ui_xrefpropertieswidget.h	/^    QGroupBox *m_display_gb;$/;"	m	class:Ui_XRefPropertiesWidget
m_display_has_contacts_rb	ui/ui_xrefpropertieswidget.h	/^    QRadioButton *m_display_has_contacts_rb;$/;"	m	class:Ui_XRefPropertiesWidget
m_display_has_cross_rb	ui/ui_xrefpropertieswidget.h	/^    QRadioButton *m_display_has_cross_rb;$/;"	m	class:Ui_XRefPropertiesWidget
m_display_rows_cb	ui/ui_borderpropertieswidget.h	/^    QCheckBox *m_display_rows_cb;$/;"	m	class:Ui_BorderPropertiesWidget
m_draw_help_line	qetgraphicsitem/terminal.h	/^		bool               m_draw_help_line;$/;"	m	class:Terminal
m_drawed_contacts	qetgraphicsitem/crossrefitem.h	/^	int			   m_drawed_contacts;$/;"	m	class:CrossRefItem
m_drawing	qetgraphicsitem/crossrefitem.h	/^	QPicture	   m_drawing, m_hdr_no_ctc, m_hdr_nc_ctc;$/;"	m	class:CrossRefItem
m_dv	dvevent/dveventinterface.h	/^		DiagramView *m_dv;$/;"	m	class:DVEventInterface
m_earth_cb	ui/ui_conductorpropertieswidget.h	/^    QCheckBox *m_earth_cb;$/;"	m	class:Ui_ConductorPropertiesWidget
m_edit_autonum_pb	ui/ui_autonumselectorwidget.h	/^    QPushButton *m_edit_autonum_pb;$/;"	m	class:Ui_AutonumSelectorWidget
m_edit_properties	editor/qetelementeditor.h	/^	QAction *edit_delete, *edit_size_hs, *edit_names, *edit_author, *m_edit_properties;$/;"	m	class:QETElementEditor
m_editor	editor/esevent/eseventinterface.h	/^		QETElementEditor *m_editor;$/;"	m	class:ESEventInterface
m_editor	richtext/richtexteditor.cpp	/^    QPointer<RichTextEditor> m_editor;$/;"	m	class:qdesigner_internal::RichTextEditorToolBar	file:
m_editor	richtext/richtexteditor.cpp	/^    RichTextEditor *m_editor;$/;"	m	class:qdesigner_internal::AddLinkDialog	file:
m_editor	richtext/richtexteditor_p.h	/^    RichTextEditor *m_editor;$/;"	m	class:qdesigner_internal::RichTextEditorDialog
m_element	qetgraphicsitem/commentitem.h	/^		Element *m_element;$/;"	m	class:CommentItem
m_element	qetgraphicsitem/crossrefitem.h	/^	Element		  *m_element; \/\/element to display the cross reference$/;"	m	class:CrossRefItem
m_element	undocommand/changeelementinformationcommand.h	/^		Element       *m_element;$/;"	m	class:ChangeElementInformationCommand
m_ellipse	editor/esevent/eseventaddellipse.h	/^		PartEllipse *m_ellipse;$/;"	m	class:ESEventAddEllipse
m_elmt_kindInfo	editor/elementscene.h	/^		DiagramContext m_elmt_kindInfo;$/;"	m	class:ElementScene
m_elmt_type	editor/elementscene.h	/^		QString m_elmt_type;$/;"	m	class:ElementScene
m_event_interface	diagramview.h	/^		DVEventInterface *m_event_interface;$/;"	m	class:DiagramView
m_event_interface	editor/elementscene.h	/^		ESEventInterface *m_event_interface;$/;"	m	class:ElementScene
m_file_actions_group	qetdiagrameditor.h	/^		QActionGroup m_file_actions_group; \/\/\/Actions related to file (open, close, save...)$/;"	m	class:QETDiagramEditor
m_file_le	ui/ui_titleblockpropertieswidget.h	/^    QLineEdit *m_file_le;$/;"	m	class:Ui_TitleBlockPropertiesWidget
m_first_move	qetgraphicsitem/diagramtextitem.h	/^	bool m_first_move;$/;"	m	class:DiagramTextItem
m_fixed_date_rb	ui/ui_titleblockpropertieswidget.h	/^    QRadioButton *m_fixed_date_rb;$/;"	m	class:Ui_TitleBlockPropertiesWidget
m_folio_le	ui/ui_titleblockpropertieswidget.h	/^    QLineEdit *m_folio_le;$/;"	m	class:Ui_TitleBlockPropertiesWidget
m_font_size_input	richtext/richtexteditor.cpp	/^    QComboBox *m_font_size_input;$/;"	m	class:qdesigner_internal::RichTextEditorToolBar	file:
m_grey_bg_cb	ui/ui_borderpropertieswidget.h	/^    QCheckBox *m_grey_bg_cb;$/;"	m	class:Ui_BorderPropertiesWidget
m_hdr_nc_ctc	qetgraphicsitem/crossrefitem.h	/^	QPicture	   m_drawing, m_hdr_no_ctc, m_hdr_nc_ctc;$/;"	m	class:CrossRefItem
m_hdr_no_ctc	qetgraphicsitem/crossrefitem.h	/^	QPicture	   m_drawing, m_hdr_no_ctc, m_hdr_nc_ctc;$/;"	m	class:CrossRefItem
m_help_horiz	dvevent/dveventaddshape.h	/^		QGraphicsLineItem       *m_help_horiz, *m_help_verti;$/;"	m	class:DVEventAddShape
m_help_horiz	editor/esevent/eseventinterface.h	/^		QGraphicsLineItem *m_help_horiz, *m_help_verti;$/;"	m	class:ESEventInterface
m_help_line	qetgraphicsitem/terminal.h	/^		QGraphicsLineItem *m_help_line;$/;"	m	class:Terminal
m_help_line_a	qetgraphicsitem/terminal.h	/^		QGraphicsLineItem *m_help_line_a;$/;"	m	class:Terminal
m_help_verti	dvevent/dveventaddshape.h	/^		QGraphicsLineItem       *m_help_horiz, *m_help_verti;$/;"	m	class:DVEventAddShape
m_help_verti	editor/esevent/eseventinterface.h	/^		QGraphicsLineItem *m_help_horiz, *m_help_verti;$/;"	m	class:ESEventInterface
m_horiz_select	ui/conductorpropertieswidget.h	/^		QTextOrientationSpinBoxWidget *m_verti_select, *m_horiz_select;$/;"	m	class:ConductorPropertiesWidget
m_hovered	editor/graphicspart/customelementgraphicpart.h	/^		bool m_hovered;$/;"	m	class:CustomElementGraphicPart
m_hovered	qetgraphicsitem/qetshapeitem.h	/^	bool         m_hovered;$/;"	m	class:QetShapeItem
m_image	dvevent/dveventaddimage.h	/^		DiagramImageItem *m_image;$/;"	m	class:DVEventAddImage
m_image_action	richtext/richtexteditor.cpp	/^    QAction *m_image_action;$/;"	m	class:qdesigner_internal::RichTextEditorToolBar	file:
m_info	editor/editorcommands.h	/^	QList <DiagramContext> m_info;$/;"	m	class:ChangePropertiesCommand
m_inverted	editor/esevent/eseventaddarc.h	/^		bool     m_inverted;$/;"	m	class:ESEventAddArc
m_is_added	dvevent/dveventaddimage.h	/^		bool m_is_added;$/;"	m	class:DVEventAddImage
m_italic_action	richtext/richtexteditor.cpp	/^    QAction *m_italic_action;$/;"	m	class:qdesigner_internal::RichTextEditorToolBar	file:
m_item	diagramcommands.h	/^		QGI m_item;$/;"	m	class:AddItemCommand
m_label	projectconfigpages.h	/^		QLabel         *m_label;$/;"	m	class:ProjectAutoNumConfigPage
m_line	editor/esevent/eseventaddline.h	/^		PartLine *m_line;$/;"	m	class:ESEventAddLine
m_line	editor/graphicspart/partline.h	/^		QLineF m_line;$/;"	m	class:PartLine
m_line_style_cb	ui/ui_conductorpropertieswidget.h	/^    QComboBox *m_line_style_cb;$/;"	m	class:Ui_ConductorPropertiesWidget
m_link_action	richtext/richtexteditor.cpp	/^    QAction *m_link_action;$/;"	m	class:qdesigner_internal::RichTextEditorToolBar	file:
m_link_hash	diagramcommands.h	/^	QHash <Element *, QList<Element *> > m_link_hash;$/;"	m	class:DeleteElementsCommand
m_list_diagram	nomenclature.h	/^	QList<Diagram *> m_list_diagram;$/;"	m	class:nomenclature
m_master_gb	ui/ui_elementpropertieseditorwidget.h	/^    QGroupBox *m_master_gb;$/;"	m	class:Ui_ElementPropertiesEditorWidget
m_master_type_cb	ui/ui_elementpropertieseditorwidget.h	/^    QComboBox *m_master_type_cb;$/;"	m	class:Ui_ElementPropertiesEditorWidget
m_mouse_over	qetgraphicsitem/element.h	/^		bool m_mouse_over;$/;"	m	class:Element
m_mouse_pos	editor/esevent/eseventaddarc.h	/^		QPointF  m_origin, m_mouse_pos;$/;"	m	class:ESEventAddArc
m_mouse_to_origin_movement	qetgraphicsitem/diagramtextitem.h	/^	QPointF m_mouse_to_origin_movement;$/;"	m	class:DiagramTextItem
m_multi_gb	ui/ui_conductorpropertieswidget.h	/^    QGroupBox *m_multi_gb;$/;"	m	class:Ui_ConductorPropertiesWidget
m_multi_rb	ui/ui_conductorpropertieswidget.h	/^    QRadioButton *m_multi_rb;$/;"	m	class:Ui_ConductorPropertiesWidget
m_neutral_cb	ui/ui_conductorpropertieswidget.h	/^    QCheckBox *m_neutral_cb;$/;"	m	class:Ui_ConductorPropertiesWidget
m_new_info	undocommand/changeelementinformationcommand.h	/^					   m_new_info;$/;"	m	class:ChangeElementInformationCommand
m_new_pos	editor/esevent/eseventaddellipse.h	/^		QPointF      m_origin, m_new_pos;$/;"	m	class:ESEventAddEllipse
m_next_pb	ui/ui_selectautonumw.h	/^    QPushButton *m_next_pb;$/;"	m	class:Ui_SelectAutonumW
m_no_date_rb	ui/ui_titleblockpropertieswidget.h	/^    QRadioButton *m_no_date_rb;$/;"	m	class:Ui_TitleBlockPropertiesWidget
m_number_ctc	ui/ui_elementpropertieseditorwidget.h	/^    QSpinBox *m_number_ctc;$/;"	m	class:Ui_ElementPropertiesEditorWidget
m_old_info	undocommand/changeelementinformationcommand.h	/^		DiagramContext m_old_info,$/;"	m	class:ChangeElementInformationCommand
m_one_text_per_folio	conductorproperties.h	/^	bool m_one_text_per_folio;$/;"	m	class:ConductorProperties
m_one_text_per_folio_cb	ui/ui_conductorpropertieswidget.h	/^    QCheckBox *m_one_text_per_folio_cb;$/;"	m	class:Ui_ConductorPropertiesWidget
m_orientation	editor/graphicspart/partterminal.h	/^		Qet::Orientation m_orientation;$/;"	m	class:PartTerminal
m_origin	editor/esevent/eseventaddarc.h	/^		QPointF  m_origin, m_mouse_pos;$/;"	m	class:ESEventAddArc
m_origin	editor/esevent/eseventaddellipse.h	/^		QPointF      m_origin, m_new_pos;$/;"	m	class:ESEventAddEllipse
m_parent	nomenclature.h	/^	QWidget *m_parent;$/;"	m	class:nomenclature
m_parent_undo	conductorautonumerotation.h	/^		QUndoCommand       *m_parent_undo;$/;"	m	class:ConductorAutoNumerotation
m_part_list	editor/styleeditor.h	/^		QList <CustomElementGraphicPart *> m_part_list;$/;"	m	class:StyleEditor
m_pen_cb	ui/ui_conductorpropertieswidget.h	/^    QCheckBox *m_pen_cb;$/;"	m	class:Ui_ConductorPropertiesWidget
m_phase_cb	ui/ui_conductorpropertieswidget.h	/^    QCheckBox *m_phase_cb;$/;"	m	class:Ui_ConductorPropertiesWidget
m_phase_sb	ui/ui_conductorpropertieswidget.h	/^    QSpinBox *m_phase_sb;$/;"	m	class:Ui_ConductorPropertiesWidget
m_phase_slider	ui/ui_conductorpropertieswidget.h	/^    QSlider *m_phase_slider;$/;"	m	class:Ui_ConductorPropertiesWidget
m_picture	qetgraphicsitem/commentitem.h	/^		QPicture m_picture;$/;"	m	class:CommentItem
m_polygon	editor/esevent/eseventaddpolygon.h	/^		PartPolygon *m_polygon;$/;"	m	class:ESEventAddPolygon
m_polygon	editor/graphicspart/partpolygon.h	/^		QPolygonF m_polygon;$/;"	m	class:PartPolygon
m_polygon	qetgraphicsitem/qetshapeitem.h	/^	QPolygonF	 m_polygon;$/;"	m	class:QetShapeItem
m_pos	diagramcommands.h	/^		QPointF m_pos;$/;"	m	class:AddItemCommand
m_power_prefix_le	ui/ui_xrefpropertieswidget.h	/^    QLineEdit *m_power_prefix_le;$/;"	m	class:Ui_XRefPropertiesWidget
m_prefix	properties/xrefproperties.h	/^	QHash <QString, QString> m_prefix;$/;"	m	class:XRefProperties
m_prefix_keys	properties/xrefproperties.h	/^	QStringList m_prefix_keys;$/;"	m	class:XRefProperties
m_preview_label	ui/ui_conductorpropertieswidget.h	/^    QLabel *m_preview_label;$/;"	m	class:Ui_ConductorPropertiesWidget
m_previous_pb	ui/ui_selectautonumw.h	/^    QPushButton *m_previous_pb;$/;"	m	class:Ui_SelectAutonumW
m_previous_type_index	ui/xrefpropertieswidget.h	/^	int m_previous_type_index;$/;"	m	class:XRefPropertiesWidget
m_project	configpages.h	/^	QETProject                 *m_project; \/\/\/< Project to edit propertie$/;"	m	class:NewDiagramPage
m_project	nomenclature.h	/^	QETProject *m_project;$/;"	m	class:nomenclature
m_properties	qetgraphicsitem/crossrefitem.h	/^	XRefProperties m_properties;$/;"	m	class:CrossRefItem
m_properties	ui/borderpropertieswidget.h	/^		BorderProperties m_properties;$/;"	m	class:BorderPropertiesWidget
m_properties	ui/conductorpropertieswidget.h	/^		ConductorProperties m_properties;$/;"	m	class:ConductorPropertiesWidget
m_properties	ui/xrefpropertieswidget.h	/^	QHash <QString, XRefProperties> m_properties;$/;"	m	class:XRefPropertiesWidget
m_properties_dialog	ui/projectpropertiesdialog.h	/^		ConfigDialog *m_properties_dialog;$/;"	m	class:ProjectPropertiesDialog
m_qgi	diagramcommands.h	/^	QetGraphicsItem *m_qgi;$/;"	m	class:ItemResizerCommand
m_rect	editor/esevent/eseventaddrect.h	/^		PartRectangle *m_rect;$/;"	m	class:ESEventAddRect
m_rect	editor/graphicspart/abstractpartellipse.h	/^		QRectF m_rect;$/;"	m	class:AbstractPartEllipse
m_rect	editor/graphicspart/partrectangle.h	/^		QRectF m_rect;$/;"	m	class:PartRectangle
m_remove_pb	projectconfigpages.h	/^		QPushButton	   *m_remove_pb;$/;"	m	class:ProjectAutoNumConfigPage
m_row_column_actions_group	qetdiagrameditor.h	/^		QActionGroup m_row_column_actions_group; \/\/\/ Action related to add\/remove rows\/column in diagram$/;"	m	class:QETDiagramEditor
m_rows_count_sp	ui/ui_borderpropertieswidget.h	/^    QSpinBox *m_rows_count_sp;$/;"	m	class:Ui_BorderPropertiesWidget
m_rows_height_sp	ui/ui_borderpropertieswidget.h	/^    QSpinBox *m_rows_height_sp;$/;"	m	class:Ui_BorderPropertiesWidget
m_running	dvevent/dveventinterface.h	/^		bool m_running;$/;"	m	class:DVEventInterface
m_running	editor/esevent/eseventinterface.h	/^		bool m_running, m_abort;$/;"	m	class:ESEventInterface
m_saw	projectconfigpages.h	/^		SelectAutonumW *m_saw;$/;"	m	class:ProjectAutoNumConfigPage
m_scene	editor/esevent/eseventinterface.h	/^		ElementScene     *m_scene;$/;"	m	class:ESEventInterface
m_select_actions_group	qetdiagrameditor.h	/^		QActionGroup m_select_actions_group; \/\/\/Action related to global selections$/;"	m	class:QETDiagramEditor
m_selected_text	ui/potentialtextsdialog.h	/^		QString m_selected_text;$/;"	m	class:PotentialTextsDialog
m_selection_actions_group	qetdiagrameditor.h	/^		QActionGroup m_selection_actions_group; \/\/\/Action related to edit a selected item$/;"	m	class:QETDiagramEditor
m_shapeStyle	qetgraphicsitem/qetshapeitem.h	/^	Qt::PenStyle m_shapeStyle;$/;"	m	class:QetShapeItem
m_shapeType	qetgraphicsitem/qetshapeitem.h	/^	ShapeType    m_shapeType;$/;"	m	class:QetShapeItem
m_shape_item	dvevent/dveventaddshape.h	/^		QetShapeItem            *m_shape_item;$/;"	m	class:DVEventAddShape
m_shape_path	qetgraphicsitem/crossrefitem.h	/^	QPainterPath   m_shape_path;$/;"	m	class:CrossRefItem
m_shape_type	dvevent/dveventaddshape.h	/^		QetShapeItem::ShapeType  m_shape_type;$/;"	m	class:DVEventAddShape
m_show_power_cb	ui/ui_xrefpropertieswidget.h	/^    QCheckBox *m_show_power_cb;$/;"	m	class:Ui_XRefPropertiesWidget
m_show_power_ctc	properties/xrefproperties.h	/^	bool m_show_power_ctc;$/;"	m	class:XRefProperties
m_show_text	conductorproperties.h	/^	bool m_show_text;$/;"	m	class:ConductorProperties
m_show_text_cb	ui/ui_conductorpropertieswidget.h	/^    QCheckBox *m_show_text_cb;$/;"	m	class:Ui_ConductorPropertiesWidget
m_signal_mapper	ui/potentialtextsdialog.h	/^		QSignalMapper *m_signal_mapper;$/;"	m	class:PotentialTextsDialog
m_simplifyRichText	richtext/richtexteditor.cpp	/^    bool m_simplifyRichText;$/;"	m	class:qdesigner_internal::RichTextEditor	file:
m_simplify_richtext_action	richtext/richtexteditor.cpp	/^    QAction *m_simplify_richtext_action;$/;"	m	class:qdesigner_internal::RichTextEditorToolBar	file:
m_single_gb	ui/ui_conductorpropertieswidget.h	/^    QGroupBox *m_single_gb;$/;"	m	class:Ui_ConductorPropertiesWidget
m_single_rb	ui/ui_conductorpropertieswidget.h	/^    QRadioButton *m_single_rb;$/;"	m	class:Ui_ConductorPropertiesWidget
m_slave_gb	ui/ui_elementpropertieseditorwidget.h	/^    QGroupBox *m_slave_gb;$/;"	m	class:Ui_ElementPropertiesEditorWidget
m_snap_to	properties/xrefproperties.h	/^	SnapTo m_snap_to;$/;"	m	class:XRefProperties
m_snap_to_cb	ui/ui_xrefpropertieswidget.h	/^    QComboBox *m_snap_to_cb;$/;"	m	class:Ui_XRefPropertiesWidget
m_span_angle	editor/graphicspart/abstractpartellipse.h	/^		int m_span_angle;$/;"	m	class:AbstractPartEllipse
m_start_angle	editor/graphicspart/abstractpartellipse.h	/^		int m_start_angle;$/;"	m	class:AbstractPartEllipse
m_state	richtext/richtexteditor_p.h	/^    State m_state;$/;"	m	class:qdesigner_internal::RichTextEditorDialog
m_state_cb	ui/ui_elementpropertieseditorwidget.h	/^    QComboBox *m_state_cb;$/;"	m	class:Ui_ElementPropertiesEditorWidget
m_switch_prefix_le	ui/ui_xrefpropertieswidget.h	/^    QLineEdit *m_switch_prefix_le;$/;"	m	class:Ui_XRefPropertiesWidget
m_tab2_vlayout	ui/ui_titleblockpropertieswidget.h	/^    QVBoxLayout *m_tab2_vlayout;$/;"	m	class:Ui_TitleBlockPropertiesWidget
m_tab_widget	richtext/richtexteditor_p.h	/^    QTabWidget     *m_tab_widget;$/;"	m	class:qdesigner_internal::RichTextEditorDialog
m_tagg	editor/graphicspart/parttextfield.h	/^	QString m_tagg;$/;"	m	class:PartTextField
m_tagg_cb	editor/textfieldeditor.h	/^	QComboBox *m_tagg_cb;$/;"	m	class:TextFieldEditor
m_tbt_cb	ui/ui_titleblockpropertieswidget.h	/^    QComboBox *m_tbt_cb;$/;"	m	class:Ui_TitleBlockPropertiesWidget
m_tbt_collection	ui/titleblockpropertieswidget.h	/^		TitleBlockTemplatesCollection *m_tbt_collection;$/;"	m	class:TitleBlockPropertiesWidget
m_tbt_duplicate	ui/titleblockpropertieswidget.h	/^		QAction *m_tbt_edit, *m_tbt_duplicate;$/;"	m	class:TitleBlockPropertiesWidget
m_tbt_edit	ui/titleblockpropertieswidget.h	/^		QAction *m_tbt_edit, *m_tbt_duplicate;$/;"	m	class:TitleBlockPropertiesWidget
m_tbt_gb	ui/ui_titleblockpropertieswidget.h	/^    QGroupBox *m_tbt_gb;$/;"	m	class:Ui_TitleBlockPropertiesWidget
m_tbt_hlayout	ui/ui_titleblockpropertieswidget.h	/^    QHBoxLayout *m_tbt_hlayout;$/;"	m	class:Ui_TitleBlockPropertiesWidget
m_tbt_label	ui/ui_titleblockpropertieswidget.h	/^    QLabel *m_tbt_label;$/;"	m	class:Ui_TitleBlockPropertiesWidget
m_tbt_menu	ui/titleblockpropertieswidget.h	/^		QMenu *m_tbt_menu;$/;"	m	class:TitleBlockPropertiesWidget
m_tbt_pb	ui/ui_titleblockpropertieswidget.h	/^    QPushButton *m_tbt_pb;$/;"	m	class:Ui_TitleBlockPropertiesWidget
m_terminal	editor/esevent/eseventaddterminal.h	/^		PartTerminal *m_terminal;$/;"	m	class:ESEventAddTerminal
m_text	diagramcommands.h	/^	QString m_text;$/;"	m	class:ItemResizerCommand
m_text	editor/esevent/eseventaddtext.h	/^		PartText *m_text;$/;"	m	class:ESEventAddText
m_text	editor/esevent/eseventaddtextfield.h	/^		PartTextField *m_text;$/;"	m	class:ESEventAddTextField
m_text_angle_gl	ui/ui_conductorpropertieswidget.h	/^    QGridLayout *m_text_angle_gl;$/;"	m	class:Ui_ConductorPropertiesWidget
m_text_edit	richtext/richtexteditor_p.h	/^    QTextEdit      *m_text_edit;$/;"	m	class:qdesigner_internal::RichTextEditorDialog
m_text_field	qetgraphicsitem/reportelement.h	/^	ElementTextItem *m_text_field;$/;"	m	class:ReportElement
m_text_le	ui/ui_conductorpropertieswidget.h	/^    QLineEdit *m_text_le;$/;"	m	class:Ui_ConductorPropertiesWidget
m_text_parent	qetgraphicsitem/commentitem.h	/^		bool     m_text_parent;$/;"	m	class:CommentItem
m_text_size_sb	ui/ui_conductorpropertieswidget.h	/^    QSpinBox *m_text_size_sb;$/;"	m	class:Ui_ConductorPropertiesWidget
m_texts	ui/potentialtextsdialog.h	/^		QMultiMap <int, QString> m_texts;$/;"	m	class:PotentialTextsDialog
m_title_le	ui/ui_titleblockpropertieswidget.h	/^    QLineEdit *m_title_le;$/;"	m	class:Ui_TitleBlockPropertiesWidget
m_type	editor/editorcommands.h	/^	QList <QString> m_type;$/;"	m	class:ChangePropertiesCommand
m_type_cb	ui/ui_elementpropertieseditorwidget.h	/^    QComboBox *m_type_cb;$/;"	m	class:Ui_ElementPropertiesEditorWidget
m_type_cb	ui/ui_xrefpropertieswidget.h	/^    QComboBox *m_type_cb;$/;"	m	class:Ui_XRefPropertiesWidget
m_type_gb	ui/ui_conductorpropertieswidget.h	/^    QGroupBox *m_type_gb;$/;"	m	class:Ui_ConductorPropertiesWidget
m_ui	richtext/richtexteditor.cpp	/^    Ui::AddLinkDialog *m_ui;$/;"	m	class:qdesigner_internal::AddLinkDialog	file:
m_underline_action	richtext/richtexteditor.cpp	/^    QAction *m_underline_action;$/;"	m	class:qdesigner_internal::RichTextEditorToolBar	file:
m_update_preview_pb	ui/ui_conductorpropertieswidget.h	/^    QPushButton *m_update_preview_pb;$/;"	m	class:Ui_ConductorPropertiesWidget
m_valign_sub_action	richtext/richtexteditor.cpp	/^    QAction *m_valign_sub_action;$/;"	m	class:qdesigner_internal::RichTextEditorToolBar	file:
m_valign_sup_action	richtext/richtexteditor.cpp	/^    QAction *m_valign_sup_action;$/;"	m	class:qdesigner_internal::RichTextEditorToolBar	file:
m_verti_select	ui/conductorpropertieswidget.h	/^		QTextOrientationSpinBoxWidget *m_verti_select, *m_horiz_select;$/;"	m	class:ConductorPropertiesWidget
m_zoom_action_toolBar	qetdiagrameditor.h	/^		QList <QAction *> m_zoom_action_toolBar; \/\/\/Only zoom action must displayed in the toolbar$/;"	m	class:QETDiagramEditor
m_zoom_actions_group	qetdiagrameditor.h	/^		QActionGroup m_zoom_actions_group;	     \/\/\/Action related to zoom for diagram$/;"	m	class:QETDiagramEditor
m_zoom_ag	editor/qetelementeditor.h	/^	QActionGroup *parts, *m_zoom_ag, *m_depth_ag;$/;"	m	class:QETElementEditor
main	main.cpp	/^int main (int argc, char **argv)$/;"	f
main_bar	qetdiagrameditor.h	/^		QToolBar *main_bar;$/;"	m	class:QETDiagramEditor
main_layout	editor/styleeditor.h	/^		QVBoxLayout *main_layout;$/;"	m	class:StyleEditor
main_layout	ui/ui_conductorpropertiesdialog.h	/^    QVBoxLayout *main_layout;$/;"	m	class:Ui_ConductorPropertiesDialog
main_layout	ui/ui_linksingleelementwidget.h	/^    QVBoxLayout *main_layout;$/;"	m	class:Ui_LinkSingleElementWidget
main_toolbar	editor/qetelementeditor.h	/^	QToolBar *parts_toolbar, *main_toolbar, *view_toolbar, *depth_toolbar, *element_toolbar;$/;"	m	class:QETElementEditor
makeCellsSetFromGraphicsItems	titleblock/templateview.cpp	/^TitleBlockTemplateCellsSet TitleBlockTemplateView::makeCellsSetFromGraphicsItems(const QList<QGraphicsItem *> &items) const {$/;"	f	class:TitleBlockTemplateView
makeInterface	elementdialog.cpp	/^void ElementDialog::makeInterface() {$/;"	f	class:ElementDialog
makeItem	elementscategorieslist.cpp	/^QTreeWidgetItem *ElementsCategoriesList::makeItem(QET::ItemType type, QTreeWidgetItem *parent, const QString &label, const QIcon &icon) {$/;"	f	class:ElementsCategoriesList
makeItem	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::makeItem(QET::ItemType type, QTreeWidgetItem *parent, const QString &label, const QIcon &icon) {$/;"	f	class:GenericPanel
makePrettyToolTip	titleblock/templateview.cpp	/^QString TitleBlockTemplateView::makePrettyToolTip(const QString &string) {$/;"	f	class:TitleBlockTemplateView
manage	qgimanager.cpp	/^void QGIManager::manage(QGraphicsItem *qgi) {$/;"	f	class:QGIManager
manage	qgimanager.cpp	/^void QGIManager::manage(const QList<QGraphicsItem *> &qgis) {$/;"	f	class:QGIManager
managePrimitivesGroups	editor/elementscene.cpp	/^void ElementScene::managePrimitivesGroups() {$/;"	f	class:ElementScene
managed_template_	titleblock/templatelogomanager.h	/^	TitleBlockTemplate *managed_template_; \/\/\/< title block template which this class manages logos$/;"	m	class:TitleBlockTemplateLogoManager
manages	qgimanager.cpp	/^bool QGIManager::manages(QGraphicsItem *qgi) const {$/;"	f	class:QGIManager
mapMovementFromParent	qetgraphicsitem/diagramtextitem.cpp	/^QPointF DiagramTextItem::mapMovementFromParent(const QPointF &movement) const {$/;"	f	class:DiagramTextItem
mapMovementFromScene	qetgraphicsitem/diagramtextitem.cpp	/^QPointF DiagramTextItem::mapMovementFromScene(const QPointF &movement) const {$/;"	f	class:DiagramTextItem
mapMovementToParent	qetgraphicsitem/diagramtextitem.cpp	/^QPointF DiagramTextItem::mapMovementToParent(const QPointF &movement) const {$/;"	f	class:DiagramTextItem
mapMovementToScene	qetgraphicsitem/diagramtextitem.cpp	/^QPointF DiagramTextItem::mapMovementToScene(const QPointF &movement) const {$/;"	f	class:DiagramTextItem
mapPoints	editor/graphicspart/customelementpart.cpp	/^QList<QPointF> CustomElementPart::mapPoints(const QRectF &initial_selection_rect, const QRectF &new_selection_rect, const QList<QPointF> &points) {$/;"	f	class:CustomElementPart
mapper_	recentfiles.h	/^	QSignalMapper *mapper_;$/;"	m	class:RecentFiles
margin	diagram.cpp	/^const qreal Diagram::margin = 5.0;$/;"	m	class:Diagram	file:
margin	diagram.h	/^		static const qreal margin;$/;"	m	class:Diagram
margin	editor/graphicspart/parttext.cpp	/^QPointF PartText::margin() const {$/;"	f	class:PartText
margin	editor/graphicspart/parttextfield.cpp	/^QPointF PartTextField::margin() const {$/;"	f	class:PartTextField
markItemAsContainer	genericpanel.cpp	/^void GenericPanel::markItemAsContainer(QTreeWidgetItem *qtwi) {$/;"	f	class:GenericPanel
markItemAsUnused	genericpanel.cpp	/^void GenericPanel::markItemAsUnused(QTreeWidgetItem *qtwi) {$/;"	f	class:GenericPanel
matchesCurrentFilter	elementspanel.cpp	/^bool ElementsPanel::matchesCurrentFilter(const QTreeWidgetItem *item) const {$/;"	f	class:ElementsPanel
matchesFilter	elementspanel.cpp	/^bool ElementsPanel::matchesFilter(const QTreeWidgetItem *item, QString filter) const {$/;"	f	class:ElementsPanel
maxTerminalsCount	qetgraphicsitem/fixedelement.cpp	/^int FixedElement::maxTerminalsCount() const {$/;"	f	class:FixedElement
maximumWidth	titleblocktemplate.cpp	/^int TitleBlockTemplate::maximumWidth() {$/;"	f	class:TitleBlockTemplate
mayPaste	titleblock/templateview.cpp	/^bool TitleBlockTemplateView::mayPaste() {$/;"	f	class:TitleBlockTemplateView
menu	recentfiles.cpp	/^QMenu *RecentFiles::menu() const {$/;"	f	class:RecentFiles
menu_	recentfiles.h	/^	QMenu *menu_;$/;"	m	class:RecentFiles
menu_actions_	qetmainwindow.h	/^	QHash<QMenu *, QAction *> menu_actions_; \/\/\/< Store actions retrieved when inserting menus$/;"	m	class:QETMainWindow
menu_systray	qetapp.h	/^	QMenu *menu_systray;$/;"	m	class:QETApp
mergeArea	titleblock/templatecellsset.cpp	/^TitleBlockTemplateCellsSet TitleBlockTemplateCellsSet::mergeArea(const QRectF &rect) const {$/;"	f	class:TitleBlockTemplateCellsSet
mergeAreaRect	titleblock/templatecellsset.cpp	/^QRectF TitleBlockTemplateCellsSet::mergeAreaRect() const {$/;"	f	class:TitleBlockTemplateCellsSet
mergeSelectedCells	titleblock/templateview.cpp	/^void TitleBlockTemplateView::mergeSelectedCells() {$/;"	f	class:TitleBlockTemplateView
mergeWith	titleblock/templatecommands.cpp	/^bool ModifyTitleBlockCellCommand::mergeWith(const QUndoCommand *command) {$/;"	f	class:ModifyTitleBlockCellCommand
merge_cells_	titleblock/qettemplateeditor.h	/^	QAction *undo_, *redo_, *cut_, *copy_, *paste_, *edit_logos_, *edit_info_, *add_row_, *add_col_, *merge_cells_, *split_cell_;$/;"	m	class:QETTitleBlockTemplateEditor
messageReceived	qetapp.cpp	/^void QETApp::messageReceived (const QString &message)$/;"	f	class:QETApp
middle	conductorsegment.cpp	/^QPointF ConductorSegment::middle() const {$/;"	f	class:ConductorSegment
middleSegment	qetgraphicsitem/conductor.cpp	/^ConductorSegment *Conductor::middleSegment() {$/;"	f	class:Conductor
minColumnsWidth	bordertitleblock.cpp	/^qreal BorderTitleBlock::minColumnsWidth() {$/;"	f	class:BorderTitleBlock
minNbColumns	bordertitleblock.cpp	/^int BorderTitleBlock::minNbColumns() {$/;"	f	class:BorderTitleBlock
minNbRows	bordertitleblock.cpp	/^int BorderTitleBlock::minNbRows() {$/;"	f	class:BorderTitleBlock
minRowsHeight	bordertitleblock.cpp	/^qreal BorderTitleBlock::minRowsHeight() {$/;"	f	class:BorderTitleBlock
minTerminalsCount	qetgraphicsitem/fixedelement.cpp	/^int FixedElement::minTerminalsCount() const {$/;"	f	class:FixedElement
min_title	editor/qetelementeditor.h	/^	QString min_title;$/;"	m	class:QETElementEditor
minimalBoundingRect	qetgraphicsitem/ghostelement.cpp	/^QRectF GhostElement::minimalBoundingRect() const {$/;"	f	class:GhostElement
minimumWidth	titleblocktemplate.cpp	/^int TitleBlockTemplate::minimumWidth() {$/;"	f	class:TitleBlockTemplate
mode_	elementdialog.h	/^	uint mode_;$/;"	m	class:ElementDialog
mode_edit	elementscategoryeditor.h	/^	bool mode_edit;$/;"	m	class:ElementsCategoryEditor
mode_selection	qetdiagrameditor.h	/^		QAction *mode_selection;     \/\/\/< Set edition mode$/;"	m	class:QETDiagramEditor
mode_visualise	qetdiagrameditor.h	/^		QAction *mode_visualise;     \/\/\/< Set visualisation mode$/;"	m	class:QETDiagramEditor
modificationTime	fileelementdefinition.cpp	/^QDateTime FileElementDefinition::modificationTime() const {$/;"	f	class:FileElementDefinition
modificationTime	xmlelementdefinition.cpp	/^QDateTime XmlElementDefinition::modificationTime() const {$/;"	f	class:XmlElementDefinition
modified_	qetproject.h	/^	bool modified_;$/;"	m	class:QETProject
modified_bounding_rect_	editor/elementprimitivedecorator.h	/^	QRectF modified_bounding_rect_; \/\/\/< new bounding rect, after the user moved or resized items$/;"	m	class:ElementPrimitiveDecorator
modified_cell_	titleblock/templatecommands.h	/^	TitleBlockCell *modified_cell_;       \/\/\/< modified cell$/;"	m	class:ModifyTitleBlockCellCommand
modified_path	qetgraphicsitem/conductor.h	/^	bool modified_path;$/;"	m	class:Conductor
mouseDoubleClickEvent	diagramview.cpp	/^void DiagramView::mouseDoubleClickEvent(QMouseEvent *e) {$/;"	f	class:DiagramView
mouseDoubleClickEvent	dvevent/dveventaddimage.cpp	/^bool DVEventAddImage::mouseDoubleClickEvent(QMouseEvent *event) {$/;"	f	class:DVEventAddImage
mouseDoubleClickEvent	dvevent/dveventaddshape.cpp	/^bool DVEventAddShape::mouseDoubleClickEvent(QMouseEvent *event)$/;"	f	class:DVEventAddShape
mouseDoubleClickEvent	dvevent/dveventinterface.cpp	/^bool DVEventInterface::mouseDoubleClickEvent(QMouseEvent *event) {$/;"	f	class:DVEventInterface
mouseDoubleClickEvent	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ElementPrimitiveDecorator
mouseDoubleClickEvent	editor/elementscene.cpp	/^void ElementScene::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ElementScene
mouseDoubleClickEvent	editor/esevent/eseventaddpolygon.cpp	/^bool ESEventAddPolygon::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddPolygon
mouseDoubleClickEvent	editor/esevent/eseventinterface.cpp	/^bool ESEventInterface::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventInterface
mouseDoubleClickEvent	editor/graphicspart/parttext.cpp	/^void PartText::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *e) {$/;"	f	class:PartText
mouseDoubleClickEvent	editor/graphicspart/parttextfield.cpp	/^void PartTextField::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *e) {$/;"	f	class:PartTextField
mouseDoubleClickEvent	qetgraphicsitem/commentitem.cpp	/^void CommentItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:CommentItem
mouseDoubleClickEvent	qetgraphicsitem/conductor.cpp	/^void Conductor::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *e) {$/;"	f	class:Conductor
mouseDoubleClickEvent	qetgraphicsitem/crossrefitem.cpp	/^void CrossRefItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:CrossRefItem
mouseDoubleClickEvent	qetgraphicsitem/diagramtextitem.cpp	/^void DiagramTextItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:DiagramTextItem
mouseDoubleClickEvent	qetgraphicsitem/elementtextitem.cpp	/^void ElementTextItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:ElementTextItem
mouseDoubleClickEvent	qetgraphicsitem/qetgraphicsitem.cpp	/^void QetGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *e) {$/;"	f	class:QetGraphicsItem
mouseDoubleClickEvent	qettabbar.cpp	/^void QETTabBar::mouseDoubleClickEvent(QMouseEvent *event) {$/;"	f	class:QETTabBar
mouseDoubleClickEvent	titleblock/helpercell.cpp	/^void HelperCell::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *) {$/;"	f	class:HelperCell
mouseMoveEvent	diagramview.cpp	/^void DiagramView::mouseMoveEvent(QMouseEvent *e) {$/;"	f	class:DiagramView
mouseMoveEvent	dvevent/dveventaddimage.cpp	/^bool DVEventAddImage::mouseMoveEvent(QMouseEvent *event) {$/;"	f	class:DVEventAddImage
mouseMoveEvent	dvevent/dveventaddshape.cpp	/^bool DVEventAddShape::mouseMoveEvent(QMouseEvent *event)$/;"	f	class:DVEventAddShape
mouseMoveEvent	dvevent/dveventinterface.cpp	/^bool DVEventInterface::mouseMoveEvent(QMouseEvent *event) {$/;"	f	class:DVEventInterface
mouseMoveEvent	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::mouseMoveEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ElementPrimitiveDecorator
mouseMoveEvent	editor/elementscene.cpp	/^void ElementScene::mouseMoveEvent(QGraphicsSceneMouseEvent *e) {$/;"	f	class:ElementScene
mouseMoveEvent	editor/elementview.cpp	/^void ElementView::mouseMoveEvent(QMouseEvent *e) {$/;"	f	class:ElementView
mouseMoveEvent	editor/esevent/eseventaddarc.cpp	/^bool ESEventAddArc::mouseMoveEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddArc
mouseMoveEvent	editor/esevent/eseventaddellipse.cpp	/^bool ESEventAddEllipse::mouseMoveEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddEllipse
mouseMoveEvent	editor/esevent/eseventaddline.cpp	/^bool ESEventAddLine::mouseMoveEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddLine
mouseMoveEvent	editor/esevent/eseventaddpolygon.cpp	/^bool ESEventAddPolygon::mouseMoveEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddPolygon
mouseMoveEvent	editor/esevent/eseventaddrect.cpp	/^bool ESEventAddRect::mouseMoveEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddRect
mouseMoveEvent	editor/esevent/eseventaddterminal.cpp	/^bool ESEventAddTerminal::mouseMoveEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddTerminal
mouseMoveEvent	editor/esevent/eseventaddtext.cpp	/^bool ESEventAddText::mouseMoveEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddText
mouseMoveEvent	editor/esevent/eseventaddtextfield.cpp	/^bool ESEventAddTextField::mouseMoveEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddTextField
mouseMoveEvent	editor/esevent/eseventinterface.cpp	/^bool ESEventInterface::mouseMoveEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventInterface
mouseMoveEvent	qetgraphicsitem/conductor.cpp	/^void Conductor::mouseMoveEvent(QGraphicsSceneMouseEvent *e) {$/;"	f	class:Conductor
mouseMoveEvent	qetgraphicsitem/conductortextitem.cpp	/^void ConductorTextItem::mouseMoveEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ConductorTextItem
mouseMoveEvent	qetgraphicsitem/diagramtextitem.cpp	/^void DiagramTextItem::mouseMoveEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:DiagramTextItem
mouseMoveEvent	qetgraphicsitem/element.cpp	/^void Element::mouseMoveEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:Element
mouseMoveEvent	qetgraphicsitem/elementtextitem.cpp	/^void ElementTextItem::mouseMoveEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ElementTextItem
mouseMoveEvent	qetgraphicsitem/qetgraphicsitem.cpp	/^void QetGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent *e) {$/;"	f	class:QetGraphicsItem
mouseMoveEvent	qetgraphicsitem/terminal.cpp	/^void Terminal::mouseMoveEvent(QGraphicsSceneMouseEvent *e) {$/;"	f	class:Terminal
mouseMoveEvent	qettabbar.cpp	/^void QETTabBar::mouseMoveEvent(QMouseEvent *event) {$/;"	f	class:QETTabBar
mouseMoveEvent	qtextorientationwidget.cpp	/^void QTextOrientationWidget::mouseMoveEvent(QMouseEvent *event) {$/;"	f	class:QTextOrientationWidget
mousePressEvent	diagramview.cpp	/^void DiagramView::mousePressEvent(QMouseEvent *e) {$/;"	f	class:DiagramView
mousePressEvent	dvevent/dveventaddimage.cpp	/^bool DVEventAddImage::mousePressEvent(QMouseEvent *event) {$/;"	f	class:DVEventAddImage
mousePressEvent	dvevent/dveventaddshape.cpp	/^bool DVEventAddShape::mousePressEvent(QMouseEvent *event)$/;"	f	class:DVEventAddShape
mousePressEvent	dvevent/dveventaddtext.cpp	/^bool DVEventAddText::mousePressEvent(QMouseEvent *event) {$/;"	f	class:DVEventAddText
mousePressEvent	dvevent/dveventinterface.cpp	/^bool DVEventInterface::mousePressEvent(QMouseEvent *event) {$/;"	f	class:DVEventInterface
mousePressEvent	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::mousePressEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ElementPrimitiveDecorator
mousePressEvent	editor/elementscene.cpp	/^void ElementScene::mousePressEvent(QGraphicsSceneMouseEvent *e) {$/;"	f	class:ElementScene
mousePressEvent	editor/elementview.cpp	/^void ElementView::mousePressEvent(QMouseEvent *e) {$/;"	f	class:ElementView
mousePressEvent	editor/esevent/eseventaddarc.cpp	/^bool ESEventAddArc::mousePressEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:ESEventAddArc
mousePressEvent	editor/esevent/eseventaddellipse.cpp	/^bool ESEventAddEllipse::mousePressEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddEllipse
mousePressEvent	editor/esevent/eseventaddline.cpp	/^bool ESEventAddLine::mousePressEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddLine
mousePressEvent	editor/esevent/eseventaddpolygon.cpp	/^bool ESEventAddPolygon::mousePressEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddPolygon
mousePressEvent	editor/esevent/eseventaddrect.cpp	/^bool ESEventAddRect::mousePressEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:ESEventAddRect
mousePressEvent	editor/esevent/eseventinterface.cpp	/^bool ESEventInterface::mousePressEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventInterface
mousePressEvent	qetgraphicsitem/conductor.cpp	/^void Conductor::mousePressEvent(QGraphicsSceneMouseEvent *e) {$/;"	f	class:Conductor
mousePressEvent	qetgraphicsitem/conductortextitem.cpp	/^void ConductorTextItem::mousePressEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ConductorTextItem
mousePressEvent	qetgraphicsitem/diagramtextitem.cpp	/^void DiagramTextItem::mousePressEvent (QGraphicsSceneMouseEvent *event) {$/;"	f	class:DiagramTextItem
mousePressEvent	qetgraphicsitem/qetgraphicsitem.cpp	/^void QetGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent *e)$/;"	f	class:QetGraphicsItem
mousePressEvent	qetgraphicsitem/terminal.cpp	/^void Terminal::mousePressEvent(QGraphicsSceneMouseEvent *e) {$/;"	f	class:Terminal
mousePressEvent	qettabbar.cpp	/^void QETTabBar::mousePressEvent(QMouseEvent *event) {$/;"	f	class:QETTabBar
mouseReleaseEvent	diagramview.cpp	/^void DiagramView::mouseReleaseEvent(QMouseEvent *e) {$/;"	f	class:DiagramView
mouseReleaseEvent	dvevent/dveventaddshape.cpp	/^bool DVEventAddShape::mouseReleaseEvent(QMouseEvent *event)$/;"	f	class:DVEventAddShape
mouseReleaseEvent	dvevent/dveventinterface.cpp	/^bool DVEventInterface::mouseReleaseEvent(QMouseEvent *event) {$/;"	f	class:DVEventInterface
mouseReleaseEvent	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::mouseReleaseEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ElementPrimitiveDecorator
mouseReleaseEvent	editor/elementscene.cpp	/^void ElementScene::mouseReleaseEvent(QGraphicsSceneMouseEvent *e) {$/;"	f	class:ElementScene
mouseReleaseEvent	editor/elementview.cpp	/^void ElementView::mouseReleaseEvent(QMouseEvent *e) {$/;"	f	class:ElementView
mouseReleaseEvent	editor/esevent/eseventaddarc.cpp	/^bool ESEventAddArc::mouseReleaseEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddArc
mouseReleaseEvent	editor/esevent/eseventaddellipse.cpp	/^bool ESEventAddEllipse::mouseReleaseEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddEllipse
mouseReleaseEvent	editor/esevent/eseventaddline.cpp	/^bool ESEventAddLine::mouseReleaseEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddLine
mouseReleaseEvent	editor/esevent/eseventaddpolygon.cpp	/^bool ESEventAddPolygon::mouseReleaseEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddPolygon
mouseReleaseEvent	editor/esevent/eseventaddrect.cpp	/^bool ESEventAddRect::mouseReleaseEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddRect
mouseReleaseEvent	editor/esevent/eseventaddterminal.cpp	/^bool ESEventAddTerminal::mouseReleaseEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddTerminal
mouseReleaseEvent	editor/esevent/eseventaddtext.cpp	/^bool ESEventAddText::mouseReleaseEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddText
mouseReleaseEvent	editor/esevent/eseventaddtextfield.cpp	/^bool ESEventAddTextField::mouseReleaseEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventAddTextField
mouseReleaseEvent	editor/esevent/eseventinterface.cpp	/^bool ESEventInterface::mouseReleaseEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ESEventInterface
mouseReleaseEvent	qetgraphicsitem/conductor.cpp	/^void Conductor::mouseReleaseEvent(QGraphicsSceneMouseEvent *e) {$/;"	f	class:Conductor
mouseReleaseEvent	qetgraphicsitem/conductortextitem.cpp	/^void ConductorTextItem::mouseReleaseEvent(QGraphicsSceneMouseEvent *e) {$/;"	f	class:ConductorTextItem
mouseReleaseEvent	qetgraphicsitem/diagramtextitem.cpp	/^void DiagramTextItem::mouseReleaseEvent (QGraphicsSceneMouseEvent *event) {$/;"	f	class:DiagramTextItem
mouseReleaseEvent	qetgraphicsitem/element.cpp	/^void Element::mouseReleaseEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:Element
mouseReleaseEvent	qetgraphicsitem/elementtextitem.cpp	/^void ElementTextItem::mouseReleaseEvent(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ElementTextItem
mouseReleaseEvent	qetgraphicsitem/qetgraphicsitem.cpp	/^void QetGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent *e) {$/;"	f	class:QetGraphicsItem
mouseReleaseEvent	qetgraphicsitem/terminal.cpp	/^void Terminal::mouseReleaseEvent(QGraphicsSceneMouseEvent *e)$/;"	f	class:Terminal
mouseReleaseEvent	qettabbar.cpp	/^void QETTabBar::mouseReleaseEvent(QMouseEvent *event) {$/;"	f	class:QETTabBar
mouseReleaseEvent	qtextorientationwidget.cpp	/^void QTextOrientationWidget::mouseReleaseEvent(QMouseEvent *event) {$/;"	f	class:QTextOrientationWidget
mouse_offset_	editor/elementprimitivedecorator.h	/^	QPointF mouse_offset_;         \/\/\/< Offset between the mouse position and the point to be snapped to grid when moving selection$/;"	m	class:ElementPrimitiveDecorator
mouse_to_origin_movement_	qetgraphicsitem/independenttextitem.h	/^	QPointF mouse_to_origin_movement_;$/;"	m	class:IndependentTextItem
mouse_to_origin_movement_	qetgraphicsitem/qetgraphicsitem.h	/^		QPointF mouse_to_origin_movement_;$/;"	m	class:QetGraphicsItem
movable_tabs_	qettabbar.h	/^	bool movable_tabs_;$/;"	m	class:QETTabBar
move	diagramcommands.cpp	/^void MoveElementsCommand::move(const QPointF &actual_movement) {$/;"	f	class:MoveElementsCommand
move	diagramcommands.cpp	/^void MoveElementsTextsCommand::move(const QPointF &actual_movement) {$/;"	f	class:MoveElementsTextsCommand
move	elementdefinition.cpp	/^ElementsCollectionItem *ElementDefinition::move(ElementsCategory *target_category, MoveElementsHandler *handler) {$/;"	f	class:ElementDefinition
move	elementdefinition.cpp	/^void ElementDefinition::move(MoveElementsDescription *mvt_desc) {$/;"	f	class:ElementDefinition
move	elementscategory.cpp	/^ElementsCollectionItem *ElementsCategory::move(ElementsCategory *target_category, MoveElementsHandler *handler) {$/;"	f	class:ElementsCategory
move	elementscategory.cpp	/^void ElementsCategory::move(MoveElementsDescription *mvt_desc) {$/;"	f	class:ElementsCategory
move	elementscollection.cpp	/^ElementsCollectionItem *ElementsCollection::move(ElementsCategory *, MoveElementsHandler *handler) {$/;"	f	class:ElementsCollection
moveColumn	titleblocktemplate.cpp	/^bool TitleBlockTemplate::moveColumn(int from, int to) {$/;"	f	class:TitleBlockTemplate
moveDiagramDown	elementspanelwidget.cpp	/^void ElementsPanelWidget::moveDiagramDown() {$/;"	f	class:ElementsPanelWidget
moveDiagramDown	projectview.cpp	/^void ProjectView::moveDiagramDown(Diagram *diagram) {$/;"	f	class:ProjectView
moveDiagramDown	projectview.cpp	/^void ProjectView::moveDiagramDown(DiagramView *diagram_view) {$/;"	f	class:ProjectView
moveDiagramDown	qetdiagrameditor.cpp	/^void QETDiagramEditor::moveDiagramDown(Diagram *diagram) {$/;"	f	class:QETDiagramEditor
moveDiagramDownx10	elementspanelwidget.cpp	/^void ElementsPanelWidget::moveDiagramDownx10() {$/;"	f	class:ElementsPanelWidget
moveDiagramDownx10	projectview.cpp	/^void ProjectView::moveDiagramDownx10(Diagram *diagram) {$/;"	f	class:ProjectView
moveDiagramDownx10	projectview.cpp	/^void ProjectView::moveDiagramDownx10(DiagramView *diagram_view) {$/;"	f	class:ProjectView
moveDiagramDownx10	qetdiagrameditor.cpp	/^void QETDiagramEditor::moveDiagramDownx10(Diagram *diagram) {$/;"	f	class:QETDiagramEditor
moveDiagramUp	elementspanelwidget.cpp	/^void ElementsPanelWidget::moveDiagramUp() {$/;"	f	class:ElementsPanelWidget
moveDiagramUp	projectview.cpp	/^void ProjectView::moveDiagramUp(Diagram *diagram) {$/;"	f	class:ProjectView
moveDiagramUp	projectview.cpp	/^void ProjectView::moveDiagramUp(DiagramView *diagram_view) {$/;"	f	class:ProjectView
moveDiagramUp	qetdiagrameditor.cpp	/^void QETDiagramEditor::moveDiagramUp(Diagram *diagram) {$/;"	f	class:QETDiagramEditor
moveDiagramUpx10	elementspanelwidget.cpp	/^void ElementsPanelWidget::moveDiagramUpx10() {$/;"	f	class:ElementsPanelWidget
moveDiagramUpx10	projectview.cpp	/^void ProjectView::moveDiagramUpx10(Diagram *diagram) {$/;"	f	class:ProjectView
moveDiagramUpx10	projectview.cpp	/^void ProjectView::moveDiagramUpx10(DiagramView *diagram_view) {$/;"	f	class:ProjectView
moveDiagramUpx10	qetdiagrameditor.cpp	/^void QETDiagramEditor::moveDiagramUpx10(Diagram *diagram) {$/;"	f	class:QETDiagramEditor
moveElements	elementspanelwidget.cpp	/^void ElementsPanelWidget::moveElements() {$/;"	f	class:ElementsPanelWidget
moveElements	elementspanelwidget.cpp	/^void ElementsPanelWidget::moveElements(ElementsCollectionItem *src, ElementsCollectionItem *dst) {$/;"	f	class:ElementsPanelWidget
movePointIntoPolygon	qetgraphicsitem/conductor.cpp	/^QPointF Conductor::movePointIntoPolygon(const QPointF &point, const QPainterPath &polygon) {$/;"	f	class:Conductor
moveRow	titleblocktemplate.cpp	/^bool TitleBlockTemplate::moveRow(int from, int to) {$/;"	f	class:TitleBlockTemplate
moveTab	qettabbar.cpp	/^void QETTabBar::moveTab(int src_tab, int dst_tab) {$/;"	f	class:QETTabBar
moveTab	qettabwidget.cpp	/^void QETTabWidget::moveTab(int from, int to) {$/;"	f	class:QETTabWidget
moveX	conductorsegment.cpp	/^void ConductorSegment::moveX(const qreal &dx) {$/;"	f	class:ConductorSegment
moveY	conductorsegment.cpp	/^void ConductorSegment::moveY(const qreal &dy) {$/;"	f	class:ConductorSegment
move_elements_	elementspanelwidget.h	/^	QAction *copy_elements_, *move_elements_, *cancel_elements_;$/;"	m	class:ElementsPanelWidget
moved_by_user_	qetgraphicsitem/conductortextitem.h	/^	bool moved_by_user_;$/;"	m	class:ConductorTextItem
moved_content_	elementsmover.h	/^	DiagramContent moved_content_;$/;"	m	class:ElementsMover
moved_parts	editor/editorcommands.h	/^	QList<QGraphicsItem *> moved_parts;$/;"	m	class:MovePartsCommand
moved_point	qetgraphicsitem/conductor.h	/^	int moved_point;$/;"	m	class:Conductor
moved_segment	qetgraphicsitem/conductor.h	/^	ConductorSegment *moved_segment;$/;"	m	class:Conductor
moved_tab_	qettabbar.h	/^	int  moved_tab_;$/;"	m	class:QETTabBar
moved_texts_	elementtextsmover.h	/^	QSet<ElementTextItem *> moved_texts_;$/;"	m	class:ElementTextsMover
movement	diagramcommands.h	/^		QPointF movement;$/;"	m	class:MoveElementsTextsCommand
movement	diagramcommands.h	/^	QPointF movement;$/;"	m	class:MoveElementsCommand
movement	editor/editorcommands.h	/^	QPointF movement;$/;"	m	class:MovePartsCommand
movementType	qetgraphicsitem/conductor.cpp	/^Qt::Corner Conductor::movementType(const QPointF &start, const QPointF &end) {$/;"	f	class:Conductor
movement_driver_	elementsmover.h	/^	QGraphicsItem *movement_driver_;$/;"	m	class:ElementsMover
movement_driver_	elementtextsmover.h	/^	QGraphicsItem *movement_driver_;$/;"	m	class:ElementTextsMover
movement_running_	elementsmover.h	/^	bool movement_running_;$/;"	m	class:ElementsMover
movement_running_	elementtextsmover.h	/^	bool movement_running_;$/;"	m	class:ElementTextsMover
moving_by_keys_	editor/elementprimitivedecorator.h	/^	bool moving_by_keys_;          \/\/\/< Whether we are currently moving our decorated items using the arrow keys$/;"	m	class:ElementPrimitiveDecorator
moving_point	qetgraphicsitem/conductor.h	/^	bool moving_point;$/;"	m	class:Conductor
moving_press_pos	editor/elementscene.h	/^		QPointF moving_press_pos;$/;"	m	class:ElementScene
moving_segment	qetgraphicsitem/conductor.h	/^	bool moving_segment;$/;"	m	class:Conductor
mpw_	ui/elementpropertieswidget.h	/^		MasterPropertiesWidget  *mpw_;$/;"	m	class:elementpropertieswidget
mustAbort	moveelementsdescription.cpp	/^bool MoveElementsDescription::mustAbort() const {$/;"	f	class:MoveElementsDescription
mustHighlightIntegratedElements	elementspanel.cpp	/^bool ElementsPanel::mustHighlightIntegratedElements() const {$/;"	f	class:ElementsPanel
mustIntegrateElement	diagramview.cpp	/^bool DiagramView::mustIntegrateElement(const ElementsLocation &location) const {$/;"	f	class:DiagramView
mustIntegrateTitleBlockTemplate	diagramview.cpp	/^bool DiagramView::mustIntegrateTitleBlockTemplate(const TitleBlockTemplateLocation &tbt_loc) const {$/;"	f	class:DiagramView
mustMoveTab	qettabbar.cpp	/^bool QETTabBar::mustMoveTab(int src_tab, int dst_tab, const QPoint &pos) const {$/;"	f	class:QETTabBar
mustShow	ui/elementinfopartwidget.cpp	/^bool ElementInfoPartWidget::mustShow() const  {$/;"	f	class:ElementInfoPartWidget
mustSnapToGrid	editor/elementprimitivedecorator.cpp	/^bool ElementPrimitiveDecorator::mustSnapToGrid(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ElementPrimitiveDecorator
must_export	exportdialog.h	/^		QCheckBox *must_export;$/;"	m	class:ExportDialog::ExportDiagramLine
must_highlight_	qetgraphicsitem/conductor.h	/^	Highlight must_highlight_;$/;"	m	class:Conductor
must_highlight_	qetgraphicsitem/element.h	/^		bool must_highlight_;$/;"	m	class:Element
must_highlight_angle_	qtextorientationwidget.h	/^	bool must_highlight_angle_;$/;"	m	class:QTextOrientationWidget
name	editor/graphicspart/partarc.h	/^		virtual QString name()    const { return(QObject::tr("arc", "element part name")); }$/;"	f	class:PartArc
name	editor/graphicspart/partellipse.h	/^		virtual QString name()    const { return(QObject::tr("ellipse", "element part name")); }$/;"	f	class:PartEllipse
name	editor/graphicspart/partline.h	/^		virtual QString name() const { return(QObject::tr("ligne", "element part name")); }$/;"	f	class:PartLine
name	editor/graphicspart/partpolygon.h	/^		virtual QString name() const { return(QObject::tr("polygone", "element part name")); }$/;"	f	class:PartPolygon
name	editor/graphicspart/partrectangle.h	/^		virtual QString name  () const { return(QObject::tr("rectangle", "element part name")); }$/;"	f	class:PartRectangle
name	editor/graphicspart/partterminal.h	/^		virtual QString name() const { return(QObject::tr("borne", "element part name")); }$/;"	f	class:PartTerminal
name	editor/graphicspart/parttext.h	/^	virtual QString name() const { return(QObject::tr("texte", "element part name")); }$/;"	f	class:PartText
name	editor/graphicspart/parttextfield.h	/^	virtual QString name() const { return(QObject::tr("champ de texte", "element part name")); }$/;"	f	class:PartTextField
name	elementscategory.cpp	/^QString ElementsCategory::name() const {$/;"	f	class:ElementsCategory
name	elementscollectioncache.cpp	/^QString ElementsCollectionCache::name() const {$/;"	f	class:ElementsCollectionCache
name	nameslist.cpp	/^QString NamesList::name(const QString &fallback_name) const {$/;"	f	class:NamesList
name	qetgraphicsitem/customelement.h	/^inline QString CustomElement::name() const {$/;"	f	class:CustomElement
name	qetgraphicsitem/diagramimageitem.cpp	/^QString DiagramImageItem::name() const {$/;"	f	class:DiagramImageItem
name	qetgraphicsitem/qetgraphicsitem.h	/^		virtual QString  name       ()const {return QString("");}$/;"	f	class:QetGraphicsItem
name	qetgraphicsitem/qetshapeitem.cpp	/^QString QetShapeItem::name() const {$/;"	f	class:QetShapeItem
name	qetgraphicsitem/terminal.h	/^inline QString Terminal::name() const {$/;"	f	class:Terminal
name	titleblock/templatelocation.cpp	/^QString TitleBlockTemplateLocation::name() const {$/;"	f	class:TitleBlockTemplateLocation
name	titleblock/templatelocationchooser.cpp	/^QString TitleBlockTemplateLocationChooser::name() const {$/;"	f	class:TitleBlockTemplateLocationChooser
name	titleblock/templatelocationsaver.cpp	/^QString TitleBlockTemplateLocationSaver::name() const {$/;"	f	class:TitleBlockTemplateLocationSaver
name	titleblocktemplate.cpp	/^QString TitleBlockTemplate::name() const {$/;"	f	class:TitleBlockTemplate
nameForRenamingOperation	basicmoveelementshandler.cpp	/^QString BasicMoveElementsHandler::nameForRenamingOperation() {$/;"	f	class:BasicMoveElementsHandler
nameForRenamingOperation	integrationmoveelementshandler.cpp	/^QString IntegrationMoveElementsHandler::nameForRenamingOperation() {$/;"	f	class:IntegrationMoveElementsHandler
nameForRenamingOperation	interactivemoveelementshandler.cpp	/^QString InteractiveMoveElementsHandler::nameForRenamingOperation() {$/;"	f	class:InteractiveMoveElementsHandler
nameForRenamingOperation	titleblock/integrationmovetemplateshandler.cpp	/^QString IntegrationMoveTitleBlockTemplatesHandler::nameForRenamingOperation() {$/;"	f	class:IntegrationMoveTitleBlockTemplatesHandler
nameLessRowsCount	diagramcontextwidget.cpp	/^int DiagramContextWidget::nameLessRowsCount() const {$/;"	f	class:DiagramContextWidget
name_	titleblock/templatelocation.h	/^	QString name_;                              \/\/\/< Name of the template$/;"	m	class:TitleBlockTemplateLocation
name_	titleblocktemplate.h	/^	QString name_;                                   \/\/\/< name identifying the Title Block Template within its parent collection$/;"	m	class:TitleBlockTemplate
name_	xmlelementdefinition.h	/^	QString name_;$/;"	m	class:XmlElementDefinition
name_	xmlelementscategory.h	/^	QString name_;$/;"	m	class:XmlElementsCategory
name_input_	titleblock/templatecellwidget.h	/^	QLineEdit     *name_input_;$/;"	m	class:TitleBlockTemplateCellWidget
name_label_	titleblock/templatecellwidget.h	/^	QLabel        *name_label_;$/;"	m	class:TitleBlockTemplateCellWidget
name_terminal_	qetgraphicsitem/terminal.h	/^	QString name_terminal_;$/;"	m	class:Terminal
name_terminal_hidden	qetgraphicsitem/terminal.h	/^	bool name_terminal_hidden;$/;"	m	class:Terminal
names	editor/elementscene.h	/^inline NamesList ElementScene::names() const {$/;"	f	class:ElementScene
names	nameslistwidget.cpp	/^NamesList NamesListWidget::names() {$/;"	f	class:NamesListWidget
names	qetgraphicsitem/customelement.h	/^	NamesList names;$/;"	m	class:CustomElement
namesListForIntegrationCategory	qetproject.cpp	/^NamesList QETProject::namesListForIntegrationCategory() {$/;"	f	class:QETProject
names_after	editor/editorcommands.h	/^	NamesList names_after;$/;"	m	class:ChangeNamesCommand
names_before	editor/editorcommands.h	/^	NamesList names_before;$/;"	m	class:ChangeNamesCommand
names_list	elementscategoryeditor.h	/^	NamesListWidget *names_list;$/;"	m	class:ElementsCategoryEditor
nearDistance	qetgraphicsitem/conductor.cpp	/^qreal Conductor::nearDistance() const {$/;"	f	class:Conductor
nearShape	qetgraphicsitem/conductor.cpp	/^QPainterPath Conductor::nearShape() const {$/;"	f	class:Conductor
neutralColor	qetgraphicsitem/terminal.cpp	/^QColor Terminal::neutralColor      = QColor(Qt::blue);$/;"	m	class:Terminal	file:
neutralColor	qetgraphicsitem/terminal.h	/^	static QColor neutralColor;$/;"	m	class:Terminal
newCategory	elementscategorieswidget.cpp	/^void ElementsCategoriesWidget::newCategory() {$/;"	f	class:ElementsCategoriesWidget
newCategory	elementspanelwidget.cpp	/^void ElementsPanelWidget::newCategory() {$/;"	f	class:ElementsPanelWidget
newDiagram	elementspanelwidget.cpp	/^void ElementsPanelWidget::newDiagram() {$/;"	f	class:ElementsPanelWidget
newDiagramEditor	qetapp.cpp	/^void QETApp::newDiagramEditor()$/;"	f	class:QETApp
newElement	elementspanelwidget.cpp	/^void ElementsPanelWidget::newElement() {$/;"	f	class:ElementsPanelWidget
newElementEditor	qetapp.cpp	/^void QETApp::newElementEditor()$/;"	f	class:QETApp
newNameForElement	integrationmoveelementshandler.cpp	/^QString IntegrationMoveElementsHandler::newNameForElement(const ElementDefinition *element) {$/;"	f	class:IntegrationMoveElementsHandler
newNameForTemplate	titleblock/integrationmovetemplateshandler.cpp	/^QString IntegrationMoveTitleBlockTemplatesHandler::newNameForTemplate(const TitleBlockTemplateLocation &tbt) {$/;"	f	class:IntegrationMoveTitleBlockTemplatesHandler
newProject	qetdiagrameditor.cpp	/^bool QETDiagramEditor::newProject() {$/;"	f	class:QETDiagramEditor
newTemplate	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::newTemplate() {$/;"	f	class:QETTitleBlockTemplateEditor
newUuid	qetgraphicsitem/element.h	/^		void newUuid() {uuid_ = QUuid::createUuid();} 	\/\/create new uuid for this element$/;"	f	class:Element
new_	titleblock/qettemplateeditor.h	/^	QAction *new_, *open_, *open_from_file_, *save_, *save_as_, *save_as_file_, *quit_;$/;"	m	class:QETTitleBlockTemplateEditor
new_category	elementspanelwidget.h	/^	QAction *new_category, *edit_category, *delete_category;$/;"	m	class:ElementsPanelWidget
new_diagram	qetapp.h	/^	QAction *new_diagram;$/;"	m	class:QETApp
new_element	editor/qetelementeditor.h	/^	QAction *new_element, *open, *open_file, *save, *save_as, *save_as_file, *reload, *quit;$/;"	m	class:QETElementEditor
new_element	elementspanelwidget.h	/^	QAction *new_element, *edit_element, *delete_element, *open_element;$/;"	m	class:ElementsPanelWidget
new_element	qetapp.h	/^	QAction *new_element;$/;"	m	class:QETApp
new_information_	titleblock/templatecommands.h	/^	QString new_information_;$/;"	m	class:ChangeTemplateInformationsCommand
new_informations_	editor/editorcommands.h	/^	QString new_informations_;$/;"	m	class:ChangeInformationsCommand
new_name_	titleblock/templatelocationsaver.h	/^	QLineEdit *new_name_;     \/\/\/< New template name textfield$/;"	m	class:TitleBlockTemplateLocationSaver
new_offset_paste_count_	editor/editorcommands.h	/^	int new_offset_paste_count_;$/;"	m	class:PastePartsCommand
new_points	editor/editorcommands.h	/^	QVector<QPointF> new_points;$/;"	m	class:ChangePolygonPointsCommand
new_profile	diagramcommands.h	/^	ConductorProfile new_profile;$/;"	m	class:ChangeConductorCommand
new_properties	diagramcommands.h	/^	BorderProperties new_properties;$/;"	m	class:ChangeBorderCommand
new_properties	diagramcommands.h	/^	ConductorProperties new_properties;$/;"	m	class:ChangeConductorPropertiesCommand
new_properties	diagramcommands.h	/^	QList <ConductorProperties> new_properties;$/;"	m	class:ChangeSeveralConductorsPropertiesCommand
new_rect_	editor/editorcommands.h	/^	QRectF new_rect_;$/;"	m	class:ScalePartsCommand
new_settings_set	diagramcommands.h	/^	bool new_settings_set;$/;"	m	class:ChangeConductorPropertiesCommand
new_settings_set	diagramcommands.h	/^	bool new_settings_set;$/;"	m	class:ChangeSeveralConductorsPropertiesCommand
new_size	diagramcommands.h	/^	qreal old_size, new_size;$/;"	m	class:ItemResizerCommand
new_start_top_left_corner_	editor/editorcommands.h	/^	QPointF new_start_top_left_corner_;$/;"	m	class:PastePartsCommand
new_style	diagramcommands.h	/^	Qt::PenStyle old_style, new_style;$/;"	m	class:ChangeShapeStyleCommand
new_titleblock	diagramcommands.h	/^	TitleBlockProperties new_titleblock;$/;"	m	class:ChangeTitleBlockCommand
new_value	editor/editorcommands.h	/^	QVariant new_value;$/;"	m	class:ChangePartCommand
new_values_	titleblock/templatecommands.h	/^	QHash<QString, QVariant> new_values_; \/\/\/< values after the cell has been modified$/;"	m	class:ModifyTitleBlockCellCommand
next	numerotationcontextcommands.cpp	/^NumerotationContext FolioNum::next (const NumerotationContext &nc, const int i) const {$/;"	f	class:FolioNum
next	numerotationcontextcommands.cpp	/^NumerotationContext HundredNum::next (const NumerotationContext &nc, const int i) const {$/;"	f	class:HundredNum
next	numerotationcontextcommands.cpp	/^NumerotationContext NumerotationContextCommands::next() {$/;"	f	class:NumerotationContextCommands
next	numerotationcontextcommands.cpp	/^NumerotationContext StringNum::next (const NumerotationContext &nc, const int i) const {$/;"	f	class:StringNum
next	numerotationcontextcommands.cpp	/^NumerotationContext TenNum::next (const NumerotationContext &nc, const int i) const {$/;"	f	class:TenNum
next	numerotationcontextcommands.cpp	/^NumerotationContext UnitNum::next (const NumerotationContext &nc, const int i) const {$/;"	f	class:UnitNum
next	orientationset.cpp	/^Qet::Orientation OrientationSet::next() const {$/;"	f	class:OrientationSet
nextNumber	numerotationcontextcommands.cpp	/^NumerotationContext NumStrategy::nextNumber (const NumerotationContext &nc, const int i) const {$/;"	f	class:NumStrategy
nextOrientation	qet.cpp	/^Qet::Orientation Qet::nextOrientation(Qet::Orientation o) {$/;"	f	class:Qet
nextPage	qetprintpreviewdialog.cpp	/^void QETPrintPreviewDialog::nextPage() {$/;"	f	class:QETPrintPreviewDialog
nextSegment	conductorsegment.cpp	/^ConductorSegment *ConductorSegment::nextSegment()  const {$/;"	f	class:ConductorSegment
nextString	numerotationcontextcommands.cpp	/^NumerotationContext NumStrategy::nextString (const NumerotationContext &nc, const int i) const {$/;"	f	class:NumStrategy
next_location_	diagramview.h	/^		ElementsLocation  next_location_;$/;"	m	class:DiagramView
next_page_	qetprintpreviewdialog.h	/^	QAction *next_page_;$/;"	m	class:QETPrintPreviewDialog
next_position_	diagramview.h	/^		QPoint            next_position_;$/;"	m	class:DiagramView
next_project_id	qetapp.cpp	/^uint QETApp::next_project_id = 0;$/;"	m	class:QETApp	file:
next_project_id	qetapp.h	/^	static uint next_project_id;$/;"	m	class:QETApp
next_segment	conductorsegment.h	/^	ConductorSegment *next_segment;$/;"	m	class:ConductorSegment
next_window	qetdiagrameditor.h	/^		QAction *next_window;        \/\/\/< Switch to the next document$/;"	m	class:QETDiagramEditor
nl	qeticons.cpp	/^		QIcon nl;$/;"	m	namespace:QET::Icons	file:
noProjectResult	projectview.cpp	/^QETResult ProjectView::noProjectResult() const {$/;"	f	class:ProjectView
no_editable	qetgraphicsitem/diagramtextitem.h	/^	bool no_editable;$/;"	m	class:DiagramTextItem
no_filling	editor/styleeditor.h	/^		QRadioButton *none_weight, *thin_weight, *normal_weight, *no_filling;$/;"	m	class:StyleEditor
no_more_tabs_	qettabbar.h	/^	bool no_more_tabs_;$/;"	m	class:QETTabBar
nomenclature	nomenclature.cpp	/^nomenclature::nomenclature(QETProject *project, QWidget *parent):$/;"	f	class:nomenclature
nomenclature	nomenclature.h	/^class nomenclature : public QObject {$/;"	c
nomenclatureProject	qetdiagrameditor.cpp	/^void QETDiagramEditor::nomenclatureProject() {$/;"	f	class:QETDiagramEditor
nonSelectedDiagrams	diagramschooser.cpp	/^QList<Diagram *> DiagramsChooser::nonSelectedDiagrams() const {$/;"	f	class:DiagramsChooser
non_interactive_execution_	qetapp.h	/^	bool non_interactive_execution_;    \/\/\/< Whether the application will end without any user interaction$/;"	m	class:QETApp
none_weight	editor/styleeditor.h	/^		QRadioButton *none_weight, *thin_weight, *normal_weight, *no_filling;$/;"	m	class:StyleEditor
normal_style	editor/styleeditor.h	/^		QRadioButton *black_color, *white_color,  *normal_style, *dashed_style, *dashdotted_style, *dotted_style, *green_color, *red_color, *blue_color;$/;"	m	class:StyleEditor
normal_weight	editor/styleeditor.h	/^		QRadioButton *none_weight, *thin_weight, *normal_weight, *no_filling;$/;"	m	class:StyleEditor
normalizeCells	titleblock/templateview.cpp	/^void TitleBlockTemplateView::normalizeCells(QList<TitleBlockCell> &cells, int x, int y) const {$/;"	f	class:TitleBlockTemplateView
north	orientationset.h	/^inline bool OrientationSet::north() const {$/;"	f	class:OrientationSet
north_ori	orientationset.h	/^	bool north_ori;$/;"	m	class:OrientationSet
not_readable_	basicmoveelementshandler.h	/^	QET::Action not_readable_;$/;"	m	class:BasicMoveElementsHandler
not_writable_	basicmoveelementshandler.h	/^	QET::Action not_writable_;$/;"	m	class:BasicMoveElementsHandler
num_col	titleblockcell.h	/^	int num_col;                       \/\/\/< x coordinate of the cell within its parent title block template grid$/;"	m	class:TitleBlockCell
num_context	autonumerotation.h	/^	NumerotationContext num_context;$/;"	m	class:AutoNumerotation
num_part_list_	ui/selectautonumw.h	/^		QList <NumPartEditorW *> num_part_list_;$/;"	m	class:SelectAutonumW
num_row	titleblockcell.h	/^	int num_row;                       \/\/\/< y coordinate of the cell within its parent title block template grid$/;"	m	class:TitleBlockCell
number	diagramposition.h	/^	unsigned int number()const {return number_;}$/;"	f	class:DiagramPosition
number	qetgraphicsitem/terminal.h	/^inline QString Terminal::number() const {$/;"	f	class:Terminal
number_	diagramposition.h	/^	unsigned int number_;$/;"	m	class:DiagramPosition
number_terminal_	qetgraphicsitem/terminal.h	/^	QString number_terminal_;$/;"	m	class:Terminal
numerate	conductorautonumerotation.cpp	/^void ConductorAutoNumerotation::numerate() {$/;"	f	class:ConductorAutoNumerotation
numerateNewConductor	conductorautonumerotation.cpp	/^void ConductorAutoNumerotation::numerateNewConductor() {$/;"	f	class:ConductorAutoNumerotation
numeratePotential	conductorautonumerotation.cpp	/^void ConductorAutoNumerotation::numeratePotential() {$/;"	f	class:ConductorAutoNumerotation
offset_paste_count_	editor/elementview.h	/^	int offset_paste_count_;$/;"	m	class:ElementView
old_information_	titleblock/templatecommands.h	/^	QString old_information_;$/;"	m	class:ChangeTemplateInformationsCommand
old_informations_	editor/editorcommands.h	/^	QString old_informations_;$/;"	m	class:ChangeInformationsCommand
old_offset_paste_count_	editor/editorcommands.h	/^	int old_offset_paste_count_;$/;"	m	class:PastePartsCommand
old_points	editor/editorcommands.h	/^	QVector<QPointF> old_points;$/;"	m	class:ChangePolygonPointsCommand
old_profile	diagramcommands.h	/^	ConductorProfile old_profile;$/;"	m	class:ChangeConductorCommand
old_properties	diagramcommands.h	/^	BorderProperties old_properties;$/;"	m	class:ChangeBorderCommand
old_properties	diagramcommands.h	/^	ConductorProperties old_properties;$/;"	m	class:ChangeConductorPropertiesCommand
old_properties	diagramcommands.h	/^	QList <ConductorProperties> old_properties;$/;"	m	class:ChangeSeveralConductorsPropertiesCommand
old_settings_set	diagramcommands.h	/^	bool old_settings_set;$/;"	m	class:ChangeConductorPropertiesCommand
old_settings_set	diagramcommands.h	/^	bool old_settings_set;$/;"	m	class:ChangeSeveralConductorsPropertiesCommand
old_size	diagramcommands.h	/^	qreal old_size, new_size;$/;"	m	class:ItemResizerCommand
old_start_top_left_corner_	editor/editorcommands.h	/^	QPointF old_start_top_left_corner_;$/;"	m	class:PastePartsCommand
old_style	diagramcommands.h	/^	Qt::PenStyle old_style, new_style;$/;"	m	class:ChangeShapeStyleCommand
old_titleblock	diagramcommands.h	/^	TitleBlockProperties old_titleblock;$/;"	m	class:ChangeTitleBlockCommand
old_value	editor/editorcommands.h	/^	QVariant old_value;$/;"	m	class:ChangePartCommand
old_values_	titleblock/templatecommands.h	/^	QHash<QString, QVariant> old_values_; \/\/\/< values before the cell is modified$/;"	m	class:ModifyTitleBlockCellCommand
on_add_button_clicked	ui/selectautonumw.cpp	/^void SelectAutonumW::on_add_button_clicked() {$/;"	f	class:SelectAutonumW
on_buttonBox_accepted	richtext/richtexteditor.cpp	/^void RichTextEditorDialog::on_buttonBox_accepted() {$/;"	f	class:qdesigner_internal::RichTextEditorDialog
on_buttonBox_clicked	ui/selectautonumw.cpp	/^void SelectAutonumW::on_buttonBox_clicked(QAbstractButton *button) {$/;"	f	class:SelectAutonumW
on_button_linked_clicked	ui/linksingleelementwidget.cpp	/^void LinkSingleElementWidget::on_button_linked_clicked() {$/;"	f	class:LinkSingleElementWidget
on_button_this_clicked	ui/linksingleelementwidget.cpp	/^void LinkSingleElementWidget::on_button_this_clicked() {$/;"	f	class:LinkSingleElementWidget
on_increase_spinBox_valueChanged	ui/numparteditorw.cpp	/^void NumPartEditorW::on_increase_spinBox_valueChanged() {$/;"	f	class:NumPartEditorW
on_link_button_clicked	ui/masterpropertieswidget.cpp	/^void MasterPropertiesWidget::on_link_button_clicked() {$/;"	f	class:MasterPropertiesWidget
on_m_base_type_cb_currentIndexChanged	editor/ui/elementpropertieseditorwidget.cpp	/^void ElementPropertiesEditorWidget::on_m_base_type_cb_currentIndexChanged(int index)$/;"	f	class:ElementPropertiesEditorWidget
on_m_buttonBox_accepted	editor/ui/elementpropertieseditorwidget.cpp	/^void ElementPropertiesEditorWidget::on_m_buttonBox_accepted()$/;"	f	class:ElementPropertiesEditorWidget
on_m_color_pb_clicked	ui/conductorpropertieswidget.cpp	/^void ConductorPropertiesWidget::on_m_color_pb_clicked() {$/;"	f	class:ConductorPropertiesWidget
on_m_date_now_pb_clicked	ui/titleblockpropertieswidget.cpp	/^void TitleBlockPropertiesWidget::on_m_date_now_pb_clicked() {$/;"	f	class:TitleBlockPropertiesWidget
on_m_earth_cb_toggled	ui/conductorpropertieswidget.cpp	/^void ConductorPropertiesWidget::on_m_earth_cb_toggled(bool checked) {$/;"	f	class:ConductorPropertiesWidget
on_m_edit_autonum_pb_clicked	ui/autonumselectorwidget.cpp	/^void AutonumSelectorWidget::on_m_edit_autonum_pb_clicked() {$/;"	f	class:AutonumSelectorWidget
on_m_grey_bg_cb_clicked	ui/borderpropertieswidget.cpp	/^void BorderPropertiesWidget::on_m_grey_bg_cb_clicked(bool checked) {$/;"	f	class:BorderPropertiesWidget
on_m_neutral_cb_toggled	ui/conductorpropertieswidget.cpp	/^void ConductorPropertiesWidget::on_m_neutral_cb_toggled(bool checked) {$/;"	f	class:ConductorPropertiesWidget
on_m_next_pb_clicked	ui/selectautonumw.cpp	/^void SelectAutonumW::on_m_next_pb_clicked() {$/;"	f	class:SelectAutonumW
on_m_previous_pb_clicked	ui/selectautonumw.cpp	/^void SelectAutonumW::on_m_previous_pb_clicked() {$/;"	f	class:SelectAutonumW
on_m_update_preview_pb_clicked	ui/conductorpropertieswidget.cpp	/^void ConductorPropertiesWidget::on_m_update_preview_pb_clicked() {$/;"	f	class:ConductorPropertiesWidget
on_pushButton_annotation_clicked	ui/dialogautonum.cpp	/^void DialogAutoNum::on_pushButton_annotation_clicked(){$/;"	f	class:DialogAutoNum
on_pushButton_close_clicked	ui/dialogautonum.cpp	/^void DialogAutoNum::on_pushButton_close_clicked() {$/;"	f	class:DialogAutoNum
on_pushButton_delete_clicked	ui/dialogautonum.cpp	/^void DialogAutoNum::on_pushButton_delete_clicked() {$/;"	f	class:DialogAutoNum
on_remove_button_clicked	ui/selectautonumw.cpp	/^void SelectAutonumW::on_remove_button_clicked() {$/;"	f	class:SelectAutonumW
on_tableDiagram_customContextMenuRequested	ui/diagramselection.cpp	/^void diagramselection::on_tableDiagram_customContextMenuRequested(const QPoint &pos){$/;"	f	class:diagramselection
on_type_combo_activated	ui/numparteditorw.cpp	/^void NumPartEditorW::on_type_combo_activated(int index) {$/;"	f	class:NumPartEditorW
on_unlink_button_clicked	ui/masterpropertieswidget.cpp	/^void MasterPropertiesWidget::on_unlink_button_clicked() {$/;"	f	class:MasterPropertiesWidget
on_value_field_textEdited	ui/numparteditorw.cpp	/^void NumPartEditorW::on_value_field_textEdited() {$/;"	f	class:NumPartEditorW
open	editor/qetelementeditor.h	/^	QAction *new_element, *open, *open_file, *save, *save_as, *save_as_file, *reload, *quit;$/;"	m	class:QETElementEditor
open	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::open() {$/;"	f	class:QETTitleBlockTemplateEditor
openAndAddProject	qetdiagrameditor.cpp	/^bool QETDiagramEditor::openAndAddProject(const QString &filepath, bool interactive, bool update_panel) {$/;"	f	class:QETDiagramEditor
openDialog	dvevent/dveventaddimage.cpp	/^void DVEventAddImage::openDialog() {$/;"	f	class:DVEventAddImage
openDirectoryForSelectedItem	elementspanelwidget.cpp	/^void ElementsPanelWidget::openDirectoryForSelectedItem() {$/;"	f	class:ElementsPanelWidget
openElement	editor/qetelementeditor.cpp	/^void QETElementEditor::openElement(const QString &filepath) {$/;"	f	class:QETElementEditor
openElementFiles	qetapp.cpp	/^void QETApp::openElementFiles (const QStringList &files_list)$/;"	f	class:QETApp
openElementFromFile	elementspanelwidget.cpp	/^void ElementsPanelWidget::openElementFromFile() {$/;"	f	class:ElementsPanelWidget
openElementLocations	qetapp.cpp	/^void QETApp::openElementLocations (const QList<ElementsLocation> &locations_list)$/;"	f	class:QETApp
openFiles	qetapp.cpp	/^void QETApp::openFiles (const QETArguments &args)$/;"	f	class:QETApp
openForDuplication	titleblock/qettemplateeditor.cpp	/^bool QETTitleBlockTemplateEditor::openForDuplication() const {$/;"	f	class:QETTitleBlockTemplateEditor
openFromFile	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::openFromFile() {$/;"	f	class:QETTitleBlockTemplateEditor
openProject	qetdiagrameditor.cpp	/^bool QETDiagramEditor::openProject() {$/;"	f	class:QETDiagramEditor
openProjectFiles	qetapp.cpp	/^void QETApp::openProjectFiles (const QStringList &files_list)$/;"	f	class:QETApp
openRecentFile	editor/qetelementeditor.cpp	/^void QETElementEditor::openRecentFile(const QString &filepath) {$/;"	f	class:QETElementEditor
openRecentFile	qetdiagrameditor.cpp	/^bool QETDiagramEditor::openRecentFile(const QString &filepath) {$/;"	f	class:QETDiagramEditor
openTitleBlockTemplate	qetapp.cpp	/^void QETApp::openTitleBlockTemplate (const QString &filepath)$/;"	f	class:QETApp
openTitleBlockTemplate	qetapp.cpp	/^void QETApp::openTitleBlockTemplate (const TitleBlockTemplateLocation &location, bool duplicate)$/;"	f	class:QETApp
openTitleBlockTemplateFiles	qetapp.cpp	/^void QETApp::openTitleBlockTemplateFiles (const QStringList &files_list)$/;"	f	class:QETApp
open_	titleblock/qettemplateeditor.h	/^	QAction *new_, *open_, *open_from_file_, *save_, *save_as_, *save_as_file_, *quit_;$/;"	m	class:QETTitleBlockTemplateEditor
open_dialog_dir	qetdiagrameditor.h	/^		QDir open_dialog_dir;$/;"	m	class:QETDiagramEditor
open_dialog_dir_	titleblock/templatelogomanager.h	/^	QDir open_dialog_dir_;                 \/\/\/< last opened directory$/;"	m	class:TitleBlockTemplateLogoManager
open_directory	elementspanelwidget.h	/^	QAction *open_directory, *copy_path;$/;"	m	class:ElementsPanelWidget
open_element	elementspanelwidget.h	/^	QAction *new_element, *edit_element, *delete_element, *open_element;$/;"	m	class:ElementsPanelWidget
open_file	editor/qetelementeditor.h	/^	QAction *new_element, *open, *open_file, *save, *save_as, *save_as_file, *reload, *quit;$/;"	m	class:QETElementEditor
open_from_file_	titleblock/qettemplateeditor.h	/^	QAction *new_, *open_, *open_from_file_, *save_, *save_as_, *save_as_file_, *quit_;$/;"	m	class:QETTitleBlockTemplateEditor
openedProjects	qetdiagrameditor.cpp	/^QList<ProjectView *> QETDiagramEditor::openedProjects() const {$/;"	f	class:QETDiagramEditor
opened_from_file	editor/qetelementeditor.h	/^	bool opened_from_file;$/;"	m	class:QETElementEditor
opened_from_file_	titleblock/qettemplateeditor.h	/^	bool opened_from_file_;$/;"	m	class:QETTitleBlockTemplateEditor
operator !=	borderproperties.cpp	/^bool BorderProperties::operator!=(const BorderProperties &bp) {$/;"	f	class:BorderProperties
operator !=	conductorproperties.cpp	/^bool ConductorProperties::operator!=(const ConductorProperties &other) const{$/;"	f	class:ConductorProperties
operator !=	conductorproperties.cpp	/^int SingleLineProperties::operator!=(const SingleLineProperties &other) const {$/;"	f	class:SingleLineProperties
operator !=	diagramcontext.cpp	/^bool DiagramContext::operator!=(const DiagramContext &dc) const {$/;"	f	class:DiagramContext
operator !=	elementslocation.cpp	/^bool ElementsLocation::operator!=(const ElementsLocation &other) const {$/;"	f	class:ElementsLocation
operator !=	nameslist.cpp	/^bool NamesList::operator!=(const NamesList &nl) const {$/;"	f	class:NamesList
operator !=	orientationset.cpp	/^bool OrientationSet::operator!=(const OrientationSet &os) const {$/;"	f	class:OrientationSet
operator !=	properties/xrefproperties.cpp	/^bool XRefProperties::operator !=(const XRefProperties &xrp) const {$/;"	f	class:XRefProperties
operator !=	titleblockproperties.cpp	/^bool TitleBlockProperties::operator!=(const TitleBlockProperties &ip) {$/;"	f	class:TitleBlockProperties
operator ++	orientationset.cpp	/^const OrientationSet OrientationSet::operator++() {$/;"	f	class:OrientationSet
operator ++	orientationset.cpp	/^const OrientationSet OrientationSet::operator++(int) {$/;"	f	class:OrientationSet
operator --	orientationset.cpp	/^const OrientationSet OrientationSet::operator--() {$/;"	f	class:OrientationSet
operator --	orientationset.cpp	/^const OrientationSet OrientationSet::operator--(int) {$/;"	f	class:OrientationSet
operator <<	conductorprofile.cpp	/^QDebug &operator<<(QDebug d, ConductorProfile &t) {$/;"	f
operator <<	diagramcontent.cpp	/^QDebug &operator<<(QDebug d, DiagramContent &content) {$/;"	f
operator <<	numerotationcontext.cpp	/^void NumerotationContext::operator << (const NumerotationContext &other) {$/;"	f	class:NumerotationContext
operator =	conductorprofile.cpp	/^ConductorProfile &ConductorProfile::operator=(const ConductorProfile &c) {$/;"	f	class:ConductorProfile
operator =	elementslocation.cpp	/^ElementsLocation &ElementsLocation::operator=(const ElementsLocation &other) {$/;"	f	class:ElementsLocation
operator =	qetarguments.cpp	/^QETArguments &QETArguments::operator=(const QETArguments &qet_arguments) {$/;"	f	class:QETArguments
operator ==	borderproperties.cpp	/^bool BorderProperties::operator==(const BorderProperties &bp) {$/;"	f	class:BorderProperties
operator ==	conductorproperties.cpp	/^bool ConductorProperties::operator==(const ConductorProperties &other) const{$/;"	f	class:ConductorProperties
operator ==	conductorproperties.cpp	/^int SingleLineProperties::operator==(const SingleLineProperties &other) const {$/;"	f	class:SingleLineProperties
operator ==	diagramcontext.cpp	/^bool DiagramContext::operator==(const DiagramContext &dc) const {$/;"	f	class:DiagramContext
operator ==	elementslocation.cpp	/^bool ElementsLocation::operator==(const ElementsLocation &other) const {$/;"	f	class:ElementsLocation
operator ==	nameslist.cpp	/^bool NamesList::operator==(const NamesList &nl) const {$/;"	f	class:NamesList
operator ==	orientationset.cpp	/^bool OrientationSet::operator==(const OrientationSet &os) const {$/;"	f	class:OrientationSet
operator ==	properties/xrefproperties.cpp	/^bool XRefProperties::operator ==(const XRefProperties &xrp) const{$/;"	f	class:XRefProperties
operator ==	titleblock/templatelocation.cpp	/^bool TitleBlockTemplateLocation::operator==(const TitleBlockTemplateLocation &location) const {$/;"	f	class:TitleBlockTemplateLocation
operator ==	titleblockproperties.cpp	/^bool TitleBlockProperties::operator==(const TitleBlockProperties &ip) {$/;"	f	class:TitleBlockProperties
operator []	diagramcontext.cpp	/^const QVariant DiagramContext::operator[](const QString &key) const {$/;"	f	class:DiagramContext
operator []	nameslist.cpp	/^QString &NamesList::operator[](const QString &lang) {$/;"	f	class:NamesList
operator []	nameslist.cpp	/^const QString NamesList::operator[](const QString &lang) const {$/;"	f	class:NamesList
operator []	numerotationcontext.cpp	/^QString NumerotationContext::operator [] (const int &i) const {$/;"	f	class:NumerotationContext
option	editor/editorcommands.h	/^	Option option;$/;"	m	class:ChangeZValueCommand
options	qetarguments.cpp	/^QList<QString> QETArguments::options() const {$/;"	f	class:QETArguments
options_	qetarguments.h	/^	QList<QString> options_;$/;"	m	class:QETArguments
ori_	qetgraphicsitem/terminal.h	/^	Qet::Orientation ori_;$/;"	m	class:Terminal
orientation	editor/graphicspart/partterminal.h	/^		Qet::Orientation orientation() const {return m_orientation;}$/;"	f	class:PartTerminal
orientation	editor/terminaleditor.h	/^	QComboBox *orientation;$/;"	m	class:TerminalEditor
orientation	qetgraphicsitem/element.h	/^inline int Element::orientation() const {$/;"	f	class:Element
orientation	qetgraphicsitem/terminal.cpp	/^Qet::Orientation Terminal::orientation() const {$/;"	f	class:Terminal
orientation	qtextorientationspinboxwidget.cpp	/^double QTextOrientationSpinBoxWidget::orientation() const {$/;"	f	class:QTextOrientationSpinBoxWidget
orientation	qtextorientationwidget.cpp	/^double QTextOrientationWidget::orientation() const {$/;"	f	class:QTextOrientationWidget
orientation	titleblock/helpercell.h	/^	Qt::Orientation orientation; \/\/\/< Orientation of this cell$/;"	m	class:HelperCell
orientationFromString	qet.cpp	/^Qet::Orientation Qet::orientationFromString(const QString &s) {$/;"	f	class:Qet
orientationToString	qet.cpp	/^QString Qet::orientationToString(Qet::Orientation o) {$/;"	f	class:Qet
orientationWidget	qtextorientationspinboxwidget.cpp	/^QTextOrientationWidget *QTextOrientationSpinBoxWidget::orientationWidget() const {$/;"	f	class:QTextOrientationSpinBoxWidget
orientation_widget_	qtextorientationspinboxwidget.h	/^	QTextOrientationWidget *orientation_widget_;$/;"	m	class:QTextOrientationSpinBoxWidget
originalDestinationInternalName	moveelementsdescription.cpp	/^QString MoveElementsDescription::originalDestinationInternalName() const {$/;"	f	class:MoveElementsDescription
originalPos	qetgraphicsitem/elementtextitem.cpp	/^QPointF ElementTextItem::originalPos() const {$/;"	f	class:ElementTextItem
originalRotationAngle	qetgraphicsitem/elementtextitem.cpp	/^qreal ElementTextItem::originalRotationAngle() const {$/;"	f	class:ElementTextItem
original_bounding_rect_	editor/elementprimitivedecorator.h	/^	QRectF original_bounding_rect_; \/\/\/< original bounding rect$/;"	m	class:ElementPrimitiveDecorator
original_position	qetgraphicsitem/elementtextitem.h	/^		QPointF  original_position;$/;"	m	class:ElementTextItem
original_rect_	editor/editorcommands.h	/^	QRectF original_rect_;$/;"	m	class:ScalePartsCommand
original_rotation_angle_	qetgraphicsitem/elementtextitem.h	/^		qreal    original_rotation_angle_;$/;"	m	class:ElementTextItem
orthogonalProjection	qet.cpp	/^bool QET::orthogonalProjection(const QPointF &point, const QLineF &line, QPointF *intersection) {$/;"	f	class:QET
otherConductors	diagramcontent.h	/^	QSet<Conductor *> otherConductors;$/;"	m	class:DiagramContent
out_filter	ui/elementselectorwidget.h	/^							   out_filter; \/\/Out filter is used to return (with the method filter) a list of$/;"	m	class:ElementSelectorWidget
outline_color	editor/styleeditor.h	/^		QComboBox *filling_color, *outline_color, *size_weight, *line_style;$/;"	m	class:StyleEditor
overrideCommonElementsDir	qetapp.cpp	/^void QETApp::overrideCommonElementsDir (const QString &new_ced)$/;"	f	class:QETApp
overrideCommonTitleBlockTemplatesDir	qetapp.cpp	/^void QETApp::overrideCommonTitleBlockTemplatesDir (const QString &new_ctbtd)$/;"	f	class:QETApp
overrideConfigDir	qetapp.cpp	/^void QETApp::overrideConfigDir (const QString &new_cd)$/;"	f	class:QETApp
overrideLangDir	qetapp.cpp	/^void QETApp::overrideLangDir (const QString &new_ld)$/;"	f	class:QETApp
p1	editor/graphicspart/partline.cpp	/^QPointF PartLine::p1() const {$/;"	f	class:PartLine
p2	editor/graphicspart/partline.cpp	/^QPointF PartLine::p2() const {$/;"	f	class:PartLine
pa	qetdiagrameditor.h	/^		ElementsPanelWidget *pa;$/;"	m	class:QETDiagramEditor
pageSetup	qetprintpreviewdialog.cpp	/^void QETPrintPreviewDialog::pageSetup() {$/;"	f	class:QETPrintPreviewDialog
page_setup_	qetprintpreviewdialog.h	/^	QAction *page_setup_;$/;"	m	class:QETPrintPreviewDialog
pages	configdialog.h	/^	QList<ConfigPage *> pages;$/;"	m	class:ConfigDialog
pagesCount	diagramprintdialog.cpp	/^int DiagramPrintDialog::pagesCount(Diagram *diagram, const ExportProperties &options, bool fullpage) const {$/;"	f	class:DiagramPrintDialog
pages_list	configdialog.h	/^	QListWidget *pages_list;$/;"	m	class:ConfigDialog
pages_widget	configdialog.h	/^	QStackedWidget *pages_widget;$/;"	m	class:ConfigDialog
paint	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget) {$/;"	f	class:ElementPrimitiveDecorator
paint	editor/graphicspart/partarc.cpp	/^void PartArc::paint(QPainter *painter, const QStyleOptionGraphicsItem *options, QWidget *widget)$/;"	f	class:PartArc
paint	editor/graphicspart/partellipse.cpp	/^void PartEllipse::paint(QPainter *painter, const QStyleOptionGraphicsItem *options, QWidget *widget)$/;"	f	class:PartEllipse
paint	editor/graphicspart/partline.cpp	/^void PartLine::paint(QPainter *painter, const QStyleOptionGraphicsItem *options, QWidget *widget)$/;"	f	class:PartLine
paint	editor/graphicspart/partpolygon.cpp	/^void PartPolygon::paint(QPainter *painter, const QStyleOptionGraphicsItem *options, QWidget *widget)$/;"	f	class:PartPolygon
paint	editor/graphicspart/partrectangle.cpp	/^void PartRectangle::paint(QPainter *painter, const QStyleOptionGraphicsItem *options, QWidget *widget)$/;"	f	class:PartRectangle
paint	editor/graphicspart/partterminal.cpp	/^void PartTerminal::paint(QPainter *p, const QStyleOptionGraphicsItem *options, QWidget *widget) {$/;"	f	class:PartTerminal
paint	editor/graphicspart/parttext.cpp	/^void PartText::paint(QPainter *painter, const QStyleOptionGraphicsItem *qsogi, QWidget *widget) {$/;"	f	class:PartText
paint	editor/graphicspart/parttextfield.cpp	/^void PartTextField::paint(QPainter *painter, const QStyleOptionGraphicsItem *qsogi, QWidget *widget) {$/;"	f	class:PartTextField
paint	qetgraphicsitem/commentitem.cpp	/^void CommentItem::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget) {$/;"	f	class:CommentItem
paint	qetgraphicsitem/conductor.cpp	/^void Conductor::paint(QPainter *qp, const QStyleOptionGraphicsItem *options, QWidget *qw) {$/;"	f	class:Conductor
paint	qetgraphicsitem/crossrefitem.cpp	/^void CrossRefItem::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget) {$/;"	f	class:CrossRefItem
paint	qetgraphicsitem/customelement.cpp	/^void CustomElement::paint(QPainter *qp, const QStyleOptionGraphicsItem *options) {$/;"	f	class:CustomElement
paint	qetgraphicsitem/diagramimageitem.cpp	/^void DiagramImageItem::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget) {$/;"	f	class:DiagramImageItem
paint	qetgraphicsitem/diagramtextitem.cpp	/^void DiagramTextItem::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget) {$/;"	f	class:DiagramTextItem
paint	qetgraphicsitem/element.cpp	/^void Element::paint(QPainter *painter, const QStyleOptionGraphicsItem *options, QWidget *widget) {$/;"	f	class:Element
paint	qetgraphicsitem/qetshapeitem.cpp	/^void QetShapeItem::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)$/;"	f	class:QetShapeItem
paint	qetgraphicsitem/terminal.cpp	/^void Terminal::paint(QPainter *p, const QStyleOptionGraphicsItem *options, QWidget *widget) {$/;"	f	class:Terminal
paint	titleblock/helpercell.cpp	/^void HelperCell::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget) {$/;"	f	class:HelperCell
paint	titleblock/splittedhelpercell.cpp	/^void SplittedHelperCell::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget * widget) {$/;"	f	class:SplittedHelperCell
paint	titleblock/templatevisualcell.cpp	/^void TitleBlockTemplateVisualCell::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget) {$/;"	f	class:TitleBlockTemplateVisualCell
paintEvent	qtextorientationwidget.cpp	/^void QTextOrientationWidget::paintEvent(QPaintEvent *event) {$/;"	f	class:QTextOrientationWidget
painterPath	titleblock/templatecellsset.cpp	/^QPainterPath TitleBlockTemplateCellsSet::painterPath() const {$/;"	f	class:TitleBlockTemplateCellsSet
panelContentChange	elementspanel.cpp	/^void ElementsPanel::panelContentChange() {$/;"	f	class:ElementsPanel
parent	elementslocation.cpp	/^ElementsLocation ElementsLocation::parent() const {$/;"	f	class:ElementsLocation
parentCategories	elementdefinition.cpp	/^QList<ElementsCategory *> ElementDefinition::parentCategories() {$/;"	f	class:ElementDefinition
parentCategories	elementscategory.cpp	/^QList<ElementsCategory *> ElementsCategory::parentCategories() {$/;"	f	class:ElementsCategory
parentCategories	elementscollection.cpp	/^QList<ElementsCategory *> ElementsCollection::parentCategories() {$/;"	f	class:ElementsCollection
parentCategory	elementdefinition.cpp	/^ElementsCategory *ElementDefinition::parentCategory() {$/;"	f	class:ElementDefinition
parentCategory	elementscategory.cpp	/^ElementsCategory *ElementsCategory::parentCategory() {$/;"	f	class:ElementsCategory
parentCategory	elementscollection.cpp	/^ElementsCategory *ElementsCollection::parentCategory() {$/;"	f	class:ElementsCollection
parentCollection	elementdefinition.cpp	/^ElementsCollection *ElementDefinition::parentCollection() {$/;"	f	class:ElementDefinition
parentCollection	elementscategory.cpp	/^ElementsCollection *ElementsCategory::parentCollection() {$/;"	f	class:ElementsCategory
parentCollection	elementscollection.cpp	/^ElementsCollection *ElementsCollection::parentCollection() {$/;"	f	class:ElementsCollection
parentCollection	titleblock/templatelocation.cpp	/^TitleBlockTemplatesCollection *TitleBlockTemplateLocation::parentCollection() const {$/;"	f	class:TitleBlockTemplateLocation
parentConductor	qetgraphicsitem/conductortextitem.cpp	/^Conductor *ConductorTextItem::parentConductor() const {$/;"	f	class:ConductorTextItem
parentElement	qetgraphicsitem/elementtextitem.cpp	/^Element *ElementTextItem::parentElement() const {$/;"	f	class:ElementTextItem
parentElement	qetgraphicsitem/terminal.cpp	/^Element *Terminal::parentElement() const {$/;"	f	class:Terminal
parentProject	titleblock/templatelocation.cpp	/^QETProject *TitleBlockTemplateLocation::parentProject() const {$/;"	f	class:TitleBlockTemplateLocation
parentProject	titleblock/templatescollection.cpp	/^QETProject *TitleBlockTemplatesCollection::parentProject() {$/;"	f	class:TitleBlockTemplatesCollection
parentProject	titleblock/templatescollection.cpp	/^QETProject *TitleBlockTemplatesProjectCollection::parentProject() {$/;"	f	class:TitleBlockTemplatesProjectCollection
parent_category_	elementdefinition.h	/^	ElementsCategory *parent_category_;$/;"	m	class:ElementDefinition
parent_category_	elementscategory.h	/^	ElementsCategory   *parent_category_;$/;"	m	class:ElementsCategory
parent_category_	xmlelementdefinition.h	/^	XmlElementsCategory *parent_category_;$/;"	m	class:XmlElementDefinition
parent_collection_	elementdefinition.h	/^	ElementsCollection *parent_collection_;$/;"	m	class:ElementDefinition
parent_collection_	elementscategory.h	/^	ElementsCollection *parent_collection_;$/;"	m	class:ElementsCategory
parent_conductor_	qetgraphicsitem/conductortextitem.h	/^	Conductor *parent_conductor_;$/;"	m	class:ConductorTextItem
parent_element_	qetgraphicsitem/elementtextitem.h	/^		Element *parent_element_;$/;"	m	class:ElementTextItem
parent_element_	qetgraphicsitem/terminal.h	/^	Element *parent_element_;$/;"	m	class:Terminal
parent_view_	titleblock/templatecellsset.h	/^	const TitleBlockTemplateView *parent_view_; \/\/\/< the view displaying the cells$/;"	m	class:TitleBlockTemplateCellsSet
parent_widget_	integrationmoveelementshandler.h	/^	QWidget *parent_widget_;              \/\/\/< Widget to be used as parent when displaying dialogs$/;"	m	class:IntegrationMoveElementsHandler
parent_widget_	interactivemoveelementshandler.h	/^	QWidget *parent_widget_;      \/\/\/< Widget to be used as parent when displaying dialogs$/;"	m	class:InteractiveMoveElementsHandler
parent_widget_	titleblock/integrationmovetemplateshandler.h	/^	QWidget *parent_widget_;              \/\/\/< Widget used as parent to display dialogs$/;"	m	class:IntegrationMoveTitleBlockTemplatesHandler
parseArc	qetgraphicsitem/customelement.cpp	/^bool CustomElement::parseArc(QDomElement &e, QPainter &qp) {$/;"	f	class:CustomElement
parseArguments	qetapp.cpp	/^void QETApp::parseArguments()$/;"	f	class:QETApp
parseArguments	qetarguments.cpp	/^void QETArguments::parseArguments(const QList<QString> &arguments) {$/;"	f	class:QETArguments
parseCircle	qetgraphicsitem/customelement.cpp	/^bool CustomElement::parseCircle(QDomElement &e, QPainter &qp) {$/;"	f	class:CustomElement
parseColumns	titleblocktemplate.cpp	/^void TitleBlockTemplate::parseColumns(const QString &cols_string) {$/;"	f	class:TitleBlockTemplate
parseElement	qetgraphicsitem/customelement.cpp	/^bool CustomElement::parseElement(QDomElement &e, QPainter &qp) {$/;"	f	class:CustomElement
parseEllipse	qetgraphicsitem/customelement.cpp	/^bool CustomElement::parseEllipse(QDomElement &e, QPainter &qp) {$/;"	f	class:CustomElement
parseInput	qetgraphicsitem/customelement.cpp	/^ElementTextItem *CustomElement::parseInput(QDomElement &e) {$/;"	f	class:CustomElement
parseLine	qetgraphicsitem/customelement.cpp	/^bool CustomElement::parseLine(QDomElement &e, QPainter &qp) {$/;"	f	class:CustomElement
parsePolygon	qetgraphicsitem/customelement.cpp	/^bool CustomElement::parsePolygon(QDomElement &e, QPainter &qp) {$/;"	f	class:CustomElement
parseRect	qetgraphicsitem/customelement.cpp	/^bool CustomElement::parseRect(QDomElement &e, QPainter &qp) {$/;"	f	class:CustomElement
parseRows	titleblocktemplate.cpp	/^void TitleBlockTemplate::parseRows(const QString &rows_string) {$/;"	f	class:TitleBlockTemplate
parseTerminal	qetgraphicsitem/customelement.cpp	/^Terminal *CustomElement::parseTerminal(QDomElement &e) {$/;"	f	class:CustomElement
parseText	qetgraphicsitem/customelement.cpp	/^bool CustomElement::parseText(QDomElement &e, QPainter &qp) {$/;"	f	class:CustomElement
part	editor/arceditor.h	/^	PartArc *part;$/;"	m	class:ArcEditor
part	editor/editorcommands.h	/^	QGraphicsItem *part;$/;"	m	class:AddPartCommand
part	editor/ellipseeditor.h	/^	PartEllipse *part;$/;"	m	class:EllipseEditor
part	editor/lineeditor.h	/^		PartLine *part;$/;"	m	class:LineEditor
part	editor/polygoneditor.h	/^	PartPolygon *part;$/;"	m	class:PolygonEditor
part	editor/rectangleeditor.h	/^	PartRectangle *part;$/;"	m	class:RectangleEditor
part	editor/styleeditor.h	/^		CustomElementGraphicPart *part;$/;"	m	class:StyleEditor
part	editor/terminaleditor.h	/^	PartTerminal *part;$/;"	m	class:TerminalEditor
part	editor/texteditor.h	/^	PartText *part;$/;"	m	class:TextEditor
part	editor/textfieldeditor.h	/^	PartTextField *part;$/;"	m	class:TextFieldEditor
parts	editor/qetelementeditor.h	/^	QActionGroup *parts, *m_zoom_ag, *m_depth_ag;$/;"	m	class:QETElementEditor
parts_dock	editor/qetelementeditor.h	/^	QDockWidget *parts_dock;$/;"	m	class:QETElementEditor
parts_list	editor/qetelementeditor.h	/^	QListWidget *parts_list;$/;"	m	class:QETElementEditor
parts_toolbar	editor/qetelementeditor.h	/^	QToolBar *parts_toolbar, *main_toolbar, *view_toolbar, *depth_toolbar, *element_toolbar;$/;"	m	class:QETElementEditor
paste	diagramview.cpp	/^void DiagramView::paste(const QPointF &pos, QClipboard::Mode clipboard_mode) {$/;"	f	class:DiagramView
paste	editor/elementview.cpp	/^ElementContent ElementView::paste(const QDomDocument &xml_document, const QPointF &pos) {$/;"	f	class:ElementView
paste	editor/elementview.cpp	/^ElementContent ElementView::paste(const QPointF &position) {$/;"	f	class:ElementView
paste	editor/elementview.cpp	/^void ElementView::paste() {$/;"	f	class:ElementView
paste	editor/qetelementeditor.h	/^	QAction *cut, *copy, *paste, *paste_in_area, *paste_from_file, *paste_from_elmt;$/;"	m	class:QETElementEditor
paste	qetdiagrameditor.h	/^		QAction *paste;              \/\/\/< Paste clipboard content on the current diagram$/;"	m	class:QETDiagramEditor
paste	titleblock/templateview.cpp	/^void TitleBlockTemplateView::paste() {$/;"	f	class:TitleBlockTemplateView
pasteAreaDefined	editor/elementview.cpp	/^ElementContent ElementView::pasteAreaDefined(const QRectF &target_rect) {$/;"	f	class:ElementView
pasteFromElement	editor/qetelementeditor.cpp	/^void QETElementEditor::pasteFromElement() {$/;"	f	class:QETElementEditor
pasteFromFile	editor/qetelementeditor.cpp	/^void QETElementEditor::pasteFromFile() {$/;"	f	class:QETElementEditor
pasteHere	diagramview.cpp	/^void DiagramView::pasteHere() {$/;"	f	class:DiagramView
pasteInArea	editor/elementview.cpp	/^void ElementView::pasteInArea() {$/;"	f	class:ElementView
pasteOffset	editor/qetelementeditor.cpp	/^QPointF QETElementEditor::pasteOffset() {$/;"	f	class:QETElementEditor
pasteWithOffset	editor/elementview.cpp	/^ElementContent ElementView::pasteWithOffset(const QDomDocument &xml_document) {$/;"	f	class:ElementView
paste_	titleblock/qettemplateeditor.h	/^	QAction *undo_, *redo_, *cut_, *copy_, *paste_, *edit_logos_, *edit_info_, *add_row_, *add_col_, *merge_cells_, *split_cell_;$/;"	m	class:QETTitleBlockTemplateEditor
paste_area_	editor/elementscene.h	/^		QGraphicsRectItem *paste_area_;$/;"	m	class:ElementScene
paste_from_elmt	editor/qetelementeditor.h	/^	QAction *cut, *copy, *paste, *paste_in_area, *paste_from_file, *paste_from_elmt;$/;"	m	class:QETElementEditor
paste_from_file	editor/qetelementeditor.h	/^	QAction *cut, *copy, *paste, *paste_in_area, *paste_from_file, *paste_from_elmt;$/;"	m	class:QETElementEditor
paste_from_menu	editor/qetelementeditor.h	/^	QMenu *file_menu, *edit_menu, *paste_from_menu, *display_menu, *tools_menu;$/;"	m	class:QETElementEditor
paste_here	diagramview.h	/^		QAction          *paste_here;$/;"	m	class:DiagramView
paste_here_pos	diagramview.h	/^		QPoint            paste_here_pos;$/;"	m	class:DiagramView
paste_in_area	editor/qetelementeditor.h	/^	QAction *cut, *copy, *paste, *paste_in_area, *paste_from_file, *paste_from_elmt;$/;"	m	class:QETElementEditor
pastedCells	titleblock/templateview.cpp	/^QList<TitleBlockCell> TitleBlockTemplateView::pastedCells() {$/;"	f	class:TitleBlockTemplateView
pasted_cells_	titleblock/templatecommands.h	/^	QHash<TitleBlockCell *, TitleBlockCell> pasted_cells_;$/;"	m	class:PasteTemplateCellsCommand
path	editor/graphicspart/partline.cpp	/^QPainterPath PartLine::path() const$/;"	f	class:PartLine
path	elementslocation.cpp	/^QString ElementsLocation::path() const {$/;"	f	class:ElementsLocation
path	titleblock/templatescollection.cpp	/^QString TitleBlockTemplatesFilesCollection::path(const QString &template_name) const {$/;"	f	class:TitleBlockTemplatesFilesCollection
pathFromXml	qetgraphicsitem/conductor.cpp	/^bool Conductor::pathFromXml(const QDomElement &e) {$/;"	f	class:Conductor
pathName	elementscollection.cpp	/^QString ElementsCollection::pathName() const {$/;"	f	class:ElementsCollection
pathName	fileelementdefinition.cpp	/^QString FileElementDefinition::pathName() const {$/;"	f	class:FileElementDefinition
pathName	fileelementscategory.cpp	/^QString FileElementsCategory::pathName() const {$/;"	f	class:FileElementsCategory
pathName	xmlelementdefinition.cpp	/^QString XmlElementDefinition::pathName() const {$/;"	f	class:XmlElementDefinition
pathName	xmlelementscategory.cpp	/^QString XmlElementsCategory::pathName() const {$/;"	f	class:XmlElementsCategory
pathNameTitle	qetproject.cpp	/^QString QETProject::pathNameTitle() const {$/;"	f	class:QETProject
path_	elementslocation.h	/^	QString path_;$/;"	m	class:ElementsLocation
path_type	diagramcommands.h	/^	Qt::Corner path_type;$/;"	m	class:ChangeConductorCommand
pdf_choice_	diagramprintdialog.h	/^	QRadioButton *pdf_choice_;$/;"	m	class:DiagramPrintDialog
pdf_icon_	diagramprintdialog.h	/^	QLabel *pdf_icon_;$/;"	m	class:DiagramPrintDialog
penWeight	editor/graphicspart/customelementgraphicpart.cpp	/^qreal CustomElementGraphicPart::penWeight() const$/;"	f	class:CustomElementGraphicPart
pen_and_brush_initialized	qetgraphicsitem/conductor.cpp	/^bool Conductor::pen_and_brush_initialized = false;$/;"	m	class:Conductor	file:
pen_and_brush_initialized	qetgraphicsitem/conductor.h	/^	static bool pen_and_brush_initialized;$/;"	m	class:Conductor
phases	conductorproperties.h	/^	unsigned short int phases;$/;"	m	class:SingleLineProperties
phasesCount	conductorproperties.cpp	/^unsigned short int SingleLineProperties::phasesCount() {$/;"	f	class:SingleLineProperties
pixmap	elementscollectioncache.cpp	/^QPixmap ElementsCollectionCache::pixmap() const {$/;"	f	class:ElementsCollectionCache
pixmap	qetgraphicsitem/element.cpp	/^QPixmap Element::pixmap() {$/;"	f	class:Element
pixmapStorageFormat	elementscollectioncache.cpp	/^QString ElementsCollectionCache::pixmapStorageFormat() const {$/;"	f	class:ElementsCollectionCache
pixmap_	qetgraphicsitem/diagramimageitem.h	/^	QPixmap pixmap_;$/;"	m	class:DiagramImageItem
pixmap_storage_format_	elementscollectioncache.h	/^	QString pixmap_storage_format_; \/\/\/< Storage format for cached pixmaps$/;"	m	class:ElementsCollectionCache
pl	qeticons.cpp	/^		QIcon pl;$/;"	m	namespace:QET::Icons	file:
point1	conductorsegment.h	/^	QPointF point1;$/;"	m	class:ConductorSegment
point2	conductorsegment.h	/^	QPointF point2;$/;"	m	class:ConductorSegment
pointerString	qet.cpp	/^QString QET::pointerString(void *ptr) {$/;"	f	class:QET
pointsCount	qetgraphicsitem/qetshapeitem.cpp	/^int QetShapeItem::pointsCount() const$/;"	f	class:QetShapeItem
pointsToSegments	qetgraphicsitem/conductor.cpp	/^void Conductor::pointsToSegments(QList<QPointF> points_list) {$/;"	f	class:Conductor
points_list	editor/polygoneditor.h	/^	QTreeWidget points_list;$/;"	m	class:PolygonEditor
polygon	editor/editorcommands.h	/^	PartPolygon *polygon;$/;"	m	class:ChangePolygonPointsCommand
polygon	editor/graphicspart/partpolygon.cpp	/^QPolygonF PartPolygon::polygon() const {$/;"	f	class:PartPolygon
polygons	qetgraphicsitem/customelement.cpp	/^QList<QVector<QPointF> *> CustomElement::polygons() const {$/;"	f	class:CustomElement
portrait_	qetprintpreviewdialog.h	/^	QAction *portrait_;$/;"	m	class:QETPrintPreviewDialog
posForText	qetgraphicsitem/conductor.cpp	/^QPointF Conductor::posForText(Qt::Orientations &flag) {$/;"	f	class:Conductor
posMatchesTabRect	qettabbar.cpp	/^bool QETTabBar::posMatchesTabRect(const QRect &rect, const QPoint &pos) const {$/;"	f	class:QETTabBar
position	diagramposition.cpp	/^QPointF DiagramPosition::position() const {$/;"	f	class:DiagramPosition
positionIsASquare	qtextorientationwidget.cpp	/^bool QTextOrientationWidget::positionIsASquare(const QPointF &pos, double *angle_value_ptr) {$/;"	f	class:QTextOrientationWidget
position_	diagramposition.h	/^	QPointF position_;$/;"	m	class:DiagramPosition
potentials	diagram.cpp	/^QList < QSet <Conductor *> > Diagram::potentials() {$/;"	f	class:Diagram
preferredScalingMethod	editor/graphicspart/customelementpart.cpp	/^QET::ScalingMethod CustomElementPart::preferredScalingMethod() const {$/;"	f	class:CustomElementPart
preferredScalingMethod	editor/graphicspart/partpolygon.cpp	/^QET::ScalingMethod PartPolygon::preferredScalingMethod() const {$/;"	f	class:PartPolygon
prefix	properties/xrefproperties.h	/^	QString prefix (const QString &key) const {return m_prefix.value(key);}$/;"	f	class:XRefProperties
preselectCategory	newelementwizard.cpp	/^bool NewElementWizard::preselectCategory(ElementsCategory *category) {$/;"	f	class:NewElementWizard
press_point	qetgraphicsitem/conductor.h	/^	QPointF press_point;$/;"	m	class:Conductor
press_point_	qettabbar.h	/^	QPoint press_point_;$/;"	m	class:QETTabBar
prev_window	qetdiagrameditor.h	/^		QAction *prev_window;        \/\/\/< Switch to the previous document$/;"	m	class:QETDiagramEditor
preview	exportdialog.h	/^		QPushButton *preview;$/;"	m	class:ExportDialog::ExportDiagramLine
preview	qetgraphicsitem/element.h	/^		QPixmap preview;$/;"	m	class:Element
previewScale	qetgraphicsitem/qetshapeitem.cpp	/^void QetShapeItem::previewScale(int factor) {$/;"	f	class:QetShapeItem
preview_	qetprintpreviewdialog.h	/^	QPrintPreviewWidget *preview_;$/;"	m	class:QETPrintPreviewDialog
preview_mapper_	exportdialog.h	/^	QSignalMapper *preview_mapper_;$/;"	m	class:ExportDialog
preview_width_	titleblock/templateview.h	/^	int preview_width_;$/;"	m	class:TitleBlockTemplateView
previous	numerotationcontextcommands.cpp	/^NumerotationContext FolioNum::previous(const NumerotationContext &nc, const int i) const {$/;"	f	class:FolioNum
previous	numerotationcontextcommands.cpp	/^NumerotationContext HundredNum::previous(const NumerotationContext &nc, const int i) const {$/;"	f	class:HundredNum
previous	numerotationcontextcommands.cpp	/^NumerotationContext NumerotationContextCommands::previous() {$/;"	f	class:NumerotationContextCommands
previous	numerotationcontextcommands.cpp	/^NumerotationContext StringNum::previous(const NumerotationContext &nc, const int i) const {$/;"	f	class:StringNum
previous	numerotationcontextcommands.cpp	/^NumerotationContext TenNum::previous(const NumerotationContext &nc, const int i) const {$/;"	f	class:TenNum
previous	numerotationcontextcommands.cpp	/^NumerotationContext UnitNum::previous(const NumerotationContext &nc, const int i) const {$/;"	f	class:UnitNum
previous	orientationset.cpp	/^Qet::Orientation OrientationSet::previous() const {$/;"	f	class:OrientationSet
previousNumber	numerotationcontextcommands.cpp	/^NumerotationContext NumStrategy::previousNumber(const NumerotationContext &nc, const int i) const {$/;"	f	class:NumStrategy
previousOrientation	qet.cpp	/^Qet::Orientation Qet::previousOrientation(Qet::Orientation o) {$/;"	f	class:Qet
previousPage	qetprintpreviewdialog.cpp	/^void QETPrintPreviewDialog::previousPage() {$/;"	f	class:QETPrintPreviewDialog
previousSegment	conductorsegment.cpp	/^ConductorSegment *ConductorSegment::previousSegment()  const {$/;"	f	class:ConductorSegment
previous_filter_	elementspanelwidget.h	/^	QString previous_filter_;$/;"	m	class:ElementsPanelWidget
previous_linked	diagramcommands.h	/^	QList <Element *> previous_linked;$/;"	m	class:LinkElementsCommand
previous_page_	qetprintpreviewdialog.h	/^	QAction *previous_page_;$/;"	m	class:QETPrintPreviewDialog
previous_rotate_by_user_	diagramcommands.h	/^	QHash<ConductorTextItem *, bool> previous_rotate_by_user_;$/;"	m	class:RotateElementsCommand
previous_rotate_by_user_	diagramcommands.h	/^	QHash<ConductorTextItem *, bool> previous_rotate_by_user_;$/;"	m	class:RotateTextsCommand
previous_segment	conductorsegment.h	/^	ConductorSegment *previous_segment;$/;"	m	class:ConductorSegment
previous_terminal_	qetgraphicsitem/terminal.h	/^	Terminal *previous_terminal_;$/;"	m	class:Terminal
previous_text	editor/graphicspart/parttext.h	/^	QString previous_text;$/;"	m	class:PartText
previous_text	editor/graphicspart/parttextfield.h	/^	QString previous_text;$/;"	m	class:PartTextField
previous_text_	qetgraphicsitem/diagramtextitem.h	/^	QString previous_text_;$/;"	m	class:DiagramTextItem
previous_z_value	qetgraphicsitem/conductor.h	/^	qreal previous_z_value;$/;"	m	class:Conductor
primitives	editor/elementscene.cpp	/^QList<CustomElementPart *> ElementScene::primitives() const {$/;"	f	class:ElementScene
print	diagramprintdialog.cpp	/^void DiagramPrintDialog::print(const QList<Diagram *> &diagrams, bool fit_page, const ExportProperties options) {$/;"	f	class:DiagramPrintDialog
print	qetdiagrameditor.h	/^		QAction *print;              \/\/\/< Print diagrams of the current project$/;"	m	class:QETDiagramEditor
printDiagram	diagramprintdialog.cpp	/^void DiagramPrintDialog::printDiagram(Diagram *diagram, bool fit_page, const ExportProperties &options, QPainter *qp, QPrinter *printer) {$/;"	f	class:DiagramPrintDialog
printDialog	qetdiagrameditor.cpp	/^void QETDiagramEditor::printDialog() {$/;"	f	class:QETDiagramEditor
printHelp	qetapp.cpp	/^void QETApp::printHelp()$/;"	f	class:QETApp
printHelpRequested	qetarguments.cpp	/^bool QETArguments::printHelpRequested() const {$/;"	f	class:QETArguments
printLicense	qetapp.cpp	/^void QETApp::printLicense()$/;"	f	class:QETApp
printLicenseRequested	qetarguments.cpp	/^bool QETArguments::printLicenseRequested() const {$/;"	f	class:QETArguments
printProject	projectview.cpp	/^void ProjectView::printProject() {$/;"	f	class:ProjectView
printVersion	qetapp.cpp	/^void QETApp::printVersion()$/;"	f	class:QETApp
printVersionRequested	qetarguments.cpp	/^bool QETArguments::printVersionRequested() const {$/;"	f	class:QETArguments
print_help_	qetarguments.h	/^	bool print_help_;$/;"	m	class:QETArguments
print_license_	qetarguments.h	/^	bool print_license_;$/;"	m	class:QETArguments
print_options_box_	qetprintpreviewdialog.h	/^	QGroupBox *print_options_box_;$/;"	m	class:QETPrintPreviewDialog
print_version_	qetarguments.h	/^	bool print_version_;$/;"	m	class:QETArguments
printer_	diagramprintdialog.h	/^	QPrinter *printer_;$/;"	m	class:DiagramPrintDialog
printer_	qetprintpreviewdialog.h	/^	QPrinter *printer_;$/;"	m	class:QETPrintPreviewDialog
printer_choice_	diagramprintdialog.h	/^	QRadioButton *printer_choice_;$/;"	m	class:DiagramPrintDialog
printer_icon_	diagramprintdialog.h	/^	QLabel *printer_icon_;$/;"	m	class:DiagramPrintDialog
printtype_choice_	diagramprintdialog.h	/^	QButtonGroup *printtype_choice_;$/;"	m	class:DiagramPrintDialog
printtype_label_	diagramprintdialog.h	/^	QLabel *printtype_label_;$/;"	m	class:DiagramPrintDialog
prj_	ui/diagramselection.h	/^	QETProject *prj_;$/;"	m	class:diagramselection
prj_activate	elementspanelwidget.h	/^	QAction *prj_activate, *prj_close, *prj_edit_prop, *prj_prop_diagram, *prj_add_diagram, *prj_del_diagram, *prj_move_diagram_up, *prj_move_diagram_down, *prj_move_diagram_upx10, *prj_move_diagram_downx10;$/;"	m	class:ElementsPanelWidget
prj_add_diagram	elementspanelwidget.h	/^	QAction *prj_activate, *prj_close, *prj_edit_prop, *prj_prop_diagram, *prj_add_diagram, *prj_del_diagram, *prj_move_diagram_up, *prj_move_diagram_down, *prj_move_diagram_upx10, *prj_move_diagram_downx10;$/;"	m	class:ElementsPanelWidget
prj_add_diagram	qetdiagrameditor.h	/^		QAction *prj_add_diagram;    \/\/\/< Add a diagram to the current project.$/;"	m	class:QETDiagramEditor
prj_clean	qetdiagrameditor.h	/^		QAction *prj_clean;          \/\/\/< Clean the content of the curent project by removing useless items$/;"	m	class:QETDiagramEditor
prj_close	elementspanelwidget.h	/^	QAction *prj_activate, *prj_close, *prj_edit_prop, *prj_prop_diagram, *prj_add_diagram, *prj_del_diagram, *prj_move_diagram_up, *prj_move_diagram_down, *prj_move_diagram_upx10, *prj_move_diagram_downx10;$/;"	m	class:ElementsPanelWidget
prj_del_diagram	elementspanelwidget.h	/^	QAction *prj_activate, *prj_close, *prj_edit_prop, *prj_prop_diagram, *prj_add_diagram, *prj_del_diagram, *prj_move_diagram_up, *prj_move_diagram_down, *prj_move_diagram_upx10, *prj_move_diagram_downx10;$/;"	m	class:ElementsPanelWidget
prj_del_diagram	qetdiagrameditor.h	/^		QAction *prj_del_diagram;    \/\/\/< Delete a diagram from the current project$/;"	m	class:QETDiagramEditor
prj_diagramList	qetdiagrameditor.h	/^		QAction *prj_diagramList;    \/\/\/< Sommaire des schemas$/;"	m	class:QETDiagramEditor
prj_edit_prop	elementspanelwidget.h	/^	QAction *prj_activate, *prj_close, *prj_edit_prop, *prj_prop_diagram, *prj_add_diagram, *prj_del_diagram, *prj_move_diagram_up, *prj_move_diagram_down, *prj_move_diagram_upx10, *prj_move_diagram_downx10;$/;"	m	class:ElementsPanelWidget
prj_edit_prop	qetdiagrameditor.h	/^		QAction *prj_edit_prop;      \/\/\/< Edit the properties of the current project.$/;"	m	class:QETDiagramEditor
prj_move_diagram_down	elementspanelwidget.h	/^	QAction *prj_activate, *prj_close, *prj_edit_prop, *prj_prop_diagram, *prj_add_diagram, *prj_del_diagram, *prj_move_diagram_up, *prj_move_diagram_down, *prj_move_diagram_upx10, *prj_move_diagram_downx10;$/;"	m	class:ElementsPanelWidget
prj_move_diagram_downx10	elementspanelwidget.h	/^	QAction *prj_activate, *prj_close, *prj_edit_prop, *prj_prop_diagram, *prj_add_diagram, *prj_del_diagram, *prj_move_diagram_up, *prj_move_diagram_down, *prj_move_diagram_upx10, *prj_move_diagram_downx10;$/;"	m	class:ElementsPanelWidget
prj_move_diagram_up	elementspanelwidget.h	/^	QAction *prj_activate, *prj_close, *prj_edit_prop, *prj_prop_diagram, *prj_add_diagram, *prj_del_diagram, *prj_move_diagram_up, *prj_move_diagram_down, *prj_move_diagram_upx10, *prj_move_diagram_downx10;$/;"	m	class:ElementsPanelWidget
prj_move_diagram_upx10	elementspanelwidget.h	/^	QAction *prj_activate, *prj_close, *prj_edit_prop, *prj_prop_diagram, *prj_add_diagram, *prj_del_diagram, *prj_move_diagram_up, *prj_move_diagram_down, *prj_move_diagram_upx10, *prj_move_diagram_downx10;$/;"	m	class:ElementsPanelWidget
prj_nomenclature	qetdiagrameditor.h	/^		QAction *prj_nomenclature;   \/\/\/< generate nomenclature$/;"	m	class:QETDiagramEditor
prj_prop_diagram	elementspanelwidget.h	/^	QAction *prj_activate, *prj_close, *prj_edit_prop, *prj_prop_diagram, *prj_add_diagram, *prj_del_diagram, *prj_move_diagram_up, *prj_move_diagram_down, *prj_move_diagram_upx10, *prj_move_diagram_downx10;$/;"	m	class:ElementsPanelWidget
profile	qetgraphicsitem/conductor.cpp	/^ConductorProfile Conductor::profile(Qt::Corner path_type) const {$/;"	f	class:Conductor
profiles	qetgraphicsitem/conductor.cpp	/^ConductorProfilesGroup Conductor::profiles() const {$/;"	f	class:Conductor
progressBar	ui/ui_dialogwaiting.h	/^    QProgressBar *progressBar;$/;"	m	class:Ui_DialogWaiting
progress_bar_	elementspanelwidget.h	/^	QProgressBar *progress_bar_;$/;"	m	class:ElementsPanelWidget
project	diagram.cpp	/^QETProject *Diagram::project() const {$/;"	f	class:Diagram
project	diagramschooser.cpp	/^QETProject *DiagramsChooser::project() const {$/;"	f	class:DiagramsChooser
project	elementdefinition.cpp	/^QETProject *ElementDefinition::project() {$/;"	f	class:ElementDefinition
project	elementscategory.cpp	/^QETProject *ElementsCategory::project() {$/;"	f	class:ElementsCategory
project	elementscollection.cpp	/^QETProject *ElementsCollection::project() {$/;"	f	class:ElementsCollection
project	elementslocation.cpp	/^QETProject *ElementsLocation::project() const {$/;"	f	class:ElementsLocation
project	projectconfigpages.cpp	/^QETProject *ProjectConfigPage::project() const {$/;"	f	class:ProjectConfigPage
project	projectview.cpp	/^QETProject *ProjectView::project() {$/;"	f	class:ProjectView
project	qetapp.cpp	/^QETProject *QETApp::project (const uint &id)$/;"	f	class:QETApp
projectDiagramsOrderChanged	genericpanel.cpp	/^void GenericPanel::projectDiagramsOrderChanged(QETProject *project, int from, int to)$/;"	f	class:GenericPanel
projectFiles	qetarguments.cpp	/^QList<QString> QETArguments::projectFiles() const {$/;"	f	class:QETArguments
projectForItem	genericpanel.cpp	/^QETProject *GenericPanel::projectForItem(QTreeWidgetItem *item) const {$/;"	f	class:GenericPanel
projectFromString	qetapp.cpp	/^QETProject *QETApp::projectFromString (const QString &url)$/;"	f	class:QETApp
projectId	qetapp.cpp	/^int QETApp::projectId (const QETProject *project)$/;"	f	class:QETApp
projectIdFromString	qetapp.cpp	/^int QETApp::projectIdFromString (const QString &url)$/;"	f	class:QETApp
projectInformationsChanged	genericpanel.cpp	/^void GenericPanel::projectInformationsChanged(QETProject *project) {$/;"	f	class:GenericPanel
projectOptionsWereModified	qetproject.cpp	/^bool QETProject::projectOptionsWereModified() {$/;"	f	class:QETProject
projectProperties	qetproject.cpp	/^DiagramContext QETProject::projectProperties() {$/;"	f	class:QETProject
projectTitle	projectconfigpages.cpp	/^QString ProjectMainConfigPage::projectTitle() const {$/;"	f	class:ProjectMainConfigPage
projectWasClosed	elementspanel.cpp	/^void ElementsPanel::projectWasClosed(QETProject *project) {$/;"	f	class:ElementsPanel
projectWasClosed	qetdiagrameditor.cpp	/^void QETDiagramEditor::projectWasClosed(ProjectView *project_view) {$/;"	f	class:QETDiagramEditor
projectWasModified	qetproject.cpp	/^bool QETProject::projectWasModified() {$/;"	f	class:QETProject
projectWasOpened	elementspanel.cpp	/^void ElementsPanel::projectWasOpened(QETProject *project) {$/;"	f	class:ElementsPanel
project_	diagram.h	/^		QETProject        *project_;$/;"	m	class:Diagram
project_	diagramprintdialog.h	/^	QETProject *project_;$/;"	m	class:DiagramPrintDialog
project_	diagramschooser.h	/^	QETProject *project_;$/;"	m	class:DiagramsChooser
project_	elementscollection.h	/^	QETProject *project_;$/;"	m	class:ElementsCollection
project_	elementslocation.h	/^	QETProject *project_;$/;"	m	class:ElementsLocation
project_	exportdialog.h	/^	QETProject *project_;$/;"	m	class:ExportDialog
project_	projectconfigpages.h	/^	QETProject *project_; \/\/\/< Currently edited project$/;"	m	class:ProjectConfigPage
project_	projectview.h	/^	QETProject *project_;$/;"	m	class:ProjectView
project_	qetprintpreviewdialog.h	/^	QETProject *project_;$/;"	m	class:QETPrintPreviewDialog
project_	titleblock/templatescollection.h	/^	QETProject *project_;$/;"	m	class:TitleBlockTemplatesProjectCollection
project_files_	qetarguments.h	/^	QList<QString> project_files_;$/;"	m	class:QETArguments
project_properties_	qetproject.h	/^	DiagramContext project_properties_;$/;"	m	class:QETProject
project_qet_version_	qetproject.h	/^	qreal project_qet_version_;$/;"	m	class:QETProject
project_title_	qetproject.h	/^	QString project_title_;$/;"	m	class:QETProject
project_variables_	projectconfigpages.h	/^	DiagramContextWidget *project_variables_;$/;"	m	class:ProjectMainConfigPage
project_variables_label_	projectconfigpages.h	/^	QLabel *project_variables_label_;$/;"	m	class:ProjectMainConfigPage
projectsRecentFiles	qetapp.cpp	/^RecentFiles *QETApp::projectsRecentFiles()$/;"	f	class:QETApp
projects_	genericpanel.h	/^	QHash<QETProject *, QTreeWidgetItem *>               projects_;     \/\/\/< Allow quick retrieval of the item representing a given project$/;"	m	class:GenericPanel
projects_recent_files_	qetapp.cpp	/^RecentFiles *QETApp::projects_recent_files_ = 0;$/;"	m	class:QETApp	file:
projects_recent_files_	qetapp.h	/^	static RecentFiles *projects_recent_files_;$/;"	m	class:QETApp
projects_to_display_	elementspanel.h	/^	QSet<QETProject *> projects_to_display_;       \/\/\/< list of projects that have been added to this panel$/;"	m	class:ElementsPanel
projects_view_mode_	configpages.h	/^	QGroupBox *projects_view_mode_;$/;"	m	class:GeneralConfigurationPage
properties	qetgraphicsitem/conductor.cpp	/^ConductorProperties Conductor::properties() const {$/;"	f	class:Conductor
properties	ui/borderpropertieswidget.cpp	/^const BorderProperties &BorderPropertiesWidget::properties () {$/;"	f	class:BorderPropertiesWidget
properties	ui/conductorpropertiesdialog.cpp	/^ConductorProperties ConductorPropertiesDialog::properties() const {$/;"	f	class:ConductorPropertiesDialog
properties	ui/conductorpropertieswidget.cpp	/^ConductorProperties ConductorPropertiesWidget::properties() const {$/;"	f	class:ConductorPropertiesWidget
properties	ui/titleblockpropertieswidget.cpp	/^TitleBlockProperties TitleBlockPropertiesWidget::properties() const {$/;"	f	class:TitleBlockPropertiesWidget
properties	ui/xrefpropertieswidget.cpp	/^QHash <QString, XRefProperties> XRefPropertiesWidget::properties(){$/;"	f	class:XRefPropertiesWidget
properties_	qetgraphicsitem/conductor.h	/^	ConductorProperties properties_;$/;"	m	class:Conductor
property	editor/editorcommands.h	/^	const char *property;$/;"	m	class:ChangePartCommand
property	editor/graphicspart/customelementgraphicpart.h	/^		virtual QVariant property    (const char *name) const                  {return QObject::property(name);}$/;"	f	class:CustomElementGraphicPart
property	editor/graphicspart/parttext.h	/^	QVariant property(const char *name) const {return QGraphicsTextItem::property(name);}$/;"	f	class:PartText
property	editor/graphicspart/parttextfield.h	/^	virtual QVariant property(const char *name) const {return QGraphicsTextItem::property(name);}$/;"	f	class:PartTextField
protocol	elementdefinition.cpp	/^QString ElementDefinition::protocol() {$/;"	f	class:ElementDefinition
protocol	elementscategory.cpp	/^QString ElementsCategory::protocol() {$/;"	f	class:ElementsCategory
protocol	elementscollection.cpp	/^QString ElementsCollection::protocol() {$/;"	f	class:ElementsCollection
protocol	titleblock/templatelocation.cpp	/^QString TitleBlockTemplateLocation::protocol() const {$/;"	f	class:TitleBlockTemplateLocation
protocol	titleblock/templatescollection.cpp	/^QString TitleBlockTemplatesCollection::protocol() const {$/;"	f	class:TitleBlockTemplatesCollection
protocol	titleblock/templatescollection.cpp	/^QString TitleBlockTemplatesProjectCollection::protocol() const {$/;"	f	class:TitleBlockTemplatesProjectCollection
protocol_	elementscollection.h	/^	QString protocol_;$/;"	m	class:ElementsCollection
protocol_	titleblock/templatescollection.h	/^	QString protocol_;$/;"	m	class:TitleBlockTemplatesCollection
ps_choice_	diagramprintdialog.h	/^	QRadioButton *ps_choice_;$/;"	m	class:DiagramPrintDialog
ps_icon_	diagramprintdialog.h	/^	QLabel *ps_icon_;$/;"	m	class:DiagramPrintDialog
pt	qeticons.cpp	/^		QIcon pt;$/;"	m	namespace:QET::Icons	file:
pushButton_annotation	ui/ui_dialogautonum.h	/^    QPushButton *pushButton_annotation;$/;"	m	class:Ui_DialogAutoNum
pushButton_close	ui/ui_dialogautonum.h	/^    QPushButton *pushButton_close;$/;"	m	class:Ui_DialogAutoNum
pushButton_delete	ui/ui_dialogautonum.h	/^    QPushButton *pushButton_delete;$/;"	m	class:Ui_DialogAutoNum
pushCellUndoCommand	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::pushCellUndoCommand(ModifyTitleBlockCellCommand *command) {$/;"	f	class:QETTitleBlockTemplateEditor
pushGridUndoCommand	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::pushGridUndoCommand(TitleBlockTemplateCommand *command) {$/;"	f	class:QETTitleBlockTemplateEditor
pushUndoCommand	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::pushUndoCommand(QUndoCommand *command) {$/;"	f	class:QETTitleBlockTemplateEditor
qHash	elementslocation.cpp	/^uint qHash(const ElementsLocation &location) {$/;"	f
qHash	titleblock/templatelocation.cpp	/^uint qHash(const TitleBlockTemplateLocation &location) {$/;"	f
qdesigner_internal	richtext/richtexteditor.cpp	/^namespace qdesigner_internal {$/;"	n	file:
qdesigner_internal	richtext/richtexteditor_p.h	/^namespace qdesigner_internal {$/;"	n
qdw_pa	qetdiagrameditor.h	/^		QDockWidget *qdw_pa;$/;"	m	class:QETDiagramEditor
qdw_undo	qetdiagrameditor.h	/^		QDockWidget *qdw_undo;$/;"	m	class:QETDiagramEditor
qetTranslator	qetapp.h	/^	QTranslator qetTranslator;$/;"	m	class:QETApp
qet_arguments_	qetapp.h	/^	QETArguments qet_arguments_;        \/\/\/< Comand-line arguments parser$/;"	m	class:QETApp
qet_settings	qetapp.h	/^	QSettings *qet_settings;$/;"	m	class:QETApp
qgiManager	diagram.h	/^inline QGIManager &Diagram::qgiManager() {$/;"	f	class:Diagram
qgiManager	editor/elementscene.cpp	/^QGIManager &ElementScene::qgiManager() {$/;"	f	class:ElementScene
qgi_manager	editor/elementscene.h	/^		QGIManager qgi_manager;$/;"	m	class:ElementScene
qgi_manager	qgimanager.h	/^	QHash<QGraphicsItem *, int> qgi_manager;$/;"	m	class:QGIManager
qgi_manager_	diagram.h	/^		QGIManager        *qgi_manager_;$/;"	m	class:Diagram
qle_filename	newelementwizard.h	/^	QFileNameEdit *qle_filename;$/;"	m	class:NewElementWizard
qle_text	editor/texteditor.h	/^	QLineEdit *qle_text;$/;"	m	class:TextEditor
qle_text	editor/textfieldeditor.h	/^	QLineEdit *qle_text;$/;"	m	class:TextFieldEditor
qle_x	editor/terminaleditor.h	/^	QDoubleSpinBox *qle_x, *qle_y;$/;"	m	class:TerminalEditor
qle_x	editor/texteditor.h	/^	QDoubleSpinBox *qle_x, *qle_y;$/;"	m	class:TextEditor
qle_x	editor/textfieldeditor.h	/^	QDoubleSpinBox *qle_x, *qle_y;$/;"	m	class:TextFieldEditor
qle_y	editor/terminaleditor.h	/^	QDoubleSpinBox *qle_x, *qle_y;$/;"	m	class:TerminalEditor
qle_y	editor/texteditor.h	/^	QDoubleSpinBox *qle_x, *qle_y;$/;"	m	class:TextEditor
qle_y	editor/textfieldeditor.h	/^	QDoubleSpinBox *qle_x, *qle_y;$/;"	m	class:TextFieldEditor
qsti	qetapp.h	/^	QSystemTrayIcon *qsti;$/;"	m	class:QETApp
qtTranslator	qetapp.h	/^	QTranslator qtTranslator;$/;"	m	class:QETApp
question	qetmessagebox.cpp	/^QMessageBox::StandardButton QET::MessageBox::question   (QWidget *parent, const QString &title, const QString &text, QMessageBox::StandardButtons buttons, QMessageBox::StandardButton defaultButton) {$/;"	f	class:QET::MessageBox
quit	editor/qetelementeditor.h	/^	QAction *new_element, *open, *open_file, *save, *save_as, *save_as_file, *reload, *quit;$/;"	m	class:QETElementEditor
quit	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::quit() {$/;"	f	class:QETTitleBlockTemplateEditor
quitQET	qetapp.cpp	/^void QETApp::quitQET()$/;"	f	class:QETApp
quit_	titleblock/qettemplateeditor.h	/^	QAction *new_, *open_, *open_from_file_, *save_, *save_as_, *save_as_file_, *quit_;$/;"	m	class:QETTitleBlockTemplateEditor
quit_editor	qetdiagrameditor.h	/^		QAction *quit_editor;        \/\/\/< Quit the diagram editor$/;"	m	class:QETDiagramEditor
quitter_qet	qetapp.h	/^	QAction *quitter_qet;$/;"	m	class:QETApp
rElementInformations	qetgraphicsitem/element.h	/^		DiagramContext& rElementInformations   ()                   {return element_informations_;}$/;"	f	class:Element
radioButton_component	ui/ui_dialogautonum.h	/^    QRadioButton *radioButton_component;$/;"	m	class:Ui_DialogAutoNum
radioButton_conductor	ui/ui_dialogautonum.h	/^    QRadioButton *radioButton_conductor;$/;"	m	class:Ui_DialogAutoNum
radioButtonleftMargin	integrationmoveelementshandler.cpp	/^void IntegrationMoveElementsHandler::radioButtonleftMargin(QRadioButton *button) {$/;"	f	class:IntegrationMoveElementsHandler
radioButtonleftMargin	titleblock/integrationmovetemplateshandler.cpp	/^void IntegrationMoveTitleBlockTemplatesHandler::radioButtonleftMargin(QRadioButton *button) {$/;"	f	class:IntegrationMoveTitleBlockTemplatesHandler
ratio_mapper_	exportdialog.h	/^	QSignalMapper *ratio_mapper_;$/;"	m	class:ExportDialog
readDefaultPropertiesXml	qetproject.cpp	/^void QETProject::readDefaultPropertiesXml() {$/;"	f	class:QETProject
readDiagramsXml	qetproject.cpp	/^void QETProject::readDiagramsXml() {$/;"	f	class:QETProject
readElementsCollectionXml	qetproject.cpp	/^void QETProject::readElementsCollectionXml() {$/;"	f	class:QETProject
readEmbeddedTemplatesXml	qetproject.cpp	/^void QETProject::readEmbeddedTemplatesXml() {$/;"	f	class:QETProject
readProjectPropertiesXml	qetproject.cpp	/^void QETProject::readProjectPropertiesXml() {$/;"	f	class:QETProject
readProjectXml	qetproject.cpp	/^void QETProject::readProjectXml() {$/;"	f	class:QETProject
readProperties	qetgraphicsitem/conductor.cpp	/^void Conductor::readProperties() {$/;"	f	class:Conductor
readSettings	editor/qetelementeditor.cpp	/^void QETElementEditor::readSettings() {$/;"	f	class:QETElementEditor
readSettings	qetdiagrameditor.cpp	/^void QETDiagramEditor::readSettings() {$/;"	f	class:QETDiagramEditor
readSettings	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::readSettings() {$/;"	f	class:QETTitleBlockTemplateEditor
readStyle	conductorproperties.cpp	/^void ConductorProperties::readStyle(const QString &style_string) {$/;"	f	class:ConductorProperties
readValuesFromProject	projectconfigpages.cpp	/^void ProjectAutoNumConfigPage::readValuesFromProject() {$/;"	f	class:ProjectAutoNumConfigPage
readValuesFromProject	projectconfigpages.cpp	/^void ProjectMainConfigPage::readValuesFromProject() {$/;"	f	class:ProjectMainConfigPage
read_only	editor/qetelementeditor.h	/^	bool read_only;$/;"	m	class:QETElementEditor
read_only	nameslistwidget.h	/^	bool read_only;$/;"	m	class:NamesListWidget
read_only_	qetproject.h	/^	bool read_only_;$/;"	m	class:QETProject
read_only_	qtextorientationwidget.h	/^	bool read_only_;$/;"	m	class:QTextOrientationWidget
read_only_	titleblock/dimensionwidget.h	/^	bool read_only_;                   \/\/\/< Whether or not this widget allow edition of the displayed dimension$/;"	m	class:TitleBlockDimensionWidget
read_only_	titleblock/qettemplateeditor.h	/^	bool read_only_;$/;"	m	class:QETTitleBlockTemplateEditor
read_only_	titleblock/templatecellwidget.h	/^	bool read_only_;$/;"	m	class:TitleBlockTemplateCellWidget
read_only_	titleblock/templatelogomanager.h	/^	bool read_only_;                       \/\/\/< Whether this logo manager should allow logo edition (renaming, addition, deletion)$/;"	m	class:TitleBlockTemplateLogoManager
read_only_	titleblock/templateview.h	/^	bool read_only_;                       \/\/\/< Boolean stating whether this view allows template edition$/;"	m	class:TitleBlockTemplateView
read_only_file_path_	qetproject.h	/^	QString read_only_file_path_;$/;"	m	class:QETProject
realPath	qetapp.cpp	/^QString QETApp::realPath (const QString &sym_path)$/;"	f	class:QETApp
realSize	editor/graphicspart/parttext.h	/^		qreal realSize() const {return real_font_size_;}$/;"	f	class:PartText
realSize	editor/graphicspart/parttextfield.h	/^		qreal realSize() const {return real_font_size_;}$/;"	f	class:PartTextField
real_font_size_	editor/graphicspart/parttext.h	/^	qreal real_font_size_;$/;"	m	class:PartText
real_font_size_	editor/graphicspart/parttextfield.h	/^	qreal real_font_size_;$/;"	m	class:PartTextField
rebuildDiagramsMap	projectview.cpp	/^void ProjectView::rebuildDiagramsMap() {$/;"	f	class:ProjectView
receiveMessage	qetsingleapplication.cpp	/^void QETSingleApplication::receiveMessage() {$/;"	f	class:QETSingleApplication
rect	editor/graphicspart/abstractpartellipse.cpp	/^QRectF AbstractPartEllipse::rect() const {$/;"	f	class:AbstractPartEllipse
rect	editor/graphicspart/partrectangle.cpp	/^QRectF PartRectangle::rect() const {$/;"	f	class:PartRectangle
rectTopLeft	editor/graphicspart/partrectangle.cpp	/^QPointF PartRectangle::rectTopLeft() const {$/;"	f	class:PartRectangle
rectangles	diagramfoliolist.h	/^	virtual QList<QRectF *> rectangles() const	{return list_rectangles_;}$/;"	f	class:DiagramFolioList
rectangles	qetgraphicsitem/customelement.cpp	/^QList<QRectF *> CustomElement::rectangles() const {$/;"	f	class:CustomElement
recursive_	moveelementsdescription.h	/^	bool recursive_;$/;"	m	class:MoveElementsDescription
red_color	editor/styleeditor.h	/^		QRadioButton *black_color, *white_color,  *normal_style, *dashed_style, *dashdotted_style, *dotted_style, *green_color, *red_color, *blue_color;$/;"	m	class:StyleEditor
red_filling	editor/styleeditor.h	/^		QRadioButton *black_filling, *white_filling, *green_filling, *red_filling, *blue_filling;$/;"	m	class:StyleEditor
redo	diagramcommands.cpp	/^void ChangeBorderCommand::redo() {$/;"	f	class:ChangeBorderCommand
redo	diagramcommands.cpp	/^void ChangeConductorCommand::redo() {$/;"	f	class:ChangeConductorCommand
redo	diagramcommands.cpp	/^void ChangeConductorPropertiesCommand::redo() {$/;"	f	class:ChangeConductorPropertiesCommand
redo	diagramcommands.cpp	/^void ChangeDiagramTextCommand::redo() {$/;"	f	class:ChangeDiagramTextCommand
redo	diagramcommands.cpp	/^void ChangeSeveralConductorsPropertiesCommand::redo() {$/;"	f	class:ChangeSeveralConductorsPropertiesCommand
redo	diagramcommands.cpp	/^void ChangeShapeStyleCommand::redo() {$/;"	f	class:ChangeShapeStyleCommand
redo	diagramcommands.cpp	/^void ChangeTitleBlockCommand::redo() {$/;"	f	class:ChangeTitleBlockCommand
redo	diagramcommands.cpp	/^void DeleteElementsCommand::redo() {$/;"	f	class:DeleteElementsCommand
redo	diagramcommands.cpp	/^void ItemResizerCommand::redo() {$/;"	f	class:ItemResizerCommand
redo	diagramcommands.cpp	/^void LinkElementsCommand::redo() {$/;"	f	class:LinkElementsCommand
redo	diagramcommands.cpp	/^void MoveConductorsTextsCommand::redo() {$/;"	f	class:MoveConductorsTextsCommand
redo	diagramcommands.cpp	/^void MoveElementsCommand::redo() {$/;"	f	class:MoveElementsCommand
redo	diagramcommands.cpp	/^void MoveElementsTextsCommand::redo() {$/;"	f	class:MoveElementsTextsCommand
redo	diagramcommands.cpp	/^void PasteDiagramCommand::redo() {$/;"	f	class:PasteDiagramCommand
redo	diagramcommands.cpp	/^void ResetConductorCommand::redo() {$/;"	f	class:ResetConductorCommand
redo	diagramcommands.cpp	/^void RotateElementsCommand::redo() {$/;"	f	class:RotateElementsCommand
redo	diagramcommands.cpp	/^void RotateTextsCommand::redo() {$/;"	f	class:RotateTextsCommand
redo	diagramcommands.cpp	/^void unlinkElementsCommand::redo() {$/;"	f	class:unlinkElementsCommand
redo	diagramcommands.h	/^		virtual void redo() {$/;"	f	class:AddItemCommand
redo	editor/editorcommands.cpp	/^void AddPartCommand::redo() {$/;"	f	class:AddPartCommand
redo	editor/editorcommands.cpp	/^void ChangeInformationsCommand::redo() {$/;"	f	class:ChangeInformationsCommand
redo	editor/editorcommands.cpp	/^void ChangeNamesCommand::redo() {$/;"	f	class:ChangeNamesCommand
redo	editor/editorcommands.cpp	/^void ChangePartCommand::redo()$/;"	f	class:ChangePartCommand
redo	editor/editorcommands.cpp	/^void ChangePolygonPointsCommand::redo() {$/;"	f	class:ChangePolygonPointsCommand
redo	editor/editorcommands.cpp	/^void ChangePropertiesCommand::redo() {$/;"	f	class:ChangePropertiesCommand
redo	editor/editorcommands.cpp	/^void ChangeZValueCommand::redo() {$/;"	f	class:ChangeZValueCommand
redo	editor/editorcommands.cpp	/^void DeletePartsCommand::redo() {$/;"	f	class:DeletePartsCommand
redo	editor/editorcommands.cpp	/^void MovePartsCommand::redo() {$/;"	f	class:MovePartsCommand
redo	editor/editorcommands.cpp	/^void PastePartsCommand::redo() {$/;"	f	class:PastePartsCommand
redo	editor/editorcommands.cpp	/^void ScalePartsCommand::redo() {$/;"	f	class:ScalePartsCommand
redo	editor/qetelementeditor.h	/^	QAction *undo, *redo;$/;"	m	class:QETElementEditor
redo	qetdiagrameditor.h	/^		QAction *redo;               \/\/\/< Redo the latest cancelled operation$/;"	m	class:QETDiagramEditor
redo	titleblock/templatecommands.cpp	/^void ChangeTemplateInformationsCommand::redo() {$/;"	f	class:ChangeTemplateInformationsCommand
redo	titleblock/templatecommands.cpp	/^void CutTemplateCellsCommand::redo() {$/;"	f	class:CutTemplateCellsCommand
redo	titleblock/templatecommands.cpp	/^void MergeCellsCommand::redo() {$/;"	f	class:MergeCellsCommand
redo	titleblock/templatecommands.cpp	/^void ModifyTemplateDimension::redo() {$/;"	f	class:ModifyTemplateDimension
redo	titleblock/templatecommands.cpp	/^void ModifyTemplateGridCommand::redo() {$/;"	f	class:ModifyTemplateGridCommand
redo	titleblock/templatecommands.cpp	/^void ModifyTitleBlockCellCommand::redo() {$/;"	f	class:ModifyTitleBlockCellCommand
redo	titleblock/templatecommands.cpp	/^void PasteTemplateCellsCommand::redo() {$/;"	f	class:PasteTemplateCellsCommand
redo	titleblock/templatecommands.cpp	/^void SplitCellsCommand::redo() {$/;"	f	class:SplitCellsCommand
redo	undocommand/changeelementinformationcommand.cpp	/^void ChangeElementInformationCommand::redo() {$/;"	f	class:ChangeElementInformationCommand
redo_	titleblock/qettemplateeditor.h	/^	QAction *undo_, *redo_, *cut_, *copy_, *paste_, *edit_logos_, *edit_info_, *add_row_, *add_col_, *merge_cells_, *split_cell_;$/;"	m	class:QETTitleBlockTemplateEditor
redo_hash	editor/editorcommands.h	/^	QHash<QGraphicsItem *, qreal> redo_hash;$/;"	m	class:ChangeZValueCommand
reduceDiagramEditors	qetapp.cpp	/^void QETApp::reduceDiagramEditors()$/;"	f	class:QETApp
reduceElementEditors	qetapp.cpp	/^void QETApp::reduceElementEditors()$/;"	f	class:QETApp
reduceEveryEditor	qetapp.cpp	/^void QETApp::reduceEveryEditor()$/;"	f	class:QETApp
reduceTitleBlockTemplateEditors	qetapp.cpp	/^void QETApp::reduceTitleBlockTemplateEditors()$/;"	f	class:QETApp
reduce_appli	qetapp.h	/^	QAction *reduce_appli;$/;"	m	class:QETApp
reduce_diagrams	qetapp.h	/^	QAction *reduce_diagrams;$/;"	m	class:QETApp
reduce_elements	qetapp.h	/^	QAction *reduce_elements;$/;"	m	class:QETApp
reduce_templates	qetapp.h	/^	QAction *reduce_templates;$/;"	m	class:QETApp
reference_view_	editor/elementview.h	/^	QPointF reference_view_;$/;"	m	class:ElementView
refresh	titleblock/templateview.cpp	/^void TitleBlockTemplateView::refresh() {$/;"	f	class:TitleBlockTemplateView
refreshElement	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::refreshElement(const ElementsLocation &location) {$/;"	f	class:GenericPanel
refreshElementsCategory	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::refreshElementsCategory(const ElementsLocation &location) {$/;"	f	class:GenericPanel
refreshFormatLabel	diagramcontextwidget.cpp	/^void DiagramContextWidget::refreshFormatLabel() {$/;"	f	class:DiagramContextWidget
refreshLayout	titleblock/templatecommands.cpp	/^void TitleBlockTemplateCommand::refreshLayout() {$/;"	f	class:TitleBlockTemplateCommand
refreshView	titleblock/templatecommands.cpp	/^void TitleBlockTemplateCommand::refreshView() {$/;"	f	class:TitleBlockTemplateCommand
regenerateTextLabel	diagramcommands.cpp	/^void MoveConductorsTextsCommand::regenerateTextLabel() {$/;"	f	class:MoveConductorsTextsCommand
regexp_	qfilenameedit.h	/^	QRegExp regexp_;$/;"	m	class:QFileNameEdit
registerProject	qetapp.cpp	/^bool QETApp::registerProject (QETProject *project)$/;"	f	class:QETApp
registeredProjects	qetapp.cpp	/^QMap<uint, QETProject *> QETApp::registeredProjects()$/;"	f	class:QETApp
registered_cells_	titleblocktemplate.h	/^	QList<TitleBlockCell *> registered_cells_;       \/\/\/< Cells objects created rattached to this template, but not mandatorily used$/;"	m	class:TitleBlockTemplate
registered_projects_	qetapp.cpp	/^QMap<uint, QETProject *> QETApp::registered_projects_ = QMap<uint, QETProject *>();$/;"	m	class:QETApp	file:
registered_projects_	qetapp.h	/^	static QMap<uint, QETProject *> registered_projects_;$/;"	m	class:QETApp
relatedConductors	qetgraphicsitem/conductor.cpp	/^QList <Conductor *> relatedConductors(const Conductor *conductor) {$/;"	f
relatedPotentialConductors	qetgraphicsitem/conductor.cpp	/^QSet<Conductor *> Conductor::relatedPotentialConductors(const bool all_diagram, QList <Terminal *> *t_list) {$/;"	f	class:Conductor
relatedPotentialTerminal	qetgraphicsitem/terminal.cpp	/^Terminal * relatedPotentialTerminal (const Terminal *terminal, const bool all_diagram) {$/;"	f
relative_button_	titleblock/dimensionwidget.h	/^	QRadioButton *relative_button_;    \/\/\/< Radio button to indicate the length is relative to the total length$/;"	m	class:TitleBlockDimensionWidget
release	qgimanager.cpp	/^void QGIManager::release(QGraphicsItem *qgi) {$/;"	f	class:QGIManager
release	qgimanager.cpp	/^void QGIManager::release(const QList<QGraphicsItem *> &qgis) {$/;"	f	class:QGIManager
reload	editor/qetelementeditor.h	/^	QAction *new_element, *open, *open_file, *save, *save_as, *save_as_file, *reload, *quit;$/;"	m	class:QETElementEditor
reload	elementscategorieslist.cpp	/^void ElementsCategoriesList::reload() {$/;"	f	class:ElementsCategoriesList
reload	elementspanel.cpp	/^void ElementsPanel::reload(bool reload_collections) {$/;"	f	class:ElementsPanel
reload	elementspanelwidget.h	/^	QAction *reload;$/;"	m	class:ElementsPanelWidget
reload	fileelementdefinition.cpp	/^void FileElementDefinition::reload() {$/;"	f	class:FileElementDefinition
reload	fileelementscategory.cpp	/^void FileElementsCategory::reload() {$/;"	f	class:FileElementsCategory
reload	fileelementscollection.cpp	/^void FileElementsCollection::reload() {$/;"	f	class:FileElementsCollection
reload	xmlelementdefinition.cpp	/^void XmlElementDefinition::reload() {$/;"	f	class:XmlElementDefinition
reload	xmlelementscategory.cpp	/^void XmlElementsCategory::reload() {$/;"	f	class:XmlElementsCategory
reload	xmlelementscollection.cpp	/^void XmlElementsCollection::reload() {$/;"	f	class:XmlElementsCollection
reloadAndFilter	elementspanelwidget.cpp	/^void ElementsPanelWidget::reloadAndFilter() {$/;"	f	class:ElementsPanelWidget
reloadCollections	elementspanel.cpp	/^void ElementsPanel::reloadCollections() {$/;"	f	class:ElementsPanel
reload_mutex_	fileelementscollection.h	/^	QMutex reload_mutex_;       \/\/\/< Mutex used to avoid loading a collection twice at the same time$/;"	m	class:FileElementsCollection
remaining_button_	titleblock/dimensionwidget.h	/^	QRadioButton *remaining_button_;   \/\/\/< Radio button to indicate the length is relative to the remaining length$/;"	m	class:TitleBlockDimensionWidget
remove	elementscollection.cpp	/^bool ElementsCollection::remove() {$/;"	f	class:ElementsCollection
remove	fileelementdefinition.cpp	/^bool FileElementDefinition::remove() {$/;"	f	class:FileElementDefinition
remove	fileelementscategory.cpp	/^bool FileElementsCategory::remove() {$/;"	f	class:FileElementsCategory
remove	xmlelementdefinition.cpp	/^bool XmlElementDefinition::remove() {$/;"	f	class:XmlElementDefinition
remove	xmlelementscategory.cpp	/^bool XmlElementsCategory::remove() {$/;"	f	class:XmlElementsCategory
removeCategory	elementscategorieswidget.cpp	/^void ElementsCategoriesWidget::removeCategory() {$/;"	f	class:ElementsCategoriesWidget
removeColumn	bordertitleblock.cpp	/^void BorderTitleBlock::removeColumn() {$/;"	f	class:BorderTitleBlock
removeColumn	diagramview.cpp	/^void DiagramView::removeColumn() {$/;"	f	class:DiagramView
removeConductor	qetgraphicsitem/terminal.cpp	/^void Terminal::removeConductor(Conductor *f) {$/;"	f	class:Terminal
removeConductorAutonum	qetproject.cpp	/^void QETProject::removeConductorAutonum(QString key) {$/;"	f	class:QETProject
removeContent	elementdefinition.cpp	/^bool ElementDefinition::removeContent() {$/;"	f	class:ElementDefinition
removeContent	elementscollection.cpp	/^bool ElementsCollection::removeContent() {$/;"	f	class:ElementsCollection
removeContent	fileelementscategory.cpp	/^bool FileElementsCategory::removeContent() {$/;"	f	class:FileElementsCategory
removeContent	xmlelementscategory.cpp	/^bool XmlElementsCategory::removeContent() {$/;"	f	class:XmlElementsCategory
removeContext	projectconfigpages.cpp	/^void ProjectAutoNumConfigPage::removeContext() {$/;"	f	class:ProjectAutoNumConfigPage
removeDiagram	projectview.cpp	/^void ProjectView::removeDiagram(Diagram *diagram) {$/;"	f	class:ProjectView
removeDiagram	projectview.cpp	/^void ProjectView::removeDiagram(DiagramView *diagram_view) {$/;"	f	class:ProjectView
removeDiagram	qetdiagrameditor.cpp	/^void QETDiagramEditor::removeDiagram(Diagram *diagram) {$/;"	f	class:QETDiagramEditor
removeDiagram	qetproject.cpp	/^void QETProject::removeDiagram(Diagram *diagram) {$/;"	f	class:QETProject
removeDiagramFromProject	qetdiagrameditor.cpp	/^void QETDiagramEditor::removeDiagramFromProject() {$/;"	f	class:QETDiagramEditor
removeDiagramsTitleBlockTemplate	qetproject.cpp	/^void QETProject::removeDiagramsTitleBlockTemplate(TitleBlockTemplatesCollection *collection, const QString &template_name) {$/;"	f	class:QETProject
removeItem	diagram.cpp	/^void Diagram::removeItem(Conductor *conductor) {$/;"	f	class:Diagram
removeItem	diagram.cpp	/^void Diagram::removeItem(Element *element) {$/;"	f	class:Diagram
removeItem	diagram.cpp	/^void Diagram::removeItem(IndependentTextItem *iti) {$/;"	f	class:Diagram
removeItem	diagram.cpp	/^void Diagram::removeItem(QGraphicsItem *item) {$/;"	f	class:Diagram
removeItem	titleblock/templateview.cpp	/^void TitleBlockTemplateView::removeItem(QGraphicsLayoutItem *item) {$/;"	f	class:TitleBlockTemplateView
removeLastPoint	editor/graphicspart/partpolygon.cpp	/^void PartPolygon::removeLastPoint()$/;"	f	class:PartPolygon
removeLogo	titleblock/templatelogomanager.cpp	/^void TitleBlockTemplateLogoManager::removeLogo() {$/;"	f	class:TitleBlockTemplateLogoManager
removeLogo	titleblocktemplate.cpp	/^bool TitleBlockTemplate::removeLogo(const QString &logo_name) {$/;"	f	class:TitleBlockTemplate
removeName	nameslist.cpp	/^void NamesList::removeName(const QString &lang) {$/;"	f	class:NamesList
removeObsoleteItems	genericpanel.cpp	/^void GenericPanel::removeObsoleteItems(const QList<T> &expected_items, QTreeWidgetItem *item, QET::ItemType type, bool recursive) {$/;"	f	class:GenericPanel
removePoints	qetgraphicsitem/qetshapeitem.cpp	/^void QetShapeItem::removePoints(int number)$/;"	f	class:QetShapeItem
removeRow	bordertitleblock.cpp	/^void BorderTitleBlock::removeRow() {$/;"	f	class:BorderTitleBlock
removeRow	diagramview.cpp	/^void DiagramView::removeRow() {$/;"	f	class:DiagramView
removeTemplate	titleblock/templatescollection.cpp	/^void TitleBlockTemplatesFilesCollection::removeTemplate(const QString &template_name) {$/;"	f	class:TitleBlockTemplatesFilesCollection
removeTemplate	titleblock/templatescollection.cpp	/^void TitleBlockTemplatesProjectCollection::removeTemplate(const QString &template_name) {$/;"	f	class:TitleBlockTemplatesProjectCollection
removeTemplateByName	qetproject.cpp	/^void QETProject::removeTemplateByName(const QString &template_name) {$/;"	f	class:QETProject
removeTitleBlockTemplate	elementspanelwidget.cpp	/^void ElementsPanelWidget::removeTitleBlockTemplate() {$/;"	f	class:ElementsPanelWidget
remove_button	ui/ui_selectautonumw.h	/^    QPushButton *remove_button;$/;"	m	class:Ui_SelectAutonumW
removed_content	diagramcommands.h	/^	DiagramContent removed_content;$/;"	m	class:DeleteElementsCommand
renameLogo	titleblock/templatelogomanager.cpp	/^void TitleBlockTemplateLogoManager::renameLogo() {$/;"	f	class:TitleBlockTemplateLogoManager
renameLogo	titleblocktemplate.cpp	/^bool TitleBlockTemplate::renameLogo(const QString &logo_name, const QString &new_name) {$/;"	f	class:TitleBlockTemplate
rename_	basicmoveelementshandler.h	/^	QString rename_;$/;"	m	class:BasicMoveElementsHandler
rename_	integrationmoveelementshandler.h	/^	QString rename_;                      \/\/\/< Name to be used when renaming the integrated element$/;"	m	class:IntegrationMoveElementsHandler
rename_	interactivemoveelementshandler.h	/^	QString rename_;              \/\/\/< Name to be used when renaming an item$/;"	m	class:InteractiveMoveElementsHandler
rename_	titleblock/integrationmovetemplateshandler.h	/^	QString rename_;                      \/\/\/< Name to be used when renaming a title block template$/;"	m	class:IntegrationMoveTitleBlockTemplatesHandler
rename_button_	interactivemoveelementshandler.h	/^	QPushButton *rename_button_;$/;"	m	class:InteractiveMoveElementsHandler
rename_button_	titleblock/templatelogomanager.h	/^	QPushButton *rename_button_;           \/\/\/< button to rename the current logo$/;"	m	class:TitleBlockTemplateLogoManager
rename_label_	interactivemoveelementshandler.h	/^	QLabel *rename_label_;$/;"	m	class:InteractiveMoveElementsHandler
rename_textfield_	interactivemoveelementshandler.h	/^	QFileNameEdit *rename_textfield_;$/;"	m	class:InteractiveMoveElementsHandler
render	titleblocktemplate.cpp	/^void TitleBlockTemplate::render(QPainter &painter, const DiagramContext &diagram_context, int titleblock_width) const {$/;"	f	class:TitleBlockTemplate
render	titleblocktemplaterenderer.cpp	/^void TitleBlockTemplateRenderer::render(QPainter *provided_painter, int titleblock_width) {$/;"	f	class:TitleBlockTemplateRenderer
renderCell	titleblocktemplate.cpp	/^void TitleBlockTemplate::renderCell(QPainter &painter, const TitleBlockCell &cell, const DiagramContext &diagram_context, const QRect &cell_rect) const {$/;"	f	class:TitleBlockTemplate
renderDxf	titleblocktemplate.cpp	/^void TitleBlockTemplate::renderDxf(QRectF &title_block_rect, const DiagramContext &diagram_context,$/;"	f	class:TitleBlockTemplate
renderDxf	titleblocktemplaterenderer.cpp	/^void TitleBlockTemplateRenderer::renderDxf(QRectF &title_block_rect, int titleblock_width, QString &file_path, int color) {$/;"	f	class:TitleBlockTemplateRenderer
renderTextCell	titleblocktemplate.cpp	/^void TitleBlockTemplate::renderTextCell(QPainter &painter, const QString &text, const TitleBlockCell &cell, const QRectF &cell_rect) const {$/;"	f	class:TitleBlockTemplate
renderTextCellDxf	titleblocktemplate.cpp	/^void TitleBlockTemplate::renderTextCellDxf(QString &file_path, const QString &text,$/;"	f	class:TitleBlockTemplate
renderToQPicture	titleblocktemplaterenderer.cpp	/^void TitleBlockTemplateRenderer::renderToQPicture(int titleblock_width) {$/;"	f	class:TitleBlockTemplateRenderer
render_properties_	qetprintpreviewdialog.h	/^	ExportPropertiesWidget *render_properties_;$/;"	m	class:QETPrintPreviewDialog
rendered_template_	titleblocktemplaterenderer.h	/^	QPicture rendered_template_;$/;"	m	class:TitleBlockTemplateRenderer
reparent	genericpanel.cpp	/^void GenericPanel::reparent(QTreeWidgetItem *item, QTreeWidgetItem *parent) {$/;"	f	class:GenericPanel
report_label_gb	ui/ui_reportpropertiewidget.h	/^    QGroupBox *report_label_gb;$/;"	m	class:Ui_ReportPropertieWidget
requestGridModification	titleblock/templateview.cpp	/^void TitleBlockTemplateView::requestGridModification(TitleBlockTemplateCommand *command) {$/;"	f	class:TitleBlockTemplateView
requestPaint	qetprintpreviewdialog.cpp	/^void QETPrintPreviewDialog::requestPaint(QPrinter *printer) {$/;"	f	class:QETPrintPreviewDialog
requiredLengthForEndType	editor/graphicspart/partline.cpp	/^uint PartLine::requiredLengthForEndType(const Qet::EndType &end_type)$/;"	f	class:PartLine
reset	editor/elementscene.cpp	/^void ElementScene::reset() {$/;"	f	class:ElementScene
reset	ui/masterpropertieswidget.cpp	/^void MasterPropertiesWidget::reset() {$/;"	f	class:MasterPropertiesWidget
resetConductors	diagramview.cpp	/^void DiagramView::resetConductors() {$/;"	f	class:DiagramView
resetSceneRect	editor/elementview.cpp	/^void ElementView::resetSceneRect() {$/;"	f	class:ElementView
resetStyles	editor/graphicspart/customelementgraphicpart.cpp	/^void CustomElementGraphicPart::resetStyles()$/;"	f	class:CustomElementGraphicPart
reset_mapper_	exportdialog.h	/^	QSignalMapper *reset_mapper_;$/;"	m	class:ExportDialog
reset_size	exportdialog.h	/^		QPushButton *reset_size;$/;"	m	class:ExportDialog::ExportDiagramLine
resize_image	qeticons.cpp	/^		QIcon resize_image;$/;"	m	namespace:QET::Icons	file:
resizingSquareAtPos	editor/elementprimitivedecorator.cpp	/^int ElementPrimitiveDecorator::resizingSquareAtPos(const QPointF &position) {$/;"	f	class:ElementPrimitiveDecorator
restoreDiagramEditors	qetapp.cpp	/^void QETApp::restoreDiagramEditors()$/;"	f	class:QETApp
restoreElementEditors	qetapp.cpp	/^void QETApp::restoreElementEditors()$/;"	f	class:QETApp
restoreEveryEditor	qetapp.cpp	/^void QETApp::restoreEveryEditor()$/;"	f	class:QETApp
restoreTitleBlockTemplateEditors	qetapp.cpp	/^void QETApp::restoreTitleBlockTemplateEditors()$/;"	f	class:QETApp
restore_appli	qetapp.h	/^	QAction *restore_appli;$/;"	m	class:QETApp
restore_diagrams	qetapp.h	/^	QAction *restore_diagrams;$/;"	m	class:QETApp
restore_elements	qetapp.h	/^	QAction *restore_elements;$/;"	m	class:QETApp
restore_templates	qetapp.h	/^	QAction *restore_templates;$/;"	m	class:QETApp
result_	qetresult.h	/^	bool result_;           \/\/\/< Embedded boolean value$/;"	m	class:QETResult
retranslateUi	richtext/ui_addlinkdialog.h	/^    void retranslateUi(QDialog *AddLinkDialog)$/;"	f	class:Ui_AddLinkDialog
retranslateUi	ui/ui_addlinkdialog.h	/^    void retranslateUi(QDialog *AddLinkDialog)$/;"	f	class:Ui_AddLinkDialog
retranslateUi	ui/ui_autonumselectorwidget.h	/^    void retranslateUi(QWidget *AutonumSelectorWidget)$/;"	f	class:Ui_AutonumSelectorWidget
retranslateUi	ui/ui_borderpropertieswidget.h	/^    void retranslateUi(QWidget *BorderPropertiesWidget)$/;"	f	class:Ui_BorderPropertiesWidget
retranslateUi	ui/ui_conductorpropertiesdialog.h	/^    void retranslateUi(QDialog *ConductorPropertiesDialog)$/;"	f	class:Ui_ConductorPropertiesDialog
retranslateUi	ui/ui_conductorpropertieswidget.h	/^    void retranslateUi(QWidget *ConductorPropertiesWidget)$/;"	f	class:Ui_ConductorPropertiesWidget
retranslateUi	ui/ui_diagramselection.h	/^    void retranslateUi(QWidget *diagramselection)$/;"	f	class:Ui_diagramselection
retranslateUi	ui/ui_dialogautonum.h	/^    void retranslateUi(QDialog *DialogAutoNum)$/;"	f	class:Ui_DialogAutoNum
retranslateUi	ui/ui_dialogwaiting.h	/^    void retranslateUi(QDialog *DialogWaiting)$/;"	f	class:Ui_DialogWaiting
retranslateUi	ui/ui_elementinfopartwidget.h	/^    void retranslateUi(QWidget *ElementInfoPartWidget)$/;"	f	class:Ui_ElementInfoPartWidget
retranslateUi	ui/ui_elementinfowidget.h	/^    void retranslateUi(QWidget *ElementInfoWidget)$/;"	f	class:Ui_ElementInfoWidget
retranslateUi	ui/ui_elementpropertieseditorwidget.h	/^    void retranslateUi(QDialog *ElementPropertiesEditorWidget)$/;"	f	class:Ui_ElementPropertiesEditorWidget
retranslateUi	ui/ui_elementselectorwidget.h	/^    void retranslateUi(QWidget *ElementSelectorWidget)$/;"	f	class:Ui_ElementSelectorWidget
retranslateUi	ui/ui_linksingleelementwidget.h	/^    void retranslateUi(QWidget *LinkSingleElementWidget)$/;"	f	class:Ui_LinkSingleElementWidget
retranslateUi	ui/ui_masterpropertieswidget.h	/^    void retranslateUi(QWidget *MasterPropertiesWidget)$/;"	f	class:Ui_MasterPropertiesWidget
retranslateUi	ui/ui_numparteditorw.h	/^    void retranslateUi(QWidget *NumPartEditorW)$/;"	f	class:Ui_NumPartEditorW
retranslateUi	ui/ui_potentialtextsdialog.h	/^    void retranslateUi(QDialog *PotentialTextsDialog)$/;"	f	class:Ui_PotentialTextsDialog
retranslateUi	ui/ui_reportpropertiewidget.h	/^    void retranslateUi(QWidget *ReportPropertieWidget)$/;"	f	class:Ui_ReportPropertieWidget
retranslateUi	ui/ui_selectautonumw.h	/^    void retranslateUi(QWidget *SelectAutonumW)$/;"	f	class:Ui_SelectAutonumW
retranslateUi	ui/ui_titleblockpropertieswidget.h	/^    void retranslateUi(QWidget *TitleBlockPropertiesWidget)$/;"	f	class:Ui_TitleBlockPropertiesWidget
retranslateUi	ui/ui_xrefpropertieswidget.h	/^    void retranslateUi(QWidget *XRefPropertiesWidget)$/;"	f	class:Ui_XRefPropertiesWidget
retryErrorMessage	interactivemoveelementshandler.cpp	/^QET::Action InteractiveMoveElementsHandler::retryErrorMessage(const QString &message) const {$/;"	f	class:InteractiveMoveElementsHandler
richTextChanged	richtext/richtexteditor.cpp	/^void RichTextEditorDialog::richTextChanged()$/;"	f	class:qdesigner_internal::RichTextEditorDialog
rmdir	fileelementscategory.cpp	/^bool FileElementsCategory::rmdir(const QString &path) const {$/;"	f	class:FileElementsCategory
ro	qeticons.cpp	/^		QIcon ro;$/;"	m	namespace:QET::Icons	file:
root	fileelementscollection.h	/^	FileElementsCategory *root;$/;"	m	class:FileElementsCollection
root	xmlelementscollection.h	/^	XmlElementsCategory *root;$/;"	m	class:XmlElementsCollection
rootCategory	fileelementscollection.cpp	/^ElementsCategory *FileElementsCollection::rootCategory() {$/;"	f	class:FileElementsCollection
rootCategory	qetproject.cpp	/^ElementsCategory *QETProject::rootCategory() const {$/;"	f	class:QETProject
rootCategory	xmlelementscollection.cpp	/^ElementsCategory *XmlElementsCollection::rootCategory() {$/;"	f	class:XmlElementsCollection
rotate	editor/textfieldeditor.h	/^	QCheckBox *rotate;$/;"	m	class:TextFieldEditor
rotateBy	qetgraphicsitem/diagramtextitem.cpp	/^void DiagramTextItem::rotateBy(const qreal &added_rotation) {$/;"	f	class:DiagramTextItem
rotateBy	qetgraphicsitem/element.cpp	/^void Element::rotateBy(const qreal &angle) {$/;"	f	class:Element
rotateBy	qetgraphicsitem/qetgraphicsitem.cpp	/^void QetGraphicsItem::rotateBy(const qreal &added_rotation) {$/;"	f	class:QetGraphicsItem
rotateSelection	diagramview.cpp	/^void DiagramView::rotateSelection() {$/;"	f	class:DiagramView
rotateTexts	diagramview.cpp	/^void DiagramView::rotateTexts() {$/;"	f	class:DiagramView
rotate_by_user_	qetgraphicsitem/conductortextitem.h	/^	bool rotate_by_user_;$/;"	m	class:ConductorTextItem
rotate_selection	qetdiagrameditor.h	/^		QAction *rotate_selection;				\/\/\/< Rotate selected elements and text items by 90 degrees$/;"	m	class:QETDiagramEditor
rotate_texts	qetdiagrameditor.h	/^		QAction *rotate_texts;					\/\/\/< Direct selected text items to a specific angle$/;"	m	class:QETDiagramEditor
rotationAngle	qetgraphicsitem/diagramtextitem.cpp	/^qreal DiagramTextItem::rotationAngle() const {$/;"	f	class:DiagramTextItem
rotation_angle_	editor/texteditor.h	/^	QTextOrientationSpinBoxWidget *rotation_angle_;$/;"	m	class:TextEditor
rotation_angle_	editor/textfieldeditor.h	/^	QTextOrientationSpinBoxWidget *rotation_angle_;$/;"	m	class:TextFieldEditor
rotation_angle_	qetgraphicsitem/diagramtextitem.h	/^	qreal rotation_angle_;$/;"	m	class:DiagramTextItem
rotation_transformed	exportdialog.cpp	/^QPointF ExportDialog::rotation_transformed(qreal px, qreal py , qreal origin_x, qreal origin_y, qreal angle) {$/;"	f	class:ExportDialog
round	qet.cpp	/^qreal QET::round(qreal x, qreal epsilon) {$/;"	f	class:QET
roundPoint	qet.cpp	/^QPointF QET::roundPoint(const QPointF &p, qreal epsilon) {$/;"	f	class:QET
rowColsChanged	titleblocktemplate.cpp	/^void TitleBlockTemplate::rowColsChanged() {$/;"	f	class:TitleBlockTemplate
rowDimension	titleblocktemplate.cpp	/^int TitleBlockTemplate::rowDimension(int i) {$/;"	f	class:TitleBlockTemplate
row_	titleblock/gridlayoutanimation.h	/^	bool row_;                  \/\/\/< Whether we should animate a row or a column$/;"	m	class:GridLayoutAnimation
row_span	titleblockcell.h	/^	int row_span;                      \/\/\/< number of extra rows spanned by this cell$/;"	m	class:TitleBlockCell
row_span_after_	titleblock/templatecommands.h	/^	int row_span_after_;  \/\/\/< the row_span attribute of the spanning cell after the merge$/;"	m	class:MergeCellsCommand
row_span_before_	titleblock/templatecommands.h	/^	int row_span_before_;                  \/\/\/< the row_span attribute of the spanning cell before splitting$/;"	m	class:SplitCellsCommand
row_span_before_	titleblock/templatecommands.h	/^	int row_span_before_; \/\/\/< the row_span attribute of the spanning cell before the merge$/;"	m	class:MergeCellsCommand
rowsActions	titleblock/templateview.cpp	/^QList<QAction *> TitleBlockTemplateView::rowsActions() const {$/;"	f	class:TitleBlockTemplateView
rowsAreDisplayed	bordertitleblock.h	/^	bool rowsAreDisplayed() const { return(display_rows_); }$/;"	f	class:BorderTitleBlock
rowsCount	bordertitleblock.h	/^	int rowsCount() const { return(rows_count_); }$/;"	f	class:BorderTitleBlock
rowsCount	titleblocktemplate.cpp	/^int TitleBlockTemplate::rowsCount() const {$/;"	f	class:TitleBlockTemplate
rowsDimensionsChanged	titleblock/templateview.cpp	/^void TitleBlockTemplateView::rowsDimensionsChanged() {$/;"	f	class:TitleBlockTemplateView
rowsHeaderWidth	bordertitleblock.h	/^	qreal rowsHeaderWidth() const { return(rows_header_width_); }$/;"	f	class:BorderTitleBlock
rowsHeight	bordertitleblock.h	/^	qreal rowsHeight() const { return(rows_height_); }$/;"	f	class:BorderTitleBlock
rowsHeights	titleblocktemplate.cpp	/^QList<int> TitleBlockTemplate::rowsHeights() const {$/;"	f	class:TitleBlockTemplate
rowsTotalHeight	bordertitleblock.h	/^	qreal rowsTotalHeight() const { return(rows_count_ * rows_height_); }$/;"	f	class:BorderTitleBlock
rows_count	borderproperties.h	/^	int rows_count;               \/\/\/< Rows count$/;"	m	class:BorderProperties
rows_count_	bordertitleblock.h	/^	int rows_count_;$/;"	m	class:BorderTitleBlock
rows_header_width	borderproperties.h	/^	qreal rows_header_width;      \/\/\/< Row headers width$/;"	m	class:BorderProperties
rows_header_width_	bordertitleblock.h	/^	qreal rows_header_width_;$/;"	m	class:BorderTitleBlock
rows_height	borderproperties.h	/^	qreal rows_height;            \/\/\/< Rows height$/;"	m	class:BorderProperties
rows_height_	bordertitleblock.h	/^	qreal rows_height_;$/;"	m	class:BorderTitleBlock
rows_heights_	titleblocktemplate.h	/^	QList<int> rows_heights_;                        \/\/\/< rows heights -- simple integers$/;"	m	class:TitleBlockTemplate
rpw	configpages.h	/^	ReportPropertieWidget      *rpw;       \/\/\/< Widget to edit default report label$/;"	m	class:NewDiagramPage
ru	qeticons.cpp	/^		QIcon ru;$/;"	m	namespace:QET::Icons	file:
rubber_band_origin	diagramview.h	/^		QPointF           rubber_band_origin;$/;"	m	class:DiagramView
save	editor/qetelementeditor.h	/^	QAction *new_element, *open, *open_file, *save, *save_as, *save_as_file, *reload, *quit;$/;"	m	class:QETElementEditor
save	projectview.cpp	/^QETResult ProjectView::save() {$/;"	f	class:ProjectView
save	qetdiagrameditor.cpp	/^void QETDiagramEditor::save() {$/;"	f	class:QETDiagramEditor
save	recentfiles.cpp	/^void RecentFiles::save() {$/;"	f	class:RecentFiles
save	titleblock/qettemplateeditor.cpp	/^bool QETTitleBlockTemplateEditor::save() {$/;"	f	class:QETTitleBlockTemplateEditor
saveAs	projectview.cpp	/^QETResult ProjectView::saveAs(ProjectSaveOptions options) {$/;"	f	class:ProjectView
saveAs	qetdiagrameditor.cpp	/^void QETDiagramEditor::saveAs() {$/;"	f	class:QETDiagramEditor
saveAs	titleblock/qettemplateeditor.cpp	/^bool QETTitleBlockTemplateEditor::saveAs() {$/;"	f	class:QETTitleBlockTemplateEditor
saveAs	titleblock/qettemplateeditor.cpp	/^bool QETTitleBlockTemplateEditor::saveAs(const QString &filepath) {$/;"	f	class:QETTitleBlockTemplateEditor
saveAs	titleblock/qettemplateeditor.cpp	/^bool QETTitleBlockTemplateEditor::saveAs(const TitleBlockTemplateLocation &location) {$/;"	f	class:QETTitleBlockTemplateEditor
saveAsFile	titleblock/qettemplateeditor.cpp	/^bool QETTitleBlockTemplateEditor::saveAsFile() {$/;"	f	class:QETTitleBlockTemplateEditor
saveCell	titleblocktemplate.cpp	/^void TitleBlockTemplate::saveCell(TitleBlockCell *cell, QDomElement &xml_element, bool save_empty) const {$/;"	f	class:TitleBlockTemplate
saveCells	titleblocktemplate.cpp	/^void TitleBlockTemplate::saveCells(QDomElement &xml_element) const {$/;"	f	class:TitleBlockTemplate
saveContentToXml	titleblockcell.cpp	/^void TitleBlockCell::saveContentToXml(QDomElement &cell_elmt) {$/;"	f	class:TitleBlockCell
saveContext	projectconfigpages.cpp	/^void ProjectAutoNumConfigPage::saveContext() {$/;"	f	class:ProjectAutoNumConfigPage
saveDiagrams	projectview.cpp	/^void ProjectView::saveDiagrams(const QList<Diagram *> &diagrams) {$/;"	f	class:ProjectView
saveFilesToSettings	recentfiles.cpp	/^void RecentFiles::saveFilesToSettings() {$/;"	f	class:RecentFiles
saveGrid	titleblocktemplate.cpp	/^void TitleBlockTemplate::saveGrid(QDomElement &xml_element) const {$/;"	f	class:TitleBlockTemplate
saveInformation	titleblocktemplate.cpp	/^void TitleBlockTemplate::saveInformation(QDomElement &xml_element) const {$/;"	f	class:TitleBlockTemplate
saveLogo	titleblocktemplate.cpp	/^void TitleBlockTemplate::saveLogo(const QString &logo_name, QDomElement &xml_element) const {$/;"	f	class:TitleBlockTemplate
saveLogoToFile	titleblocktemplate.cpp	/^bool TitleBlockTemplate::saveLogoToFile(const QString &logo_name, const QString &filepath) {$/;"	f	class:TitleBlockTemplate
saveLogos	titleblocktemplate.cpp	/^void TitleBlockTemplate::saveLogos(QDomElement &xml_element) const {$/;"	f	class:TitleBlockTemplate
saveOriginalBoundingRect	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::saveOriginalBoundingRect() {$/;"	f	class:ElementPrimitiveDecorator
savePageSetupForCurrentPrinter	diagramprintdialog.cpp	/^void DiagramPrintDialog::savePageSetupForCurrentPrinter() {$/;"	f	class:DiagramPrintDialog
savePreviewWidthToApplicationSettings	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::savePreviewWidthToApplicationSettings(int former_preview_width, int new_preview_width) {$/;"	f	class:QETTitleBlockTemplateEditor
saveProfile	qetgraphicsitem/conductor.cpp	/^void Conductor::saveProfile(bool undo) {$/;"	f	class:Conductor
saveProperties	ui/xrefpropertieswidget.cpp	/^void XRefPropertiesWidget::saveProperties(int index) {$/;"	f	class:XRefPropertiesWidget
saveReloadDiagramParameters	diagramprintdialog.cpp	/^void DiagramPrintDialog::saveReloadDiagramParameters(Diagram *diagram, const ExportProperties options, bool save) {$/;"	f	class:DiagramPrintDialog
saveReloadDiagramParameters	exportdialog.cpp	/^void ExportDialog::saveReloadDiagramParameters(Diagram *diagram, bool save) {$/;"	f	class:ExportDialog
saveToCSVFile	nomenclature.cpp	/^bool nomenclature::saveToCSVFile() {$/;"	f	class:nomenclature
saveToXmlElement	titleblocktemplate.cpp	/^bool TitleBlockTemplate::saveToXmlElement(QDomElement &xml_element) const {$/;"	f	class:TitleBlockTemplate
saveToXmlFile	titleblocktemplate.cpp	/^bool TitleBlockTemplate::saveToXmlFile(const QString &filepath) {$/;"	f	class:TitleBlockTemplate
save_	titleblock/qettemplateeditor.h	/^	QAction *new_, *open_, *open_from_file_, *save_, *save_as_, *save_as_file_, *quit_;$/;"	m	class:QETTitleBlockTemplateEditor
save_as	editor/qetelementeditor.h	/^	QAction *new_element, *open, *open_file, *save, *save_as, *save_as_file, *reload, *quit;$/;"	m	class:QETElementEditor
save_as_	titleblock/qettemplateeditor.h	/^	QAction *new_, *open_, *open_from_file_, *save_, *save_as_, *save_as_file_, *quit_;$/;"	m	class:QETTitleBlockTemplateEditor
save_as_file	editor/qetelementeditor.h	/^	QAction *new_element, *open, *open_file, *save, *save_as, *save_as_file, *reload, *quit;$/;"	m	class:QETElementEditor
save_as_file_	titleblock/qettemplateeditor.h	/^	QAction *new_, *open_, *open_from_file_, *save_, *save_as_, *save_as_file_, *quit_;$/;"	m	class:QETTitleBlockTemplateEditor
save_file	qetdiagrameditor.h	/^		QAction *save_file;				   \/\/\/< Save current project$/;"	m	class:QETDiagramEditor
save_file_as	qetdiagrameditor.h	/^		QAction *save_file_as;			   \/\/\/< Save current project as a specific file$/;"	m	class:QETDiagramEditor
saved_font_size_	editor/graphicspart/parttext.h	/^	qreal saved_font_size_;$/;"	m	class:PartText
saved_font_size_	editor/graphicspart/parttextfield.h	/^	qreal saved_font_size_;$/;"	m	class:PartTextField
saved_point_	editor/graphicspart/parttext.h	/^	QPointF saved_point_;$/;"	m	class:PartText
saved_point_	editor/graphicspart/parttextfield.h	/^	QPointF saved_point_;$/;"	m	class:PartTextField
saved_points_	editor/graphicspart/abstractpartellipse.h	/^		QList<QPointF> saved_points_;$/;"	m	class:AbstractPartEllipse
saved_points_	editor/graphicspart/partline.h	/^		QList<QPointF> saved_points_;$/;"	m	class:PartLine
saved_points_	editor/graphicspart/partpolygon.h	/^		QList<QPointF> saved_points_;$/;"	m	class:PartPolygon
saved_points_	editor/graphicspart/partrectangle.h	/^		QList<QPointF> saved_points_;$/;"	m	class:PartRectangle
saved_position_	editor/graphicspart/partterminal.h	/^		QPointF saved_position_;$/;"	m	class:PartTerminal
scale	editor/editorcommands.cpp	/^void ScalePartsCommand::scale(const QRectF &before, const QRectF &after) {$/;"	f	class:ScalePartsCommand
scaleItems	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::scaleItems(const QRectF &original_rect, const QRectF &new_rect) {$/;"	f	class:ElementPrimitiveDecorator
scaledPrimitives	editor/editorcommands.cpp	/^QList<CustomElementPart *> ScalePartsCommand::scaledPrimitives() const {$/;"	f	class:ScalePartsCommand
scaled_primitives_	editor/editorcommands.h	/^	QList<CustomElementPart *> scaled_primitives_;$/;"	m	class:ScalePartsCommand
scalingMethod	editor/elementprimitivedecorator.cpp	/^QET::ScalingMethod ElementPrimitiveDecorator::scalingMethod(QGraphicsSceneMouseEvent *event) {$/;"	f	class:ElementPrimitiveDecorator
scene	diagramview.h	/^		Diagram          *scene;$/;"	m	class:DiagramView
scene	editor/elementview.cpp	/^ElementScene *ElementView::scene() const {$/;"	f	class:ElementView
scene	qgimanager.h	/^	QGraphicsScene *scene;$/;"	m	class:QGIManager
sceneEventFilter	editor/graphicspart/parttext.cpp	/^bool PartText::sceneEventFilter(QGraphicsItem *watched, QEvent *event) {$/;"	f	class:PartText
sceneEventFilter	editor/graphicspart/parttextfield.cpp	/^bool PartTextField::sceneEventFilter(QGraphicsItem *watched, QEvent *event) {$/;"	f	class:PartTextField
sceneGeometricRect	editor/graphicspart/abstractpartellipse.cpp	/^QRectF AbstractPartEllipse::sceneGeometricRect() const {$/;"	f	class:AbstractPartEllipse
sceneGeometricRect	editor/graphicspart/partline.cpp	/^QRectF PartLine::sceneGeometricRect() const {$/;"	f	class:PartLine
sceneGeometricRect	editor/graphicspart/partpolygon.cpp	/^QRectF PartPolygon::sceneGeometricRect() const {$/;"	f	class:PartPolygon
sceneGeometricRect	editor/graphicspart/partrectangle.cpp	/^QRectF PartRectangle::sceneGeometricRect() const {$/;"	f	class:PartRectangle
sceneGeometricRect	editor/graphicspart/partterminal.cpp	/^QRectF PartTerminal::sceneGeometricRect() const {$/;"	f	class:PartTerminal
sceneGeometricRect	editor/graphicspart/parttext.cpp	/^QRectF PartText::sceneGeometricRect() const {$/;"	f	class:PartText
sceneGeometricRect	editor/graphicspart/parttextfield.cpp	/^QRectF PartTextField::sceneGeometricRect() const {$/;"	f	class:PartTextField
sceneP1	editor/graphicspart/partline.cpp	/^QPointF PartLine::sceneP1() const {$/;"	f	class:PartLine
sceneP2	editor/graphicspart/partline.cpp	/^QPointF PartLine::sceneP2() const {$/;"	f	class:PartLine
sceneTopLeft	editor/graphicspart/abstractpartellipse.cpp	/^QPointF AbstractPartEllipse::sceneTopLeft() const {$/;"	f	class:AbstractPartEllipse
sceneTopLeft	editor/graphicspart/partrectangle.cpp	/^QPointF PartRectangle::sceneTopLeft() const {$/;"	f	class:PartRectangle
scene_	editor/elementview.h	/^	ElementScene *scene_;$/;"	m	class:ElementView
scrollArea	ui/ui_elementinfowidget.h	/^    QScrollArea *scrollArea;$/;"	m	class:Ui_ElementInfoWidget
scrollArea	ui/ui_elementselectorwidget.h	/^    QScrollArea *scrollArea;$/;"	m	class:Ui_ElementSelectorWidget
scrollAreaWidgetContents	ui/ui_elementinfowidget.h	/^    QWidget *scrollAreaWidgetContents;$/;"	m	class:Ui_ElementInfoWidget
scrollAreaWidgetContents	ui/ui_elementselectorwidget.h	/^    QWidget *scrollAreaWidgetContents;$/;"	m	class:Ui_ElementSelectorWidget
scrollToElement	elementspanel.cpp	/^bool ElementsPanel::scrollToElement(const ElementsLocation &location) {$/;"	f	class:ElementsPanel
scrollToSelectedItem	elementspanel.cpp	/^void ElementsPanel::scrollToSelectedItem() {$/;"	f	class:ElementsPanel
scroll_layout_	ui/ui_elementselectorwidget.h	/^    QVBoxLayout *scroll_layout_;$/;"	m	class:Ui_ElementSelectorWidget
scroll_vlayout	ui/ui_elementinfowidget.h	/^    QVBoxLayout *scroll_vlayout;$/;"	m	class:Ui_ElementInfoWidget
search_field	ui/linksingleelementwidget.h	/^	QLineEdit *search_field;$/;"	m	class:LinkSingleElementWidget
secondEndCircleRect	editor/graphicspart/partline.cpp	/^QRectF PartLine::secondEndCircleRect() const {$/;"	f	class:PartLine
secondEndLength	editor/graphicspart/partline.h	/^		qreal secondEndLength() const {return second_length;}$/;"	f	class:PartLine
secondEndType	editor/graphicspart/partline.h	/^		Qet::EndType secondEndType() const {return second_end;}$/;"	f	class:PartLine
secondPoint	conductorsegment.cpp	/^QPointF ConductorSegment::secondPoint() const {$/;"	f	class:ConductorSegment
second_end	editor/graphicspart/partline.h	/^		Qet::EndType second_end;$/;"	m	class:PartLine
second_length	editor/graphicspart/partline.h	/^		qreal        second_length;$/;"	m	class:PartLine
second_point	editor/graphicspart/partterminal.h	/^		QPointF second_point;$/;"	m	class:PartTerminal
segments	conductorprofile.h	/^	QList<ConductorSegmentProfile *> segments;$/;"	m	class:ConductorProfile
segments	qetgraphicsitem/conductor.h	/^	ConductorSegment *segments;$/;"	m	class:Conductor
segmentsCount	conductorprofile.cpp	/^uint ConductorProfile::segmentsCount(QET::ConductorSegmentType type) const {$/;"	f	class:ConductorProfile
segmentsCount	qetgraphicsitem/conductor.cpp	/^uint Conductor::segmentsCount(QET::ConductorSegmentType type) const {$/;"	f	class:Conductor
segmentsList	qetgraphicsitem/conductor.cpp	/^const QList<ConductorSegment *> Conductor::segmentsList() const {$/;"	f	class:Conductor
segmentsToPath	qetgraphicsitem/conductor.cpp	/^void Conductor::segmentsToPath() {$/;"	f	class:Conductor
segmentsToPoints	qetgraphicsitem/conductor.cpp	/^QList<QPointF> Conductor::segmentsToPoints() const {$/;"	f	class:Conductor
segments_squares_scale_	qetgraphicsitem/conductor.h	/^	qreal segments_squares_scale_;$/;"	m	class:Conductor
select	qetgraphicsitem/element.cpp	/^void Element::select() {$/;"	f	class:Element
selectAll	diagram.cpp	/^void Diagram::selectAll() {$/;"	f	class:Diagram
selectAll	diagramview.cpp	/^void DiagramView::selectAll() {$/;"	f	class:DiagramView
selectAll	exportdialog.h	/^	QPushButton *selectAll;$/;"	m	class:ExportDialog
selectAllDiagrams	qetprintpreviewdialog.cpp	/^void QETPrintPreviewDialog::selectAllDiagrams() {$/;"	f	class:QETPrintPreviewDialog
selectInvert	diagramview.cpp	/^void DiagramView::selectInvert() {$/;"	f	class:DiagramView
selectLocation	elementscategorieslist.cpp	/^bool ElementsCategoriesList::selectLocation(const ElementsLocation &location) {$/;"	f	class:ElementsCategoriesList
selectNoDiagram	qetprintpreviewdialog.cpp	/^void QETPrintPreviewDialog::selectNoDiagram() {$/;"	f	class:QETPrintPreviewDialog
selectNothing	diagramview.cpp	/^void DiagramView::selectNothing() {$/;"	f	class:DiagramView
select_name_	elementscollectioncache.h	/^	QSqlQuery *select_name_;        \/\/\/< Prepared statement to fetch names from the cache$/;"	m	class:ElementsCollectionCache
select_pixmap_	elementscollectioncache.h	/^	QSqlQuery *select_pixmap_;      \/\/\/< Prepared statement to fetch pixmaps from the cache$/;"	m	class:ElementsCollectionCache
selectables_	elementscategorieslist.h	/^	int selectables_;$/;"	m	class:ElementsCategoriesList
selectall	editor/qetelementeditor.h	/^	QAction *selectall, *deselectall, *inv_select;$/;"	m	class:QETElementEditor
selectedCategory	newelementwizard.cpp	/^ElementsCategory *NewElementWizard::selectedCategory() const {$/;"	f	class:NewElementWizard
selectedCells	titleblock/templateview.cpp	/^QList<TitleBlockCell *> TitleBlockTemplateView::selectedCells() const {$/;"	f	class:TitleBlockTemplateView
selectedCellsChanged	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::selectedCellsChanged(QList<TitleBlockCell *> selected_cells) {$/;"	f	class:QETTitleBlockTemplateEditor
selectedCellsSet	titleblock/templateview.cpp	/^TitleBlockTemplateCellsSet TitleBlockTemplateView::selectedCellsSet() const {$/;"	f	class:TitleBlockTemplateView
selectedConductorTexts	diagram.cpp	/^QSet<ConductorTextItem *> Diagram::selectedConductorTexts() const {$/;"	f	class:Diagram
selectedConductors	diagram.cpp	/^QSet<Conductor *> Diagram::selectedConductors() const {$/;"	f	class:Diagram
selectedContent	diagram.cpp	/^DiagramContent Diagram::selectedContent() {$/;"	f	class:Diagram
selectedContent	editor/elementscene.cpp	/^ElementContent ElementScene::selectedContent() const {$/;"	f	class:ElementScene
selectedDiagram	genericpanel.cpp	/^Diagram *GenericPanel::selectedDiagram() const {$/;"	f	class:GenericPanel
selectedDiagrams	diagramschooser.cpp	/^QList<Diagram *> DiagramsChooser::selectedDiagrams() const {$/;"	f	class:DiagramsChooser
selectedElement	ui/elementselectorwidget.h	/^	Element * selectedElement () const{return selected_element;}$/;"	f	class:ElementSelectorWidget
selectedElementLocation	genericpanel.cpp	/^ElementsLocation GenericPanel::selectedElementLocation() const {$/;"	f	class:GenericPanel
selectedElementTexts	diagram.cpp	/^QSet<ElementTextItem*> Diagram::selectedElementTexts() const {$/;"	f	class:Diagram
selectedItem	elementspanel.cpp	/^ElementsCollectionItem *ElementsPanel::selectedItem() const {$/;"	f	class:ElementsPanel
selectedItemHasFocus	diagramview.cpp	/^bool DiagramView::selectedItemHasFocus() {$/;"	f	class:DiagramView
selectedItemIsWritable	elementspanel.cpp	/^bool ElementsPanel::selectedItemIsWritable() const {$/;"	f	class:ElementsPanel
selectedLocation	elementscategorieslist.cpp	/^ElementsLocation ElementsCategoriesList::selectedLocation() const {$/;"	f	class:ElementsCategoriesList
selectedProject	genericpanel.cpp	/^QETProject *GenericPanel::selectedProject() const {$/;"	f	class:GenericPanel
selectedTemplateLocation	genericpanel.cpp	/^TitleBlockTemplateLocation GenericPanel::selectedTemplateLocation() const {$/;"	f	class:GenericPanel
selectedText	ui/potentialtextsdialog.cpp	/^QString PotentialTextsDialog::selectedText() const {$/;"	f	class:PotentialTextsDialog
selectedTexts	diagram.cpp	/^QSet<DiagramTextItem *> Diagram::selectedTexts() const {$/;"	f	class:Diagram
selected_element	ui/elementselectorwidget.h	/^	Element                   *selected_element, *showed_element;$/;"	m	class:ElementSelectorWidget
selectionChanged	elementscategorieslist.cpp	/^void ElementsCategoriesList::selectionChanged(QTreeWidgetItem *current, QTreeWidgetItem *previous) {$/;"	f	class:ElementsCategoriesList
selectionChanged	titleblock/templateview.cpp	/^void TitleBlockTemplateView::selectionChanged() {$/;"	f	class:TitleBlockTemplateView
selection_prop	qetdiagrameditor.h	/^		QAction *selection_prop;				\/\/\/< Show a dialog describing the selection$/;"	m	class:QETDiagramEditor
sendMessage	qetsingleapplication.cpp	/^bool QETSingleApplication::sendMessage(const QString &message) {$/;"	f	class:QETSingleApplication
sentence	diagramcontent.cpp	/^QString DiagramContent::sentence(int filter) const {$/;"	f	class:DiagramContent
setActionIfItemAlreadyExists	basicmoveelementshandler.cpp	/^void BasicMoveElementsHandler::setActionIfItemAlreadyExists(QET::Action action) {$/;"	f	class:BasicMoveElementsHandler
setActionIfItemIsNotReadable	basicmoveelementshandler.cpp	/^void BasicMoveElementsHandler::setActionIfItemIsNotReadable(QET::Action action) {$/;"	f	class:BasicMoveElementsHandler
setActionIfItemIsNotWritable	basicmoveelementshandler.cpp	/^void BasicMoveElementsHandler::setActionIfItemIsNotWritable(QET::Action action) {$/;"	f	class:BasicMoveElementsHandler
setActionIfItemTriggersAnError	basicmoveelementshandler.cpp	/^void BasicMoveElementsHandler::setActionIfItemTriggersAnError(QET::Action action) {$/;"	f	class:BasicMoveElementsHandler
setActions	titleblock/helpercell.cpp	/^void HelperCell::setActions(const QList<QAction *> &actions) {$/;"	f	class:HelperCell
setActsOnRows	titleblock/gridlayoutanimation.cpp	/^void GridLayoutAnimation::setActsOnRows(bool acts_on_row) {$/;"	f	class:GridLayoutAnimation
setAllSpans	titleblocktemplate.cpp	/^void TitleBlockTemplate::setAllSpans(const QHash<TitleBlockCell *, QPair<int, int> > &spans) {$/;"	f	class:TitleBlockTemplate
setAntialiased	editor/graphicspart/customelementgraphicpart.cpp	/^void CustomElementGraphicPart::setAntialiased(const bool b)$/;"	f	class:CustomElementGraphicPart
setArguments	qetarguments.cpp	/^void QETArguments::setArguments(const QList<QString> &args) {$/;"	f	class:QETArguments
setAttribute	titleblockcell.cpp	/^void TitleBlockCell::setAttribute(const QString &attribute, const QVariant &attr_value) {$/;"	f	class:TitleBlockCell
setAuthor	bordertitleblock.h	/^	void setAuthor(const QString &author) { btb_author_ = author; }$/;"	f	class:BorderTitleBlock
setAutoConductor	qetproject.cpp	/^void QETProject::setAutoConductor(bool ac)$/;"	f	class:QETProject
setBlack	editor/graphicspart/parttext.h	/^		void setBlack(bool b) {setDefaultTextColor(b ? Qt::black : Qt::white);}$/;"	f	class:PartText
setBorderOptions	diagram.h	/^inline void Diagram::setBorderOptions(Diagram::BorderOptions bo) {$/;"	f	class:Diagram
setCache	elementscollection.cpp	/^void ElementsCollection::setCache(ElementsCollectionCache *cache) {$/;"	f	class:ElementsCollection
setCell	titleblock/templatecommands.cpp	/^void ModifyTitleBlockCellCommand::setCell(TitleBlockCell *modified_cell) {$/;"	f	class:ModifyTitleBlockCellCommand
setCells	titleblock/templatecommands.cpp	/^void ModifyTemplateGridCommand::setCells(const QList<TitleBlockCell *> &cells) {$/;"	f	class:ModifyTemplateGridCommand
setCenter	editor/graphicspart/abstractpartellipse.cpp	/^void AbstractPartEllipse::setCenter(const QPointF &center)$/;"	f	class:AbstractPartEllipse
setCenterX	editor/graphicspart/abstractpartellipse.cpp	/^void AbstractPartEllipse::setCenterX(const qreal x)$/;"	f	class:AbstractPartEllipse
setCenterY	editor/graphicspart/abstractpartellipse.cpp	/^void AbstractPartEllipse::setCenterY(const qreal y)$/;"	f	class:AbstractPartEllipse
setClosed	editor/graphicspart/partpolygon.h	/^		void setClosed (bool c) {m_closed = c;}$/;"	f	class:PartPolygon
setColor	editor/graphicspart/customelementgraphicpart.cpp	/^void CustomElementGraphicPart::setColor(const Color c)$/;"	f	class:CustomElementGraphicPart
setColor	richtext/richtexteditor.cpp	/^void ColorAction::setColor(const QColor &color)$/;"	f	class:qdesigner_internal::ColorAction
setColorButton	ui/conductorpropertieswidget.cpp	/^void ConductorPropertiesWidget::setColorButton(const QColor &color) {$/;"	f	class:ConductorPropertiesWidget
setColumnDimension	titleblocktemplate.cpp	/^void TitleBlockTemplate::setColumnDimension(int i, const TitleBlockDimension &dimension) {$/;"	f	class:TitleBlockTemplate
setColumnsCount	bordertitleblock.cpp	/^void BorderTitleBlock::setColumnsCount(int nb_c) {$/;"	f	class:BorderTitleBlock
setColumnsHeaderHeight	bordertitleblock.cpp	/^void BorderTitleBlock::setColumnsHeaderHeight(const qreal &new_chh) {$/;"	f	class:BorderTitleBlock
setColumnsWidth	bordertitleblock.cpp	/^void BorderTitleBlock::setColumnsWidth(const qreal &new_cw) {$/;"	f	class:BorderTitleBlock
setConductor	diagram.h	/^inline void Diagram::setConductor(bool adding) {$/;"	f	class:Diagram
setConductorStart	diagram.h	/^inline void Diagram::setConductorStart(QPointF start) {$/;"	f	class:Diagram
setConductorStop	diagram.h	/^inline void Diagram::setConductorStop(QPointF end) {$/;"	f	class:Diagram
setConductorTextItemMove	diagramcommands.cpp	/^void ChangeConductorCommand::setConductorTextItemMove(const QPointF &pos_before, const QPointF &pos_after) {$/;"	f	class:ChangeConductorCommand
setConductorType	ui/conductorpropertieswidget.cpp	/^void ConductorPropertiesWidget::setConductorType(ConductorProperties::ConductorType type) {$/;"	f	class:ConductorPropertiesWidget
setConductorsAutonumName	diagram.cpp	/^void Diagram::setConductorsAutonumName(const QString &name) {$/;"	f	class:Diagram
setConflictDialogMainWidget	interactivemoveelementshandler.cpp	/^void InteractiveMoveElementsHandler::setConflictDialogMainWidget(QWidget *widget) {$/;"	f	class:InteractiveMoveElementsHandler
setConflictDialogTitle	interactivemoveelementshandler.cpp	/^void InteractiveMoveElementsHandler::setConflictDialogTitle(const QString &new_title) {$/;"	f	class:InteractiveMoveElementsHandler
setContext	diagramcontextwidget.cpp	/^void DiagramContextWidget::setContext(const DiagramContext &context) {$/;"	f	class:DiagramContextWidget
setContext	titleblocktemplaterenderer.cpp	/^void TitleBlockTemplateRenderer::setContext(const DiagramContext &context) {$/;"	f	class:TitleBlockTemplateRenderer
setContext	ui/selectautonumw.cpp	/^void SelectAutonumW::setContext(const NumerotationContext &context) {$/;"	f	class:SelectAutonumW
setCreatedItem	moveelementsdescription.cpp	/^void MoveElementsDescription::setCreatedItem(ElementsCollectionItem *item) {$/;"	f	class:MoveElementsDescription
setCurrent	orientationset.cpp	/^bool OrientationSet::setCurrent(Qet::Orientation ori) {$/;"	f	class:OrientationSet
setCurrentItem	ui/autonumselectorwidget.cpp	/^void AutonumSelectorWidget::setCurrentItem(const QString &item) {$/;"	f	class:AutonumSelectorWidget
setCurrentPage	configdialog.cpp	/^void ConfigDialog::setCurrentPage(const int index) {$/;"	f	class:ConfigDialog
setCurrentPage	ui/projectpropertiesdialog.cpp	/^void ProjectPropertiesDialog::setCurrentPage(ProjectPropertiesDialog::Page p) {$/;"	f	class:ProjectPropertiesDialog
setCurrentTitleBlockTemplateName	ui/titleblockpropertieswidget.cpp	/^void TitleBlockPropertiesWidget::setCurrentTitleBlockTemplateName (const QString &name) {$/;"	f	class:TitleBlockPropertiesWidget
setCutCells	titleblock/templatecommands.cpp	/^void CutTemplateCellsCommand::setCutCells(const QList<TitleBlockCell *> &cells) {$/;"	f	class:CutTemplateCellsCommand
setDate	bordertitleblock.h	/^	void setDate(const QDate &date) { btb_date_ = date; }$/;"	f	class:BorderTitleBlock
setDateFromString	titleblockproperties.cpp	/^void TitleBlockProperties::setDateFromString(const QString &date_string) {$/;"	f	class:TitleBlockProperties
setDecorator	editor/graphicspart/customelementpart.cpp	/^void CustomElementPart::setDecorator(ElementPrimitiveDecorator *decorator) {$/;"	f	class:CustomElementPart
setDecorator	editor/graphicspart/parttext.cpp	/^void PartText::setDecorator(ElementPrimitiveDecorator *decorator) {$/;"	f	class:PartText
setDecorator	editor/graphicspart/parttextfield.cpp	/^void PartTextField::setDecorator(ElementPrimitiveDecorator *decorator) {$/;"	f	class:PartTextField
setDefaultBorderProperties	qetproject.cpp	/^void QETProject::setDefaultBorderProperties(const BorderProperties &border) {$/;"	f	class:QETProject
setDefaultConductorProperties	qetproject.cpp	/^void QETProject::setDefaultConductorProperties(const ConductorProperties &conductor) {$/;"	f	class:QETProject
setDefaultFont	richtext/richtexteditor.cpp	/^void RichTextEditor::setDefaultFont(QFont font)$/;"	f	class:qdesigner_internal::RichTextEditor
setDefaultFont	richtext/richtexteditor.cpp	/^void RichTextEditorDialog::setDefaultFont(const QFont &font)$/;"	f	class:qdesigner_internal::RichTextEditorDialog
setDefaultOrientation	orientationset.h	/^inline void OrientationSet::setDefaultOrientation(const Qet::Orientation& new_default_orientation) {$/;"	f	class:OrientationSet
setDefaultReportProperties	qetproject.cpp	/^void QETProject::setDefaultReportProperties(const QString &properties) {$/;"	f	class:QETProject
setDefaultTitleBlockProperties	qetproject.cpp	/^void QETProject::setDefaultTitleBlockProperties(const TitleBlockProperties &titleblock) {$/;"	f	class:QETProject
setDefaultXRefProperties	qetproject.cpp	/^void QETProject::setDefaultXRefProperties(QHash<QString, XRefProperties> hash) {$/;"	f	class:QETProject
setDefaultXRefProperties	qetproject.cpp	/^void QETProject::setDefaultXRefProperties(const QString type, const XRefProperties &properties) {$/;"	f	class:QETProject
setDestinationParentCategory	moveelementsdescription.cpp	/^void MoveElementsDescription::setDestinationParentCategory(ElementsCategory *destination) {$/;"	f	class:MoveElementsDescription
setDestroyQGIOnDelete	qgimanager.cpp	/^void QGIManager::setDestroyQGIOnDelete(bool b) {$/;"	f	class:QGIManager
setDetail	ui/dialogwaiting.cpp	/^void DialogWaiting::setDetail(const QString& val){$/;"	f	class:DialogWaiting
setDiagramHeight	bordertitleblock.cpp	/^void BorderTitleBlock::setDiagramHeight(const qreal &height) {$/;"	f	class:BorderTitleBlock
setDiagramsListVisible	qetprintpreviewdialog.cpp	/^void QETPrintPreviewDialog::setDiagramsListVisible(bool display) {$/;"	f	class:QETPrintPreviewDialog
setDimension	titleblock/templatecommands.cpp	/^void ModifyTemplateGridCommand::setDimension(const TitleBlockDimension &dimension) {$/;"	f	class:ModifyTemplateGridCommand
setDimensionAfter	titleblock/templatecommands.cpp	/^void ModifyTemplateDimension::setDimensionAfter(const TitleBlockDimension &dimension) {$/;"	f	class:ModifyTemplateDimension
setDimensionBefore	titleblock/templatecommands.cpp	/^void ModifyTemplateDimension::setDimensionBefore(const TitleBlockDimension &dimension) {$/;"	f	class:ModifyTemplateDimension
setDisabledShowText	ui/conductorpropertieswidget.cpp	/^void ConductorPropertiesWidget::setDisabledShowText(const bool &disable) {$/;"	f	class:ConductorPropertiesWidget
setDisplayFallbackWidget	projectview.cpp	/^void ProjectView::setDisplayFallbackWidget(bool fallback) {$/;"	f	class:ProjectView
setDisplayGrid	diagram.h	/^inline void Diagram::setDisplayGrid(bool dg) {$/;"	f	class:Diagram
setDisplayHas	properties/xrefproperties.h	/^	void setDisplayHas	  (const DisplayHas dh) {m_display = dh;}$/;"	f	class:XRefProperties
setDisplayText	qtextorientationwidget.cpp	/^void QTextOrientationWidget::setDisplayText(bool display_text) {$/;"	f	class:QTextOrientationWidget
setDocName	diagramprintdialog.cpp	/^void DiagramPrintDialog::setDocName(const QString &name) {$/;"	f	class:DiagramPrintDialog
setDrawColoredConductors	diagram.cpp	/^void Diagram::setDrawColoredConductors(bool dcc) {$/;"	f	class:Diagram
setDrawTerminals	diagram.cpp	/^void Diagram::setDrawTerminals(bool dt) {$/;"	f	class:Diagram
setDroppedTitleBlockTemplate	diagramview.cpp	/^void DiagramView::setDroppedTitleBlockTemplate(const TitleBlockTemplateLocation &tbt) {$/;"	f	class:DiagramView
setEast	orientationset.cpp	/^bool OrientationSet::setEast (bool ori) {$/;"	f	class:OrientationSet
setEditable	editor/graphicspart/parttext.cpp	/^void PartText::setEditable(bool editable) {$/;"	f	class:PartText
setEditable	editor/graphicspart/parttextfield.cpp	/^void PartTextField::setEditable(bool editable) {$/;"	f	class:PartTextField
setElementInformations	qetgraphicsitem/element.cpp	/^void Element::setElementInformations(DiagramContext dc) {$/;"	f	class:Element
setElementScene	editor/editorcommands.cpp	/^void ElementEditionCommand::setElementScene(ElementScene *scene) {$/;"	f	class:ElementEditionCommand
setElementTypeName	editor/elementitemeditor.cpp	/^void ElementItemEditor::setElementTypeName(const QString &name) {$/;"	f	class:ElementItemEditor
setElementView	editor/editorcommands.cpp	/^void ElementEditionCommand::setElementView(ElementView *view) {$/;"	f	class:ElementEditionCommand
setElementsActionEnabled	elementspanelwidget.cpp	/^void ElementsPanelWidget::setElementsActionEnabled(bool enable) {$/;"	f	class:ElementsPanelWidget
setElementsCache	genericpanel.cpp	/^bool GenericPanel::setElementsCache(ElementsCollectionCache *cache, ElementsCollectionCache **previous) {$/;"	f	class:GenericPanel
setErrorMessage	qetresult.cpp	/^void QETResult::setErrorMessage(const QString &error_message) {$/;"	f	class:QETResult
setEventInterface	diagramview.cpp	/^void DiagramView::setEventInterface(DVEventInterface *interface) {$/;"	f	class:DiagramView
setEventInterface	editor/elementscene.cpp	/^void ElementScene::setEventInterface(ESEventInterface *interface) {$/;"	f	class:ElementScene
setExportProperties	exportpropertieswidget.cpp	/^void ExportPropertiesWidget::setExportProperties(const ExportProperties &export_properties) {$/;"	f	class:ExportPropertiesWidget
setFileName	bordertitleblock.h	/^	void setFileName(const QString &filename) { btb_filename_ = filename; }$/;"	f	class:BorderTitleBlock
setFileName	diagramprintdialog.cpp	/^void DiagramPrintDialog::setFileName(const QString &name) {$/;"	f	class:DiagramPrintDialog
setFileName	editor/qetelementeditor.cpp	/^void QETElementEditor::setFileName(const QString &fn) {$/;"	f	class:QETElementEditor
setFilePath	fileelementdefinition.cpp	/^void FileElementDefinition::setFilePath(const QString &path) {$/;"	f	class:FileElementDefinition
setFilePath	fileelementscategory.cpp	/^void FileElementsCategory::setFilePath(const QString &p) {$/;"	f	class:FileElementsCategory
setFilePath	fileelementscollection.cpp	/^void FileElementsCollection::setFilePath(const QString &path) {$/;"	f	class:FileElementsCollection
setFilePath	qetproject.cpp	/^void QETProject::setFilePath(const QString &filepath) {$/;"	f	class:QETProject
setFilePath	xmlelementdefinition.cpp	/^void XmlElementDefinition::setFilePath(const QString &) {$/;"	f	class:XmlElementDefinition
setFilePath	xmlelementscategory.cpp	/^void XmlElementsCategory::setFilePath(const QString &) {$/;"	f	class:XmlElementsCategory
setFilePath	xmlelementscollection.cpp	/^void XmlElementsCollection::setFilePath(const QString &) {$/;"	f	class:XmlElementsCollection
setFilling	editor/graphicspart/customelementgraphicpart.cpp	/^void CustomElementGraphicPart::setFilling(const Filling f)$/;"	f	class:CustomElementGraphicPart
setFinalDestinationInternalName	moveelementsdescription.cpp	/^void MoveElementsDescription::setFinalDestinationInternalName(const QString &name) {$/;"	f	class:MoveElementsDescription
setFirstEndLength	editor/graphicspart/partline.h	/^		void setFirstEndLength(const qreal &l) {first_length = qMin(qAbs(l), m_line.length());}$/;"	f	class:PartLine
setFirstEndType	editor/graphicspart/partline.h	/^		void setFirstEndType(const Qet::EndType &et) {first_end = et;}$/;"	f	class:PartLine
setFirstPoint	conductorsegment.cpp	/^void ConductorSegment::setFirstPoint(const QPointF &p) {$/;"	f	class:ConductorSegment
setFolio	bordertitleblock.h	/^	void setFolio(const QString &folio) { btb_folio_ = folio; }$/;"	f	class:BorderTitleBlock
setFolioData	bordertitleblock.cpp	/^void BorderTitleBlock::setFolioData(int index, int total, const DiagramContext &project_properties) {$/;"	f	class:BorderTitleBlock
setFolioSheetsQuantity	qetproject.cpp	/^void QETProject::setFolioSheetsQuantity(int quantity) {$/;"	f	class:QETProject
setFollowParentRotations	editor/graphicspart/parttextfield.h	/^		void setFollowParentRotations(bool i) {follow_parent_rotations = i;}$/;"	f	class:PartTextField
setFollowParentRotations	qetgraphicsitem/elementtextitem.h	/^inline void ElementTextItem::setFollowParentRotations(bool frp) {$/;"	f	class:ElementTextItem
setFont	qetgraphicsitem/elementtextitem.cpp	/^void ElementTextItem::setFont(const QFont &font) {$/;"	f	class:ElementTextItem
setFont	qtextorientationwidget.cpp	/^void QTextOrientationWidget::setFont(const QFont &font) {$/;"	f	class:QTextOrientationWidget
setFontBold	richtext/richtexteditor.cpp	/^void RichTextEditor::setFontBold(bool b)$/;"	f	class:qdesigner_internal::RichTextEditor
setFontPointSize	richtext/richtexteditor.cpp	/^void RichTextEditor::setFontPointSize(double d)$/;"	f	class:qdesigner_internal::RichTextEditor
setFontSize	qetgraphicsitem/diagramtextitem.cpp	/^void DiagramTextItem::setFontSize(int &s) {$/;"	f	class:DiagramTextItem
setGeometry	titleblock/helpercell.cpp	/^void HelperCell::setGeometry(const QRectF &g) {$/;"	f	class:HelperCell
setGeometry	titleblock/templatevisualcell.cpp	/^void TitleBlockTemplateVisualCell::setGeometry(const QRectF &g) {$/;"	f	class:TitleBlockTemplateVisualCell
setGrid	editor/elementscene.cpp	/^void ElementScene::setGrid(int x_g, int y_g) {$/;"	f	class:ElementScene
setGrid	titleblock/gridlayoutanimation.cpp	/^void GridLayoutAnimation::setGrid(QGraphicsGridLayout *grid) {$/;"	f	class:GridLayoutAnimation
setHandler	moveelementsdescription.cpp	/^void MoveElementsDescription::setHandler(MoveElementsHandler *handler) {$/;"	f	class:MoveElementsDescription
setHeight	editor/graphicspart/abstractpartellipse.cpp	/^void AbstractPartEllipse::setHeight(const qreal h)$/;"	f	class:AbstractPartEllipse
setHeight	editor/graphicspart/partrectangle.cpp	/^void PartRectangle::setHeight(qreal h)$/;"	f	class:PartRectangle
setHiddenOneTextPerFolio	ui/conductorpropertieswidget.cpp	/^void ConductorPropertiesWidget::setHiddenOneTextPerFolio(const bool &hide) {$/;"	f	class:ConductorPropertiesWidget
setHideShow	ui/elementinfopartwidget.cpp	/^void ElementInfoPartWidget::setHideShow(const bool &hide) {$/;"	f	class:ElementInfoPartWidget
setHighlighted	qetgraphicsitem/conductor.cpp	/^void Conductor::setHighlighted(Conductor::Highlight hl) {$/;"	f	class:Conductor
setHighlighted	qetgraphicsitem/element.cpp	/^void Element::setHighlighted(bool hl) {$/;"	f	class:Element
setHotspot	qetgraphicsitem/element.cpp	/^QPoint Element::setHotspot(QPoint hs) {$/;"	f	class:Element
setHtmlText	qetgraphicsitem/diagramtextitem.cpp	/^void DiagramTextItem::setHtmlText(const QString &txt) {$/;"	f	class:DiagramTextItem
setIcon	elementscollection.cpp	/^void ElementsCollection::setIcon(const QIcon &icon) {$/;"	f	class:ElementsCollection
setIconForFiles	recentfiles.cpp	/^void RecentFiles::setIconForFiles(const QIcon &icon) {$/;"	f	class:RecentFiles
setId	diagramfoliolist.h	/^	void setId(int i) {id = i;}$/;"	f	class:DiagramFolioList
setIndex	titleblock/gridlayoutanimation.cpp	/^void GridLayoutAnimation::setIndex(int index) {$/;"	f	class:GridLayoutAnimation
setIndex	titleblock/templatecommands.cpp	/^void ModifyTemplateDimension::setIndex(int index) {$/;"	f	class:ModifyTemplateDimension
setIndex	titleblock/templatecommands.cpp	/^void ModifyTemplateGridCommand::setIndex(int index) {$/;"	f	class:ModifyTemplateGridCommand
setInformation	titleblocktemplate.cpp	/^void TitleBlockTemplate::setInformation(const QString &info) {$/;"	f	class:TitleBlockTemplate
setInformations	editor/elementscene.h	/^inline void ElementScene::setInformations(const QString &infos) {$/;"	f	class:ElementScene
setInsertion	titleblock/templatecommands.cpp	/^void ModifyTemplateGridCommand::setInsertion(bool insertion) {$/;"	f	class:ModifyTemplateGridCommand
setItems	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::setItems(const QList<CustomElementPart *> &items) {$/;"	f	class:ElementPrimitiveDecorator
setItems	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::setItems(const QList<QGraphicsItem *> &items) {$/;"	f	class:ElementPrimitiveDecorator
setItems	ui/autonumselectorwidget.cpp	/^void AutonumSelectorWidget::setItems(const QStringList &items) {$/;"	f	class:AutonumSelectorWidget
setLabel	qetgraphicsitem/reportelement.cpp	/^void ReportElement::setLabel(QString label) {$/;"	f	class:ReportElement
setLabel	titleblock/helpercell.cpp	/^void HelperCell::setLabel(const QString &text, bool set_as_tooltip) {$/;"	f	class:HelperCell
setLanguage	qetapp.cpp	/^void QETApp::setLanguage (const QString &desired_language)$/;"	f	class:QETApp
setLastPoint	editor/graphicspart/partpolygon.cpp	/^void PartPolygon::setLastPoint(const QPointF &point)$/;"	f	class:PartPolygon
setLineStyle	editor/graphicspart/customelementgraphicpart.cpp	/^void CustomElementGraphicPart::setLineStyle(const LineStyle ls)$/;"	f	class:CustomElementGraphicPart
setLineWeight	editor/graphicspart/customelementgraphicpart.cpp	/^void CustomElementGraphicPart::setLineWeight(const LineWeight lw)$/;"	f	class:CustomElementGraphicPart
setList	ui/elementselectorwidget.cpp	/^void ElementSelectorWidget::setList(QList<Element *> elmt_list) {$/;"	f	class:ElementSelectorWidget
setLocale	elementscollectioncache.cpp	/^void ElementsCollectionCache::setLocale(const QString &locale) {$/;"	f	class:ElementsCollectionCache
setLocation	editor/qetelementeditor.cpp	/^void QETElementEditor::setLocation(const ElementsLocation &el) {$/;"	f	class:QETElementEditor
setLocation	titleblock/templatelocationchooser.cpp	/^void TitleBlockTemplateLocationChooser::setLocation(const TitleBlockTemplateLocation &location) {$/;"	f	class:TitleBlockTemplateLocationChooser
setLocation	titleblock/templatelocationsaver.cpp	/^void TitleBlockTemplateLocationSaver::setLocation(const TitleBlockTemplateLocation &location) {$/;"	f	class:TitleBlockTemplateLocationSaver
setLogoStorage	titleblocktemplate.cpp	/^void TitleBlockTemplate::setLogoStorage(const QString &logo_name, const QString &storage) {$/;"	f	class:TitleBlockTemplate
setMainWindowVisible	qetapp.cpp	/^void QETApp::setMainWindowVisible (QMainWindow *window, bool visible)$/;"	f	class:QETApp
setMainWindowsVisible	qetapp.cpp	/^template <class T> void QETApp::setMainWindowsVisible (bool visible)$/;"	f	class:QETApp
setModified	qetproject.cpp	/^void QETProject::setModified(bool modified) {$/;"	f	class:QETProject
setMovable	qettabbar.cpp	/^void QETTabBar::setMovable(bool movable) {$/;"	f	class:QETTabBar
setMovable	qettabwidget.cpp	/^void QETTabWidget::setMovable(bool movable) {$/;"	f	class:QETTabWidget
setName	qetgraphicsitem/terminal.cpp	/^void Terminal::setName(QString name, bool hiddenName) {$/;"	f	class:Terminal
setName	titleblock/templatelocation.cpp	/^void TitleBlockTemplateLocation::setName(const QString &name) {$/;"	f	class:TitleBlockTemplateLocation
setNameForRenamingOperation	basicmoveelementshandler.cpp	/^void BasicMoveElementsHandler::setNameForRenamingOperation(const QString &name) {$/;"	f	class:BasicMoveElementsHandler
setNames	editor/elementscene.h	/^inline void ElementScene::setNames(const NamesList &nameslist) {$/;"	f	class:ElementScene
setNames	editor/qetelementeditor.h	/^inline void QETElementEditor::setNames(const NamesList &nameslist) {$/;"	f	class:QETElementEditor
setNames	elementscategory.cpp	/^void ElementsCategory::setNames(const NamesList &names_list) {$/;"	f	class:ElementsCategory
setNames	nameslistwidget.cpp	/^void NamesListWidget::setNames(const NamesList &provided_names) {$/;"	f	class:NamesListWidget
setNewList	ui/linksingleelementwidget.cpp	/^void LinkSingleElementWidget::setNewList() {$/;"	f	class:LinkSingleElementWidget
setNewSettings	diagramcommands.cpp	/^void ChangeConductorPropertiesCommand::setNewSettings(const ConductorProperties &properties) {$/;"	f	class:ChangeConductorPropertiesCommand
setNewSettings	diagramcommands.cpp	/^void ChangeSeveralConductorsPropertiesCommand::setNewSettings(const ConductorProperties &properties) {$/;"	f	class:ChangeSeveralConductorsPropertiesCommand
setNewSettings	diagramcommands.cpp	/^void ChangeSeveralConductorsPropertiesCommand::setNewSettings(const QList<ConductorProperties> &properties) {$/;"	f	class:ChangeSeveralConductorsPropertiesCommand
setNext	orientationset.cpp	/^Qet::Orientation OrientationSet::setNext() {$/;"	f	class:OrientationSet
setNextPoint	qetgraphicsitem/qetshapeitem.cpp	/^void QetShapeItem::setNextPoint(QPointF P) {$/;"	f	class:QetShapeItem
setNextSegment	conductorsegment.cpp	/^void ConductorSegment::setNextSegment(ConductorSegment *ns) {$/;"	f	class:ConductorSegment
setNoEditable	qetgraphicsitem/diagramtextitem.h	/^	void setNoEditable(bool e = true) {no_editable = e;}$/;"	f	class:DiagramTextItem
setNonFocusable	qetgraphicsitem/diagramtextitem.cpp	/^void DiagramTextItem::setNonFocusable() {$/;"	f	class:DiagramTextItem
setNorth	orientationset.cpp	/^bool OrientationSet::setNorth (bool ori) {$/;"	f	class:OrientationSet
setNull	conductorprofile.cpp	/^void ConductorProfile::setNull() {$/;"	f	class:ConductorProfile
setNumStrategy	numerotationcontextcommands.cpp	/^void NumerotationContextCommands::setNumStrategy(const QString &str) {$/;"	f	class:NumerotationContextCommands
setNumber	qetgraphicsitem/terminal.cpp	/^void Terminal::setNumber(QString number) {$/;"	f	class:Terminal
setOffset	editor/editorcommands.cpp	/^void PastePartsCommand::setOffset(int old_offset_pc, const QPointF &old_start_tlc, int new_offset_pc, const QPointF &new_start_tlc) {$/;"	f	class:PastePartsCommand
setOldSettings	diagramcommands.cpp	/^void ChangeConductorPropertiesCommand::setOldSettings(const ConductorProperties &properties) {$/;"	f	class:ChangeConductorPropertiesCommand
setOldSettings	diagramcommands.cpp	/^void ChangeSeveralConductorsPropertiesCommand::setOldSettings(const QList<ConductorProperties> &properties) {$/;"	f	class:ChangeSeveralConductorsPropertiesCommand
setOpenForDuplication	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::setOpenForDuplication(bool duplicate) {$/;"	f	class:QETTitleBlockTemplateEditor
setOrientation	editor/graphicspart/partterminal.cpp	/^void PartTerminal::setOrientation(Qet::Orientation ori) {$/;"	f	class:PartTerminal
setOrientation	qtextorientationspinboxwidget.cpp	/^void QTextOrientationSpinBoxWidget::setOrientation(const double &value) {$/;"	f	class:QTextOrientationSpinBoxWidget
setOrientation	qtextorientationwidget.cpp	/^void QTextOrientationWidget::setOrientation(const double &angle) {$/;"	f	class:QTextOrientationWidget
setOriginalDestinationInternalName	moveelementsdescription.cpp	/^void MoveElementsDescription::setOriginalDestinationInternalName(const QString &name) {$/;"	f	class:MoveElementsDescription
setOriginalPos	qetgraphicsitem/elementtextitem.cpp	/^void ElementTextItem::setOriginalPos(const QPointF &p) {$/;"	f	class:ElementTextItem
setOriginalRotationAngle	qetgraphicsitem/elementtextitem.cpp	/^void ElementTextItem::setOriginalRotationAngle(const qreal &rotation_angle) {$/;"	f	class:ElementTextItem
setP1	editor/graphicspart/partline.cpp	/^void PartLine::setP1(const QPointF &p1)$/;"	f	class:PartLine
setP2	editor/graphicspart/partline.cpp	/^void PartLine::setP2(const QPointF &p2)$/;"	f	class:PartLine
setP2	qetgraphicsitem/qetshapeitem.cpp	/^void QetShapeItem::setP2(QPointF P2) {$/;"	f	class:QetShapeItem
setPainterStyle	qetgraphicsitem/customelement.cpp	/^void CustomElement::setPainterStyle(QDomElement &e, QPainter &qp) {$/;"	f	class:CustomElement
setParentCollection	titleblock/templatelocation.cpp	/^void TitleBlockTemplateLocation::setParentCollection(TitleBlockTemplatesCollection *collection) {$/;"	f	class:TitleBlockTemplateLocation
setPart	editor/arceditor.cpp	/^bool ArcEditor::setPart(CustomElementPart *new_part) {$/;"	f	class:ArcEditor
setPart	editor/ellipseeditor.cpp	/^bool EllipseEditor::setPart(CustomElementPart *new_part) {$/;"	f	class:EllipseEditor
setPart	editor/lineeditor.cpp	/^bool LineEditor::setPart(CustomElementPart *new_part) {$/;"	f	class:LineEditor
setPart	editor/polygoneditor.cpp	/^bool PolygonEditor::setPart(CustomElementPart *new_part) {$/;"	f	class:PolygonEditor
setPart	editor/rectangleeditor.cpp	/^bool RectangleEditor::setPart(CustomElementPart *new_part) {$/;"	f	class:RectangleEditor
setPart	editor/styleeditor.cpp	/^bool StyleEditor::setPart(CustomElementPart *new_part) {$/;"	f	class:StyleEditor
setPart	editor/terminaleditor.cpp	/^bool TerminalEditor::setPart(CustomElementPart *new_part) {$/;"	f	class:TerminalEditor
setPart	editor/texteditor.cpp	/^bool TextEditor::setPart(CustomElementPart *new_part) {$/;"	f	class:TextEditor
setPart	editor/textfieldeditor.cpp	/^bool TextFieldEditor::setPart(CustomElementPart *new_part) {$/;"	f	class:TextFieldEditor
setParts	editor/elementitemeditor.h	/^		virtual bool setParts(QList <CustomElementPart *>) {return false;}$/;"	f	class:ElementItemEditor
setParts	editor/styleeditor.cpp	/^bool StyleEditor::setParts(QList<CustomElementPart *> part_list)$/;"	f	class:StyleEditor
setPath	elementslocation.cpp	/^void ElementsLocation::setPath(const QString &p) {$/;"	f	class:ElementsLocation
setPhasesCount	conductorproperties.cpp	/^void SingleLineProperties::setPhasesCount(int n) {$/;"	f	class:SingleLineProperties
setPixmap	qetgraphicsitem/diagramimageitem.cpp	/^void DiagramImageItem::setPixmap(const QPixmap &pixmap) {$/;"	f	class:DiagramImageItem
setPixmapStorageFormat	elementscollectioncache.cpp	/^bool ElementsCollectionCache::setPixmapStorageFormat(const QString &format) {$/;"	f	class:ElementsCollectionCache
setPolygon	editor/graphicspart/partpolygon.cpp	/^void PartPolygon::setPolygon(const QPolygonF &polygon)$/;"	f	class:PartPolygon
setPos	qetgraphicsitem/qetgraphicsitem.cpp	/^void QetGraphicsItem::setPos(const QPointF &p) {$/;"	f	class:QetGraphicsItem
setPos	qetgraphicsitem/qetgraphicsitem.cpp	/^void QetGraphicsItem::setPos(qreal x, qreal y) {$/;"	f	class:QetGraphicsItem
setPosition	diagramposition.cpp	/^void DiagramPosition::setPosition(const QPointF &position) {$/;"	f	class:DiagramPosition
setPrefix	properties/xrefproperties.h	/^	void setPrefix (const QString &key, const QString &value) {m_prefix.insert(key, value);}$/;"	f	class:XRefProperties
setPreviewWidth	titleblock/templateview.cpp	/^void TitleBlockTemplateView::setPreviewWidth(int width) {$/;"	f	class:TitleBlockTemplateView
setPrevious	orientationset.cpp	/^Qet::Orientation OrientationSet::setPrevious() {$/;"	f	class:OrientationSet
setPreviousSegment	conductorsegment.cpp	/^void ConductorSegment::setPreviousSegment(ConductorSegment *ps) {$/;"	f	class:ConductorSegment
setPrintOptionsVisible	qetprintpreviewdialog.cpp	/^void QETPrintPreviewDialog::setPrintOptionsVisible(bool display) {$/;"	f	class:QETPrintPreviewDialog
setPrintingMode	exportpropertieswidget.cpp	/^void ExportPropertiesWidget::setPrintingMode(bool mode) {$/;"	f	class:ExportPropertiesWidget
setProfile	qetgraphicsitem/conductor.cpp	/^void Conductor::setProfile(const ConductorProfile &cp, Qt::Corner path_type) {$/;"	f	class:Conductor
setProfiles	qetgraphicsitem/conductor.cpp	/^void Conductor::setProfiles(const ConductorProfilesGroup &cpg) {$/;"	f	class:Conductor
setProgressBar	ui/dialogwaiting.cpp	/^void DialogWaiting::setProgressBar(int val){$/;"	f	class:DialogWaiting
setProgressBarRange	ui/dialogwaiting.cpp	/^void DialogWaiting::setProgressBarRange(int min, int max){$/;"	f	class:DialogWaiting
setProgressReset	ui/dialogwaiting.cpp	/^void DialogWaiting::setProgressReset(){$/;"	f	class:DialogWaiting
setProject	diagram.cpp	/^void Diagram::setProject(QETProject *project)$/;"	f	class:Diagram
setProject	elementdefinition.cpp	/^void ElementDefinition::setProject(QETProject *) {$/;"	f	class:ElementDefinition
setProject	elementscategory.cpp	/^void ElementsCategory::setProject(QETProject *) {$/;"	f	class:ElementsCategory
setProject	elementscollection.cpp	/^void ElementsCollection::setProject(QETProject *project) {$/;"	f	class:ElementsCollection
setProject	elementslocation.cpp	/^void ElementsLocation::setProject(QETProject *project) {$/;"	f	class:ElementsLocation
setProject	projectconfigpages.cpp	/^QETProject *ProjectConfigPage::setProject(QETProject *new_project, bool read_values) {$/;"	f	class:ProjectConfigPage
setProject	projectview.cpp	/^void ProjectView::setProject(QETProject *project) {$/;"	f	class:ProjectView
setProjectProperties	qetproject.cpp	/^void QETProject::setProjectProperties(const DiagramContext &context) {$/;"	f	class:QETProject
setProperties	qetgraphicsitem/conductor.cpp	/^void Conductor::setProperties(const ConductorProperties &p) {$/;"	f	class:Conductor
setProperties	ui/borderpropertieswidget.cpp	/^void BorderPropertiesWidget::setProperties(const BorderProperties &bp) {$/;"	f	class:BorderPropertiesWidget
setProperties	ui/conductorpropertieswidget.cpp	/^void ConductorPropertiesWidget::setProperties(const ConductorProperties &properties) {$/;"	f	class:ConductorPropertiesWidget
setProperties	ui/titleblockpropertieswidget.cpp	/^void TitleBlockPropertiesWidget::setProperties(const TitleBlockProperties &properties) {$/;"	f	class:TitleBlockPropertiesWidget
setProperties	ui/xrefpropertieswidget.cpp	/^void XRefPropertiesWidget::setProperties(const QHash <QString, XRefProperties> &properties) {$/;"	f	class:XRefPropertiesWidget
setProperty	editor/graphicspart/customelementgraphicpart.h	/^		virtual void     setProperty (const char *name, const QVariant &value) {QObject::setProperty(name, value);}$/;"	f	class:CustomElementGraphicPart
setProperty	editor/graphicspart/parttext.h	/^	void setProperty(const char *name, const QVariant &value) {QGraphicsTextItem::setProperty(name, value);}$/;"	f	class:PartText
setProperty	editor/graphicspart/parttextfield.h	/^	virtual void setProperty(const char *name, const QVariant &value) {QGraphicsTextItem::setProperty(name, value);}$/;"	f	class:PartTextField
setProtocol	elementdefinition.cpp	/^void ElementDefinition::setProtocol(const QString &) {$/;"	f	class:ElementDefinition
setProtocol	elementscategory.cpp	/^void ElementsCategory::setProtocol(const QString &) {$/;"	f	class:ElementsCategory
setProtocol	elementscollection.cpp	/^void ElementsCollection::setProtocol(const QString &p) {$/;"	f	class:ElementsCollection
setProtocol	titleblock/templatescollection.cpp	/^void TitleBlockTemplatesCollection::setProtocol(const QString &protocol) {$/;"	f	class:TitleBlockTemplatesCollection
setQPainterAntiAliasing	qetgraphicsitem/customelement.cpp	/^void CustomElement::setQPainterAntiAliasing(QPainter &qp, bool aa) {$/;"	f	class:CustomElement
setReadOnly	diagramcontextwidget.cpp	/^void DiagramContextWidget::setReadOnly(bool ro) {$/;"	f	class:DiagramContextWidget
setReadOnly	editor/qetelementeditor.cpp	/^void QETElementEditor::setReadOnly(bool ro) {$/;"	f	class:QETElementEditor
setReadOnly	nameslistwidget.cpp	/^void NamesListWidget::setReadOnly(bool ro) {$/;"	f	class:NamesListWidget
setReadOnly	qetproject.cpp	/^void QETProject::setReadOnly(bool read_only)$/;"	f	class:QETProject
setReadOnly	qtextorientationspinboxwidget.cpp	/^void QTextOrientationSpinBoxWidget::setReadOnly(bool ro) {$/;"	f	class:QTextOrientationSpinBoxWidget
setReadOnly	qtextorientationwidget.cpp	/^void QTextOrientationWidget::setReadOnly(bool ro) {$/;"	f	class:QTextOrientationWidget
setReadOnly	titleblock/dimensionwidget.cpp	/^void TitleBlockDimensionWidget::setReadOnly(bool read_only) {$/;"	f	class:TitleBlockDimensionWidget
setReadOnly	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::setReadOnly(bool read_only) {$/;"	f	class:QETTitleBlockTemplateEditor
setReadOnly	titleblock/templatecellwidget.cpp	/^void TitleBlockTemplateCellWidget::setReadOnly(bool read_only) {$/;"	f	class:TitleBlockTemplateCellWidget
setReadOnly	titleblock/templatelogomanager.cpp	/^void TitleBlockTemplateLogoManager::setReadOnly(bool read_only) {$/;"	f	class:TitleBlockTemplateLogoManager
setReadOnly	titleblock/templateview.cpp	/^void TitleBlockTemplateView::setReadOnly(bool read_only) {$/;"	f	class:TitleBlockTemplateView
setReadOnly	ui/borderpropertieswidget.cpp	/^void BorderPropertiesWidget::setReadOnly(const bool &ro) {$/;"	f	class:BorderPropertiesWidget
setReadOnly	ui/conductorpropertieswidget.cpp	/^void ConductorPropertiesWidget::setReadOnly(const bool &ro) {$/;"	f	class:ConductorPropertiesWidget
setReadOnly	ui/titleblockpropertieswidget.cpp	/^void TitleBlockPropertiesWidget::setReadOnly(const bool &ro) {$/;"	f	class:TitleBlockPropertiesWidget
setReadOnly	ui/xrefpropertieswidget.cpp	/^void XRefPropertiesWidget::setReadOnly(bool ro) {$/;"	f	class:XRefPropertiesWidget
setRealSize	editor/graphicspart/parttext.h	/^		void setRealSize(qreal rs) {real_font_size_ = rs;}$/;"	f	class:PartText
setRealSize	editor/graphicspart/parttextfield.h	/^		void setRealSize(const qreal size) {real_font_size_ = size;}$/;"	f	class:PartTextField
setRect	editor/graphicspart/abstractpartellipse.cpp	/^void AbstractPartEllipse::setRect(const QRectF &rect)$/;"	f	class:AbstractPartEllipse
setRect	editor/graphicspart/partrectangle.cpp	/^void PartRectangle::setRect(const QRectF &rect)$/;"	f	class:PartRectangle
setRectTopLeft	editor/graphicspart/partrectangle.cpp	/^void PartRectangle::setRectTopLeft(const QPointF &point) {$/;"	f	class:PartRectangle
setRecursive	moveelementsdescription.cpp	/^void MoveElementsDescription::setRecursive(bool r) {$/;"	f	class:MoveElementsDescription
setReportProperties	ui/reportpropertiewidget.cpp	/^void ReportPropertieWidget::setReportProperties(QString label) {$/;"	f	class:ReportPropertieWidget
setResult	qetresult.cpp	/^void QETResult::setResult(bool result) {$/;"	f	class:QETResult
setRotation	editor/graphicspart/parttext.h	/^	void setRotation(qreal angle) {(QGraphicsObject::setRotation(QET::correctAngle(angle)));}$/;"	f	class:PartText
setRotationAngle	editor/graphicspart/parttextfield.h	/^		void setRotationAngle(const qreal &angle) {setRotation(QET::correctAngle(angle));}$/;"	f	class:PartTextField
setRotationAngle	qetgraphicsitem/diagramtextitem.cpp	/^void DiagramTextItem::setRotationAngle(const qreal &rotation) {$/;"	f	class:DiagramTextItem
setRowDimension	titleblocktemplate.cpp	/^void TitleBlockTemplate::setRowDimension(int i, const TitleBlockDimension &dimension) {$/;"	f	class:TitleBlockTemplate
setRowsCount	bordertitleblock.cpp	/^void BorderTitleBlock::setRowsCount(int nb_r) {$/;"	f	class:BorderTitleBlock
setRowsHeaderWidth	bordertitleblock.cpp	/^void BorderTitleBlock::setRowsHeaderWidth(const qreal &new_rhw) {$/;"	f	class:BorderTitleBlock
setRowsHeight	bordertitleblock.cpp	/^void BorderTitleBlock::setRowsHeight(const qreal &new_rh) {$/;"	f	class:BorderTitleBlock
setScaledPrimitives	editor/editorcommands.cpp	/^void ScalePartsCommand::setScaledPrimitives(const QList<CustomElementPart *> &primitives) {$/;"	f	class:ScalePartsCommand
setScene	editor/elementview.cpp	/^void ElementView::setScene(ElementScene *s) {$/;"	f	class:ElementView
setSecondEndLength	editor/graphicspart/partline.h	/^		void setSecondEndLength(const qreal &l) {second_length = qMin(qAbs(l), m_line.length());}$/;"	f	class:PartLine
setSecondEndType	editor/graphicspart/partline.h	/^		void setSecondEndType(const Qet::EndType &et) {second_end = et;}$/;"	f	class:PartLine
setSecondPoint	conductorsegment.cpp	/^void ConductorSegment::setSecondPoint(const QPointF &p) {$/;"	f	class:ConductorSegment
setSelectedAllDiagrams	diagramschooser.cpp	/^void DiagramsChooser::setSelectedAllDiagrams(bool select) {$/;"	f	class:DiagramsChooser
setSelectedDiagrams	diagramschooser.cpp	/^void DiagramsChooser::setSelectedDiagrams(const QList<Diagram *> &diagrams_list, bool select, bool reset) {$/;"	f	class:DiagramsChooser
setSelectedElement	ui/elementselectorwidget.h	/^	void setSelectedElement  (const int i) {selected_element = elements_list.at(i);}$/;"	f	class:ElementSelectorWidget
setSelectedText	ui/potentialtextsdialog.cpp	/^void PotentialTextsDialog::setSelectedText(QString text) {$/;"	f	class:PotentialTextsDialog
setSelectionMode	diagramview.cpp	/^void DiagramView::setSelectionMode() {$/;"	f	class:DiagramView
setSelectionMode	editor/elementview.cpp	/^void ElementView::setSelectionMode() {$/;"	f	class:ElementView
setShow	ui/elementinfopartwidget.cpp	/^void ElementInfoPartWidget::setShow(const bool &s) {$/;"	f	class:ElementInfoPartWidget
setShowPowerContac	properties/xrefproperties.h	/^	void setShowPowerContac (const bool a) {m_show_power_ctc = a;}$/;"	f	class:XRefProperties
setSimplifyRichText	richtext/richtexteditor.cpp	/^void RichTextEditor::setSimplifyRichText(bool v)$/;"	f	class:qdesigner_internal::RichTextEditor
setSize	editor/graphicspart/parttext.h	/^		void setSize (qreal s) {setFont(QETApp::diagramTextsFont(s));}$/;"	f	class:PartText
setSize	editor/graphicspart/parttextfield.h	/^		void setSize (const int value) {setFont(QETApp::diagramTextsFont(value)); real_font_size_ = value;}$/;"	f	class:PartTextField
setSize	qetgraphicsitem/element.cpp	/^QSize Element::setSize(int wid, int hei) {$/;"	f	class:Element
setSnapTo	properties/xrefproperties.h	/^	void setSnapTo (const SnapTo st) {m_snap_to = st;}$/;"	f	class:XRefProperties
setSorting	diagramcontextwidget.cpp	/^void DiagramContextWidget::setSorting(bool enable, int column, Qt::SortOrder order ) {$/;"	f	class:DiagramContextWidget
setSourceItemDeleted	moveelementsdescription.cpp	/^void MoveElementsDescription::setSourceItemDeleted(bool deleted) {$/;"	f	class:MoveElementsDescription
setSouth	orientationset.cpp	/^bool OrientationSet::setSouth (bool ori) {$/;"	f	class:OrientationSet
setSpanAngle	editor/graphicspart/abstractpartellipse.cpp	/^void AbstractPartEllipse::setSpanAngle(const int &span_angle)$/;"	f	class:AbstractPartEllipse
setSplashScreenStep	qetapp.cpp	/^void QETApp::setSplashScreenStep (const QString &message)$/;"	f	class:QETApp
setStartAngle	editor/graphicspart/abstractpartellipse.cpp	/^void AbstractPartEllipse::setStartAngle(const int &start_angle)$/;"	f	class:AbstractPartEllipse
setStyle	qetgraphicsitem/qetshapeitem.cpp	/^void QetShapeItem::setStyle(Qt::PenStyle newStyle)$/;"	f	class:QetShapeItem
setTabbedMode	qetdiagrameditor.cpp	/^void QETDiagramEditor::setTabbedMode() {$/;"	f	class:QETDiagramEditor
setTagg	editor/graphicspart/parttextfield.h	/^		void setTagg(const QString &tagg) {m_tagg = tagg;}$/;"	f	class:PartTextField
setTagg	qetgraphicsitem/elementtextitem.h	/^		void         setTagg                  ( const QString &str ) {tagg_ = str;}$/;"	f	class:ElementTextItem
setTaggedText	qetgraphicsitem/customelement.cpp	/^ElementTextItem* CustomElement::setTaggedText(const QString &tagg, const QString &newstr, const bool noeditable) {$/;"	f	class:CustomElement
setTemplateCell	titleblock/templatevisualcell.cpp	/^void TitleBlockTemplateVisualCell::setTemplateCell(TitleBlockTemplate *tbt, TitleBlockCell *cell) {$/;"	f	class:TitleBlockTemplateVisualCell
setTemplateXmlDescription	qetproject.cpp	/^bool QETProject::setTemplateXmlDescription(const QString &template_name, const QDomElement &xml_elmt) {$/;"	f	class:QETProject
setTemplateXmlDescription	titleblock/templatescollection.cpp	/^bool TitleBlockTemplatesFilesCollection::setTemplateXmlDescription(const QString &template_name, const QDomElement &xml_element) {$/;"	f	class:TitleBlockTemplatesFilesCollection
setTemplateXmlDescription	titleblock/templatescollection.cpp	/^bool TitleBlockTemplatesProjectCollection::setTemplateXmlDescription(const QString &template_name, const QDomElement &xml_elmt) {$/;"	f	class:TitleBlockTemplatesProjectCollection
setText	qetgraphicsitem/conductor.cpp	/^void Conductor::setText(const QString &t) {$/;"	f	class:Conductor
setText	richtext/richtexteditor.cpp	/^void RichTextEditor::setText(const QString &text)$/;"	f	class:qdesigner_internal::RichTextEditor
setText	richtext/richtexteditor.cpp	/^void RichTextEditorDialog::setText(const QString &text)$/;"	f	class:qdesigner_internal::RichTextEditorDialog
setText	ui/elementinfopartwidget.cpp	/^void ElementInfoPartWidget::setText(const QString &txt) {$/;"	f	class:ElementInfoPartWidget
setTextParent	qetgraphicsitem/commentitem.cpp	/^bool CommentItem::setTextParent() {$/;"	f	class:CommentItem
setTextParent	qetgraphicsitem/crossrefitem.cpp	/^void CrossRefItem::setTextParent() {$/;"	f	class:CrossRefItem
setTitle	bordertitleblock.h	/^	void setTitle(const QString &title) {$/;"	f	class:BorderTitleBlock
setTitle	elementscollection.cpp	/^void ElementsCollection::setTitle(const QString &title) {$/;"	f	class:ElementsCollection
setTitle	qetproject.cpp	/^void QETProject::setTitle(const QString &title) {$/;"	f	class:QETProject
setTitle	titleblock/templatescollection.cpp	/^void TitleBlockTemplatesCollection::setTitle(const QString &title) {$/;"	f	class:TitleBlockTemplatesCollection
setTitle	ui/dialogwaiting.cpp	/^void DialogWaiting::setTitle(const QString& val){$/;"	f	class:DialogWaiting
setTitleBlockTemplate	bordertitleblock.cpp	/^void BorderTitleBlock::setTitleBlockTemplate(const TitleBlockTemplate *titleblock_template) {$/;"	f	class:BorderTitleBlock
setTitleBlockTemplate	diagram.cpp	/^void Diagram::setTitleBlockTemplate(const QString &template_name) {$/;"	f	class:Diagram
setTitleBlockTemplate	titleblock/templatecommands.cpp	/^void TitleBlockTemplateCommand::setTitleBlockTemplate(TitleBlockTemplate *tbtemplate) {$/;"	f	class:TitleBlockTemplateCommand
setTitleBlockTemplate	titleblock/templateview.cpp	/^void TitleBlockTemplateView::setTitleBlockTemplate(TitleBlockTemplate *tbtemplate) {$/;"	f	class:TitleBlockTemplateView
setTitleBlockTemplate	titleblocktemplaterenderer.cpp	/^void TitleBlockTemplateRenderer::setTitleBlockTemplate(const TitleBlockTemplate *titleblock_template) {$/;"	f	class:TitleBlockTemplateRenderer
setTitleBlockTemplatesCollection	ui/titleblockpropertieswidget.cpp	/^void TitleBlockPropertiesWidget::setTitleBlockTemplatesCollection(TitleBlockTemplatesCollection *tbt_collection) {$/;"	f	class:TitleBlockPropertiesWidget
setTitleBlockTemplatesList	ui/titleblockpropertieswidget.cpp	/^void TitleBlockPropertiesWidget::setTitleBlockTemplatesList(const QStringList &tbt) {$/;"	f	class:TitleBlockPropertiesWidget
setTitleBlockTemplatesVisible	ui/titleblockpropertieswidget.cpp	/^void TitleBlockPropertiesWidget::setTitleBlockTemplatesVisible(const bool &visible) {$/;"	f	class:TitleBlockPropertiesWidget
setTitleBlockWidth	bordertitleblock.cpp	/^void BorderTitleBlock::setTitleBlockWidth(const qreal &new_iw) {$/;"	f	class:BorderTitleBlock
setTransformation	editor/editorcommands.cpp	/^void ScalePartsCommand::setTransformation(const QRectF &original_rect, const QRectF &new_rect) {$/;"	f	class:ScalePartsCommand
setType	titleblock/helpercell.cpp	/^void HelperCell::setType(QET::TitleBlockColumnLength type) {$/;"	f	class:HelperCell
setType	titleblock/templatecommands.cpp	/^void ModifyTemplateDimension::setType(bool type) {$/;"	f	class:ModifyTemplateDimension
setType	titleblock/templatecommands.cpp	/^void ModifyTemplateGridCommand::setType(bool type) {$/;"	f	class:ModifyTemplateGridCommand
setType	ui/numparteditorw.cpp	/^void NumPartEditorW::setType(NumPartEditorW::type t, bool fnum) {$/;"	f	class:NumPartEditorW
setUpActions	qetdiagrameditor.cpp	/^void QETDiagramEditor::setUpActions() {$/;"	f	class:QETDiagramEditor
setUpCompleter	ui/linksingleelementwidget.cpp	/^void LinkSingleElementWidget::setUpCompleter() {$/;"	f	class:LinkSingleElementWidget
setUpCrossBoundingRect	qetgraphicsitem/crossrefitem.cpp	/^void CrossRefItem::setUpCrossBoundingRect(QPainter &painter) {$/;"	f	class:CrossRefItem
setUpElementsPanel	qetdiagrameditor.cpp	/^void QETDiagramEditor::setUpElementsPanel() {$/;"	f	class:QETDiagramEditor
setUpInterface	editor/ui/elementpropertieseditorwidget.cpp	/^void ElementPropertiesEditorWidget::setUpInterface() {$/;"	f	class:ElementPropertiesEditorWidget
setUpMenu	qetdiagrameditor.cpp	/^void QETDiagramEditor::setUpMenu() {$/;"	f	class:QETDiagramEditor
setUpToolBar	qetdiagrameditor.cpp	/^void QETDiagramEditor::setUpToolBar() {$/;"	f	class:QETDiagramEditor
setUpUndoStack	qetdiagrameditor.cpp	/^void QETDiagramEditor::setUpUndoStack() {$/;"	f	class:QETDiagramEditor
setUsableTexts	qtextorientationwidget.cpp	/^void QTextOrientationWidget::setUsableTexts(const QStringList &texts_list) {$/;"	f	class:QTextOrientationWidget
setUseBorder	diagram.h	/^inline void Diagram::setUseBorder(bool ub) {$/;"	f	class:Diagram
setUseCache	titleblocktemplaterenderer.cpp	/^void TitleBlockTemplateRenderer::setUseCache(bool use_cache) {$/;"	f	class:TitleBlockTemplateRenderer
setVAlignSub	richtext/richtexteditor.cpp	/^void RichTextEditorToolBar::setVAlignSub(bool sub)$/;"	f	class:qdesigner_internal::RichTextEditorToolBar
setVAlignSuper	richtext/richtexteditor.cpp	/^void RichTextEditorToolBar::setVAlignSuper(bool super)$/;"	f	class:qdesigner_internal::RichTextEditorToolBar
setValue	qtextorientationspinboxwidget.cpp	/^void QTextOrientationSpinBoxWidget::setValue(const double &value) {$/;"	f	class:QTextOrientationSpinBoxWidget
setValue	titleblock/dimensionwidget.cpp	/^void TitleBlockDimensionWidget::setValue(const TitleBlockDimension &dim) {$/;"	f	class:TitleBlockDimensionWidget
setView	titleblock/templatecommands.cpp	/^void ModifyTitleBlockCellCommand::setView(TitleBlockTemplateView *view) {$/;"	f	class:ModifyTitleBlockCellCommand
setView	titleblock/templatecommands.cpp	/^void TitleBlockTemplateCommand::setView(TitleBlockTemplateView *view) {$/;"	f	class:TitleBlockTemplateCommand
setVisualisationMode	diagramview.cpp	/^void DiagramView::setVisualisationMode() {$/;"	f	class:DiagramView
setVisualisationMode	editor/elementview.cpp	/^void ElementView::setVisualisationMode() {$/;"	f	class:ElementView
setWest	orientationset.cpp	/^bool OrientationSet::setWest (bool ori) {$/;"	f	class:OrientationSet
setWidth	editor/graphicspart/abstractpartellipse.cpp	/^void AbstractPartEllipse::setWidth(const qreal w)$/;"	f	class:AbstractPartEllipse
setWidth	editor/graphicspart/partrectangle.cpp	/^void PartRectangle::setWidth(qreal w)$/;"	f	class:PartRectangle
setWindowedMode	qetdiagrameditor.cpp	/^void QETDiagramEditor::setWindowedMode() {$/;"	f	class:QETDiagramEditor
setXml	fileelementdefinition.cpp	/^bool FileElementDefinition::setXml(const QDomElement &xml_element) {$/;"	f	class:FileElementDefinition
setXml	xmlelementdefinition.cpp	/^bool XmlElementDefinition::setXml(const QDomElement &xml_element) {$/;"	f	class:XmlElementDefinition
settings	qetapp.cpp	/^QSettings &QETApp::settings()$/;"	f	class:QETApp
settingsSectionName	diagramprintdialog.cpp	/^QString DiagramPrintDialog::settingsSectionName(const QPrinter *printer) {$/;"	f	class:DiagramPrintDialog
settings_menu_	qetmainwindow.h	/^	QMenu *settings_menu_;                   \/\/\/< Settings menu$/;"	m	class:QETMainWindow
setupActions	editor/qetelementeditor.cpp	/^void QETElementEditor::setupActions() {$/;"	f	class:QETElementEditor
setupAnimation	diagramcommands.cpp	/^void MoveElementsCommand::setupAnimation(QObject *target, const QByteArray &propertyName, const QVariant start, const QVariant end) {$/;"	f	class:MoveElementsCommand
setupInterface	editor/qetelementeditor.cpp	/^void QETElementEditor::setupInterface() {$/;"	f	class:QETElementEditor
setupMenus	editor/qetelementeditor.cpp	/^void QETElementEditor::setupMenus() {$/;"	f	class:QETElementEditor
setupTitleBlockTemplatesCollection	qetproject.cpp	/^void QETProject::setupTitleBlockTemplatesCollection() {$/;"	f	class:QETProject
setupUi	richtext/ui_addlinkdialog.h	/^    void setupUi(QDialog *AddLinkDialog)$/;"	f	class:Ui_AddLinkDialog
setupUi	ui/ui_addlinkdialog.h	/^    void setupUi(QDialog *AddLinkDialog)$/;"	f	class:Ui_AddLinkDialog
setupUi	ui/ui_autonumselectorwidget.h	/^    void setupUi(QWidget *AutonumSelectorWidget)$/;"	f	class:Ui_AutonumSelectorWidget
setupUi	ui/ui_borderpropertieswidget.h	/^    void setupUi(QWidget *BorderPropertiesWidget)$/;"	f	class:Ui_BorderPropertiesWidget
setupUi	ui/ui_conductorpropertiesdialog.h	/^    void setupUi(QDialog *ConductorPropertiesDialog)$/;"	f	class:Ui_ConductorPropertiesDialog
setupUi	ui/ui_conductorpropertieswidget.h	/^    void setupUi(QWidget *ConductorPropertiesWidget)$/;"	f	class:Ui_ConductorPropertiesWidget
setupUi	ui/ui_diagramselection.h	/^    void setupUi(QWidget *diagramselection)$/;"	f	class:Ui_diagramselection
setupUi	ui/ui_dialogautonum.h	/^    void setupUi(QDialog *DialogAutoNum)$/;"	f	class:Ui_DialogAutoNum
setupUi	ui/ui_dialogwaiting.h	/^    void setupUi(QDialog *DialogWaiting)$/;"	f	class:Ui_DialogWaiting
setupUi	ui/ui_elementinfopartwidget.h	/^    void setupUi(QWidget *ElementInfoPartWidget)$/;"	f	class:Ui_ElementInfoPartWidget
setupUi	ui/ui_elementinfowidget.h	/^    void setupUi(QWidget *ElementInfoWidget)$/;"	f	class:Ui_ElementInfoWidget
setupUi	ui/ui_elementpropertieseditorwidget.h	/^    void setupUi(QDialog *ElementPropertiesEditorWidget)$/;"	f	class:Ui_ElementPropertiesEditorWidget
setupUi	ui/ui_elementselectorwidget.h	/^    void setupUi(QWidget *ElementSelectorWidget)$/;"	f	class:Ui_ElementSelectorWidget
setupUi	ui/ui_linksingleelementwidget.h	/^    void setupUi(QWidget *LinkSingleElementWidget)$/;"	f	class:Ui_LinkSingleElementWidget
setupUi	ui/ui_masterpropertieswidget.h	/^    void setupUi(QWidget *MasterPropertiesWidget)$/;"	f	class:Ui_MasterPropertiesWidget
setupUi	ui/ui_numparteditorw.h	/^    void setupUi(QWidget *NumPartEditorW)$/;"	f	class:Ui_NumPartEditorW
setupUi	ui/ui_potentialtextsdialog.h	/^    void setupUi(QDialog *PotentialTextsDialog)$/;"	f	class:Ui_PotentialTextsDialog
setupUi	ui/ui_reportpropertiewidget.h	/^    void setupUi(QWidget *ReportPropertieWidget)$/;"	f	class:Ui_ReportPropertieWidget
setupUi	ui/ui_selectautonumw.h	/^    void setupUi(QWidget *SelectAutonumW)$/;"	f	class:Ui_SelectAutonumW
setupUi	ui/ui_titleblockpropertieswidget.h	/^    void setupUi(QWidget *TitleBlockPropertiesWidget)$/;"	f	class:Ui_TitleBlockPropertiesWidget
setupUi	ui/ui_xrefpropertieswidget.h	/^    void setupUi(QWidget *XRefPropertiesWidget)$/;"	f	class:Ui_XRefPropertiesWidget
shape	editor/graphicspart/partarc.cpp	/^QPainterPath PartArc::shape() const$/;"	f	class:PartArc
shape	editor/graphicspart/partellipse.cpp	/^QPainterPath PartEllipse::shape() const$/;"	f	class:PartEllipse
shape	editor/graphicspart/partline.cpp	/^QPainterPath PartLine::shape() const$/;"	f	class:PartLine
shape	editor/graphicspart/partpolygon.cpp	/^QPainterPath PartPolygon::shape() const$/;"	f	class:PartPolygon
shape	editor/graphicspart/partrectangle.cpp	/^QPainterPath PartRectangle::shape() const$/;"	f	class:PartRectangle
shape	editor/graphicspart/partterminal.cpp	/^QPainterPath PartTerminal::shape() const$/;"	f	class:PartTerminal
shape	qetgraphicsitem/conductor.cpp	/^QPainterPath Conductor::shape() const {$/;"	f	class:Conductor
shape	qetgraphicsitem/crossrefitem.cpp	/^QPainterPath CrossRefItem::shape() const{$/;"	f	class:CrossRefItem
shape	qetgraphicsitem/qetshapeitem.cpp	/^QPainterPath QetShapeItem::shape() const {$/;"	f	class:QetShapeItem
shape_	diagramcommands.h	/^	QetShapeItem *shape_;$/;"	m	class:ChangeShapeStyleCommand
shapes	diagramcontent.h	/^	QSet<QetShapeItem *> shapes;$/;"	m	class:DiagramContent
shareOffsetBetweenSegments	qetgraphicsitem/conductor.cpp	/^QHash<ConductorSegmentProfile *, qreal> Conductor::shareOffsetBetweenSegments($/;"	f	class:Conductor
shared_memory_	qetsingleapplication.h	/^	QSharedMemory shared_memory_;$/;"	m	class:QETSingleApplication
sheetHeight	createdxf.cpp	/^const double Createdxf::sheetHeight = 2700;$/;"	m	class:Createdxf	file:
sheetHeight	createdxf.h	/^	static const double sheetHeight;$/;"	m	class:Createdxf
sheetRectangle	diagramfoliolist.h	/^	QRectF sheetRectangle;$/;"	m	class:DiagramFolioList
sheetWidth	createdxf.cpp	/^const double Createdxf::sheetWidth = 4000;$/;"	m	class:Createdxf	file:
sheetWidth	createdxf.h	/^	static const double sheetWidth;$/;"	m	class:Createdxf
showDiagram	projectview.cpp	/^void ProjectView::showDiagram(Diagram *diagram) {$/;"	f	class:ProjectView
showDiagram	projectview.cpp	/^void ProjectView::showDiagram(DiagramView *diagram) {$/;"	f	class:ProjectView
showDialog	richtext/richtexteditor.cpp	/^int AddLinkDialog::showDialog()$/;"	f	class:qdesigner_internal::AddLinkDialog
showDialog	richtext/richtexteditor.cpp	/^int RichTextEditorDialog::showDialog()$/;"	f	class:qdesigner_internal::RichTextEditorDialog
showElement	ui/elementselectorwidget.cpp	/^void ElementSelectorWidget::showElement(Element *elmt) {$/;"	f	class:ElementSelectorWidget
showElementFromLWI	ui/masterpropertieswidget.cpp	/^void MasterPropertiesWidget::showElementFromLWI(QListWidgetItem *lwi) {$/;"	f	class:MasterPropertiesWidget
showElementFromList	ui/elementselectorwidget.cpp	/^void ElementSelectorWidget::showElementFromList(const int i) {$/;"	f	class:ElementSelectorWidget
showError	qetdiagrameditor.cpp	/^void QETDiagramEditor::showError(const QETResult &result) {$/;"	f	class:QETDiagramEditor
showError	qetdiagrameditor.cpp	/^void QETDiagramEditor::showError(const QString &error) {$/;"	f	class:QETDiagramEditor
showMe	diagram.h	/^		void        showMe() {emit showDiagram(this);}$/;"	f	class:Diagram
showPowerContact	properties/xrefproperties.h	/^	bool showPowerContact	() const	   {return m_show_power_ctc;}$/;"	f	class:XRefProperties
showed_element	ui/elementselectorwidget.h	/^	Element                   *selected_element, *showed_element;$/;"	m	class:ElementSelectorWidget
signal_map	qetapp.h	/^	QSignalMapper signal_map;$/;"	m	class:QETApp
simpleErrorMessage	interactivemoveelementshandler.cpp	/^void InteractiveMoveElementsHandler::simpleErrorMessage(const QString &message) const {$/;"	f	class:InteractiveMoveElementsHandler
simplifyRichText	richtext/richtexteditor.cpp	/^    bool simplifyRichText() const      { return m_simplifyRichText; }$/;"	f	class:qdesigner_internal::RichTextEditor
simplifyRichTextDefault	richtext/richtexteditor.cpp	/^const bool simplifyRichTextDefault = true;$/;"	v
simplifyRichTextFilter	richtext/richtexteditor.cpp	/^	QString simplifyRichTextFilter(const QString &in, bool *isPlainTextPtr = 0)$/;"	f	namespace:qdesigner_internal
singleItem	editor/elementprimitivedecorator.cpp	/^CustomElementPart *ElementPrimitiveDecorator::singleItem() const {$/;"	f	class:ElementPrimitiveDecorator
singleItemDoubleClickEvent	editor/graphicspart/customelementpart.cpp	/^bool CustomElementPart::singleItemDoubleClickEvent(ElementPrimitiveDecorator *, QGraphicsSceneMouseEvent *) {$/;"	f	class:CustomElementPart
singleItemDoubleClickEvent	editor/graphicspart/parttext.cpp	/^bool PartText::singleItemDoubleClickEvent(ElementPrimitiveDecorator *decorator, QGraphicsSceneMouseEvent *event) {$/;"	f	class:PartText
singleItemDoubleClickEvent	editor/graphicspart/parttextfield.cpp	/^bool PartTextField::singleItemDoubleClickEvent(ElementPrimitiveDecorator *decorator, QGraphicsSceneMouseEvent *event) {$/;"	f	class:PartTextField
singleItemMoveEvent	editor/graphicspart/customelementpart.cpp	/^bool CustomElementPart::singleItemMoveEvent(ElementPrimitiveDecorator *, QGraphicsSceneMouseEvent *) {$/;"	f	class:CustomElementPart
singleItemMoveEvent	editor/graphicspart/parttext.cpp	/^bool PartText::singleItemMoveEvent(ElementPrimitiveDecorator *decorator, QGraphicsSceneMouseEvent *event) {$/;"	f	class:PartText
singleItemMoveEvent	editor/graphicspart/parttextfield.cpp	/^bool PartTextField::singleItemMoveEvent(ElementPrimitiveDecorator *decorator, QGraphicsSceneMouseEvent *event) {$/;"	f	class:PartTextField
singleItemPressEvent	editor/graphicspart/customelementpart.cpp	/^bool CustomElementPart::singleItemPressEvent(ElementPrimitiveDecorator *, QGraphicsSceneMouseEvent *) {$/;"	f	class:CustomElementPart
singleItemPressEvent	editor/graphicspart/parttext.cpp	/^bool PartText::singleItemPressEvent(ElementPrimitiveDecorator *decorator, QGraphicsSceneMouseEvent *event) {$/;"	f	class:PartText
singleItemPressEvent	editor/graphicspart/parttextfield.cpp	/^bool PartTextField::singleItemPressEvent(ElementPrimitiveDecorator *decorator, QGraphicsSceneMouseEvent *event) {$/;"	f	class:PartTextField
singleItemReleaseEvent	editor/graphicspart/customelementpart.cpp	/^bool CustomElementPart::singleItemReleaseEvent(ElementPrimitiveDecorator *, QGraphicsSceneMouseEvent *) {$/;"	f	class:CustomElementPart
singleItemReleaseEvent	editor/graphicspart/parttext.cpp	/^bool PartText::singleItemReleaseEvent(ElementPrimitiveDecorator *decorator, QGraphicsSceneMouseEvent *event) {$/;"	f	class:PartText
singleItemReleaseEvent	editor/graphicspart/parttextfield.cpp	/^bool PartTextField::singleItemReleaseEvent(ElementPrimitiveDecorator *decorator, QGraphicsSceneMouseEvent *event) {$/;"	f	class:PartTextField
singleLineProperties	conductorproperties.h	/^	SingleLineProperties singleLineProperties;$/;"	m	class:ConductorProperties
single_new_properties	diagramcommands.h	/^	ConductorProperties single_new_properties;$/;"	m	class:ChangeSeveralConductorsPropertiesCommand
single_page_view_	qetprintpreviewdialog.h	/^	QAction *single_page_view_;$/;"	m	class:QETPrintPreviewDialog
size	editor/graphicspart/parttext.h	/^		qreal size () const {return font().pointSize();}$/;"	f	class:PartText
size	editor/graphicspart/parttextfield.h	/^		int size() const {return font().pointSize();}$/;"	f	class:PartTextField
size	numerotationcontext.cpp	/^int NumerotationContext::size() const {$/;"	f	class:NumerotationContext
size	qetgraphicsitem/element.cpp	/^QSize Element::size() const {$/;"	f	class:Element
size	recentfiles.cpp	/^int RecentFiles::size() const {$/;"	f	class:RecentFiles
sizeHint	qtextorientationwidget.cpp	/^QSize QTextOrientationWidget::sizeHint() const {$/;"	f	class:QTextOrientationWidget
sizeHint	titleblock/helpercell.cpp	/^QSizeF HelperCell::sizeHint(Qt::SizeHint which, const QSizeF &constraint) const {$/;"	f	class:HelperCell
sizeHint	titleblock/templatevisualcell.cpp	/^QSizeF TitleBlockTemplateVisualCell::sizeHint(Qt::SizeHint which, const QSizeF &constraint) const {$/;"	f	class:TitleBlockTemplateVisualCell
sizeInputActivated	richtext/richtexteditor.cpp	/^void RichTextEditorToolBar::sizeInputActivated(const QString &size)$/;"	f	class:qdesigner_internal::RichTextEditorToolBar
sizeLayout	exportdialog.cpp	/^QBoxLayout *ExportDialog::ExportDiagramLine::sizeLayout() {$/;"	f	class:ExportDialog::ExportDiagramLine
size_	recentfiles.h	/^	int size_;$/;"	m	class:RecentFiles
size_weight	editor/styleeditor.h	/^		QComboBox *filling_color, *outline_color, *size_weight, *line_style;$/;"	m	class:StyleEditor
sl	qeticons.cpp	/^		QIcon sl;$/;"	m	namespace:QET::Icons	file:
slot_addColumn	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_addColumn() {$/;"	f	class:QETDiagramEditor
slot_addEllipse	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_addEllipse() {$/;"	f	class:QETDiagramEditor
slot_addImage	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_addImage() {$/;"	f	class:QETDiagramEditor
slot_addLine	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_addLine() {$/;"	f	class:QETDiagramEditor
slot_addPolyline	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_addPolyline() {$/;"	f	class:QETDiagramEditor
slot_addRectangle	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_addRectangle() {$/;"	f	class:QETDiagramEditor
slot_addRow	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_addRow() {$/;"	f	class:QETDiagramEditor
slot_addText	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_addText() {$/;"	f	class:QETDiagramEditor
slot_autoConductor	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_autoConductor(bool ac)$/;"	f	class:QETDiagramEditor
slot_bringForward	editor/elementscene.cpp	/^void ElementScene::slot_bringForward() {$/;"	f	class:ElementScene
slot_changeFilesExtension	exportdialog.cpp	/^void ExportDialog::slot_changeFilesExtension(bool force_extension) {$/;"	f	class:ExportDialog
slot_changeUseBorder	exportdialog.cpp	/^void ExportDialog::slot_changeUseBorder() {$/;"	f	class:ExportDialog
slot_checkDiagramsCount	exportdialog.cpp	/^void ExportDialog::slot_checkDiagramsCount() {$/;"	f	class:ExportDialog
slot_chooseADirectory	exportpropertieswidget.cpp	/^void ExportPropertiesWidget::slot_chooseADirectory() {$/;"	f	class:ExportPropertiesWidget
slot_copy	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_copy() {$/;"	f	class:QETDiagramEditor
slot_correctHeight	exportdialog.cpp	/^void ExportDialog::slot_correctHeight(int diagram_id) {$/;"	f	class:ExportDialog
slot_correctWidth	exportdialog.cpp	/^void ExportDialog::slot_correctWidth(int diagram_id) {$/;"	f	class:ExportDialog
slot_createPartsList	editor/qetelementeditor.cpp	/^void QETElementEditor::slot_createPartsList() {$/;"	f	class:QETElementEditor
slot_cut	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_cut() {$/;"	f	class:QETDiagramEditor
slot_deSelectAllClicked	exportdialog.cpp	/^void ExportDialog::slot_deSelectAllClicked() {$/;"	f	class:ExportDialog
slot_delete	editor/elementscene.cpp	/^void ElementScene::slot_delete() {$/;"	f	class:ElementScene
slot_delete	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_delete() {$/;"	f	class:QETDiagramEditor
slot_deselectAll	editor/elementscene.cpp	/^void ElementScene::slot_deselectAll() {$/;"	f	class:ElementScene
slot_doubleClick	elementspanel.cpp	/^void ElementsPanel::slot_doubleClick(QTreeWidgetItem *qtwi, int) {$/;"	f	class:ElementsPanel
slot_editAuthorInformations	editor/elementscene.cpp	/^void ElementScene::slot_editAuthorInformations() {$/;"	f	class:ElementScene
slot_editNames	editor/elementscene.cpp	/^void ElementScene::slot_editNames() {$/;"	f	class:ElementScene
slot_editProperties	editor/elementscene.cpp	/^void  ElementScene::slot_editProperties() {$/;"	f	class:ElementScene
slot_editSelection	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_editSelection() {$/;"	f	class:QETDiagramEditor
slot_export	exportdialog.cpp	/^void ExportDialog::slot_export() {$/;"	f	class:ExportDialog
slot_exportToClipBoard	exportdialog.cpp	/^void ExportDialog::slot_exportToClipBoard(int diagram_id) {$/;"	f	class:ExportDialog
slot_invertSelection	editor/elementscene.cpp	/^void ElementScene::slot_invertSelection() {$/;"	f	class:ElementScene
slot_keepRatioChanged	exportdialog.cpp	/^void ExportDialog::slot_keepRatioChanged(int diagram_id) {$/;"	f	class:ExportDialog
slot_lower	editor/elementscene.cpp	/^void ElementScene::slot_lower() {$/;"	f	class:ElementScene
slot_new	editor/qetelementeditor.cpp	/^void QETElementEditor::slot_new() {$/;"	f	class:QETElementEditor
slot_open	editor/qetelementeditor.cpp	/^void QETElementEditor::slot_open() {$/;"	f	class:QETElementEditor
slot_openFile	editor/qetelementeditor.cpp	/^void QETElementEditor::slot_openFile() {$/;"	f	class:QETElementEditor
slot_paste	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_paste() {$/;"	f	class:QETDiagramEditor
slot_previewDiagram	exportdialog.cpp	/^void ExportDialog::slot_previewDiagram(int diagram_id) {$/;"	f	class:ExportDialog
slot_raise	editor/elementscene.cpp	/^void ElementScene::slot_raise() {$/;"	f	class:ElementScene
slot_reload	editor/qetelementeditor.cpp	/^void QETElementEditor::slot_reload() {$/;"	f	class:QETElementEditor
slot_removeColumn	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_removeColumn() {$/;"	f	class:QETDiagramEditor
slot_removeRow	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_removeRow() {$/;"	f	class:QETDiagramEditor
slot_resetConductors	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_resetConductors() {$/;"	f	class:QETDiagramEditor
slot_resetSize	exportdialog.cpp	/^void ExportDialog::slot_resetSize(int diagram_id) {$/;"	f	class:ExportDialog
slot_rotate	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_rotate() {$/;"	f	class:QETDiagramEditor
slot_rotateTexts	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_rotateTexts() {$/;"	f	class:QETDiagramEditor
slot_save	editor/qetelementeditor.cpp	/^bool QETElementEditor::slot_save() {$/;"	f	class:QETElementEditor
slot_saveAs	editor/qetelementeditor.cpp	/^bool QETElementEditor::slot_saveAs() {$/;"	f	class:QETElementEditor
slot_saveAsFile	editor/qetelementeditor.cpp	/^bool QETElementEditor::slot_saveAsFile() {$/;"	f	class:QETElementEditor
slot_select	editor/elementscene.cpp	/^void ElementScene::slot_select(const ElementContent &content) {$/;"	f	class:ElementScene
slot_selectAll	editor/elementscene.cpp	/^void ElementScene::slot_selectAll() {$/;"	f	class:ElementScene
slot_selectAll	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_selectAll() {$/;"	f	class:QETDiagramEditor
slot_selectAllClicked	exportdialog.cpp	/^void ExportDialog::slot_selectAllClicked() {$/;"	f	class:ExportDialog
slot_selectInvert	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_selectInvert() {$/;"	f	class:QETDiagramEditor
slot_selectNothing	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_selectNothing() {$/;"	f	class:QETDiagramEditor
slot_sendBackward	editor/elementscene.cpp	/^void ElementScene::slot_sendBackward() {$/;"	f	class:ElementScene
slot_setNoDragToView	editor/qetelementeditor.cpp	/^void QETElementEditor::slot_setNoDragToView() {$/;"	f	class:QETElementEditor
slot_setRubberBandToView	editor/qetelementeditor.cpp	/^void QETElementEditor::slot_setRubberBandToView() {$/;"	f	class:QETElementEditor
slot_setSelectionMode	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_setSelectionMode()$/;"	f	class:QETDiagramEditor
slot_setVisualisationMode	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_setVisualisationMode()$/;"	f	class:QETDiagramEditor
slot_updateActions	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_updateActions()$/;"	f	class:QETDiagramEditor
slot_updateComplexActions	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_updateComplexActions() {$/;"	f	class:QETDiagramEditor
slot_updateInformations	editor/qetelementeditor.cpp	/^void QETElementEditor::slot_updateInformations() {$/;"	f	class:QETElementEditor
slot_updateMenus	editor/qetelementeditor.cpp	/^void QETElementEditor::slot_updateMenus() {$/;"	f	class:QETElementEditor
slot_updateModeActions	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_updateModeActions() {$/;"	f	class:QETDiagramEditor
slot_updatePartsList	editor/qetelementeditor.cpp	/^void QETElementEditor::slot_updatePartsList() {$/;"	f	class:QETElementEditor
slot_updatePasteAction	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_updatePasteAction() {$/;"	f	class:QETDiagramEditor
slot_updateSelectionFromPartsList	editor/qetelementeditor.cpp	/^void QETElementEditor::slot_updateSelectionFromPartsList() {$/;"	f	class:QETElementEditor
slot_updateTitle	editor/qetelementeditor.cpp	/^void QETElementEditor::slot_updateTitle() {$/;"	f	class:QETElementEditor
slot_updateUndoStack	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_updateUndoStack()$/;"	f	class:QETDiagramEditor
slot_updateWindowsMenu	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_updateWindowsMenu() {$/;"	f	class:QETDiagramEditor
slot_zoomContent	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_zoomContent() {$/;"	f	class:QETDiagramEditor
slot_zoomFit	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_zoomFit() {$/;"	f	class:QETDiagramEditor
slot_zoomIn	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_zoomIn() {$/;"	f	class:QETDiagramEditor
slot_zoomOut	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_zoomOut() {$/;"	f	class:QETDiagramEditor
slot_zoomReset	qetdiagrameditor.cpp	/^void QETDiagramEditor::slot_zoomReset() {$/;"	f	class:QETDiagramEditor
sm_	ui/elementselectorwidget.h	/^	QSignalMapper             *sm_, *sm_show_;$/;"	m	class:ElementSelectorWidget
sm_show_	ui/elementselectorwidget.h	/^	QSignalMapper             *sm_, *sm_show_;$/;"	m	class:ElementSelectorWidget
snapConstPointToGrid	editor/elementprimitivedecorator.cpp	/^QPointF ElementPrimitiveDecorator::snapConstPointToGrid(const QPointF &point) const {$/;"	f	class:ElementPrimitiveDecorator
snapPointToGrid	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::snapPointToGrid(QPointF &point) const {$/;"	f	class:ElementPrimitiveDecorator
snapTo	properties/xrefproperties.h	/^	SnapTo snapTo  () const			 {return m_snap_to;}$/;"	f	class:XRefProperties
snapToGrid	diagram.cpp	/^QPointF Diagram::snapToGrid(const QPointF &p)$/;"	f	class:Diagram
snapToGrid	editor/elementscene.cpp	/^QPointF ElementScene::snapToGrid(QPointF point) {$/;"	f	class:ElementScene
snap_to_grid_	qetgraphicsitem/qetgraphicsitem.h	/^		bool snap_to_grid_;$/;"	m	class:QetGraphicsItem
sourceChanged	richtext/richtexteditor.cpp	/^void RichTextEditorDialog::sourceChanged()$/;"	f	class:qdesigner_internal::RichTextEditorDialog
sourceItemWasDeleted	moveelementsdescription.cpp	/^bool MoveElementsDescription::sourceItemWasDeleted() const {$/;"	f	class:MoveElementsDescription
south	orientationset.h	/^inline bool OrientationSet::south() const {$/;"	f	class:OrientationSet
south_ori	orientationset.h	/^	bool south_ori;$/;"	m	class:OrientationSet
spanAngle	editor/graphicspart/abstractpartellipse.h	/^		int  spanAngle () const {return m_span_angle;}$/;"	f	class:AbstractPartEllipse
span_state	titleblockcell.h	/^	int span_state;                    \/\/\/< how should row_span and col_span be applied given other cells in the parent template$/;"	m	class:TitleBlockCell
span_state_before_	titleblock/templatecommands.h	/^	int span_state_before_;                \/\/\/< the span_state attribute of the spanning cell before splitting$/;"	m	class:SplitCellsCommand
span_state_before_	titleblock/templatecommands.h	/^	int span_state_before_; \/\/\/< the span_state attribute of the spanning cell before the merge$/;"	m	class:MergeCellsCommand
spannedCells	titleblocktemplate.cpp	/^QSet<TitleBlockCell *> TitleBlockTemplate::spannedCells(const TitleBlockCell *given_cell, bool ignore_span_state) const {$/;"	f	class:TitleBlockTemplate
spanned_cells_	titleblock/templatecommands.h	/^	QSet<TitleBlockCell *> spanned_cells_; \/\/\/< the spanned cells$/;"	m	class:SplitCellsCommand
spanner_cell	titleblockcell.h	/^	TitleBlockCell *spanner_cell;      \/\/\/< Cell spanning this cell, if any$/;"	m	class:TitleBlockCell
spanner_cells_before_merge_	titleblock/templatecommands.h	/^	QHash<TitleBlockCell *, TitleBlockCell *> spanner_cells_before_merge_;$/;"	m	class:MergeCellsCommand
spanning_cell_	titleblock/templatecommands.h	/^	TitleBlockCell *spanning_cell_;        \/\/\/< the cell spanning over the other ones$/;"	m	class:SplitCellsCommand
spanning_cell_	titleblock/templatecommands.h	/^	TitleBlockCell *spanning_cell_;$/;"	m	class:MergeCellsCommand
spans	titleblockcell.cpp	/^bool TitleBlockCell::spans() const {$/;"	f	class:TitleBlockCell
spans_before_	titleblock/templatecommands.h	/^	QHash<TitleBlockCell *, QPair<int, int> > spans_before_;$/;"	m	class:PasteTemplateCellsCommand
spinBox	qtextorientationspinboxwidget.cpp	/^QDoubleSpinBox *QTextOrientationSpinBoxWidget::spinBox() const {$/;"	f	class:QTextOrientationSpinBoxWidget
spin_box_	qtextorientationspinboxwidget.h	/^	QDoubleSpinBox *spin_box_;$/;"	m	class:QTextOrientationSpinBoxWidget
spinbox	titleblock/dimensionwidget.cpp	/^QSpinBox *TitleBlockDimensionWidget::spinbox() const {$/;"	f	class:TitleBlockDimensionWidget
spinbox_	titleblock/dimensionwidget.h	/^	QSpinBox *spinbox_;                \/\/\/< Spinbox displaying the length$/;"	m	class:TitleBlockDimensionWidget
spinbox_label_	titleblock/dimensionwidget.h	/^	QLabel *spinbox_label_;            \/\/\/< Label shown right before the spinbox$/;"	m	class:TitleBlockDimensionWidget
splash_screen_	qetapp.h	/^	QSplashScreen *splash_screen_;$/;"	m	class:QETApp
splitSelectedCell	titleblock/templateview.cpp	/^void TitleBlockTemplateView::splitSelectedCell() {$/;"	f	class:TitleBlockTemplateView
splitWithSpaces	qet.cpp	/^QStringList QET::splitWithSpaces(const QString &string) {$/;"	f	class:QET
split_background_color	titleblock/splittedhelpercell.h	/^	QColor split_background_color; \/\/\/< Background color on the split side$/;"	m	class:SplittedHelperCell
split_cell_	titleblock/qettemplateeditor.h	/^	QAction *undo_, *redo_, *cut_, *copy_, *paste_, *edit_logos_, *edit_info_, *add_row_, *add_col_, *merge_cells_, *split_cell_;$/;"	m	class:QETTitleBlockTemplateEditor
split_foreground_color	titleblock/splittedhelpercell.h	/^	QColor split_foreground_color; \/\/\/< Text color on the split side$/;"	m	class:SplittedHelperCell
split_label	titleblock/splittedhelpercell.h	/^	QString split_label;           \/\/\/< Text displayed on the split side$/;"	m	class:SplittedHelperCell
split_size	titleblock/splittedhelpercell.h	/^	int split_size;                \/\/\/< Length of the split side$/;"	m	class:SplittedHelperCell
square_brush	qetgraphicsitem/conductor.cpp	/^QBrush Conductor::square_brush = QBrush(Qt::darkGreen);$/;"	m	class:Conductor	file:
square_brush	qetgraphicsitem/conductor.h	/^	static QBrush square_brush;$/;"	m	class:Conductor
squares_interval_	qtextorientationwidget.h	/^	double squares_interval_;$/;"	m	class:QTextOrientationWidget
src_deleted_	moveelementsdescription.h	/^	bool src_deleted_;$/;"	m	class:MoveElementsDescription
stackAction	editor/elementscene.cpp	/^void ElementScene::stackAction(ElementEditionCommand *command) {$/;"	f	class:ElementScene
standardButtonClicked	ui/elementpropertieswidget.cpp	/^void elementpropertieswidget::standardButtonClicked(QAbstractButton *button) {$/;"	f	class:elementpropertieswidget
standardIconImplementation	qetapp.cpp	/^QIcon QETStyle::standardIconImplementation (StandardPixmap standardIcon, const QStyleOption *option, const QWidget* widget) const$/;"	f	class:QETStyle
startAngle	editor/graphicspart/abstractpartellipse.h	/^		int  startAngle() const {return m_start_angle;}$/;"	f	class:AbstractPartEllipse
startDrag	elementspanel.cpp	/^void ElementsPanel::startDrag(Qt::DropActions supportedActions) {$/;"	f	class:ElementsPanel
startEdition	editor/graphicspart/parttext.cpp	/^void PartText::startEdition() {$/;"	f	class:PartText
startEdition	editor/graphicspart/parttextfield.cpp	/^void PartTextField::startEdition() {$/;"	f	class:PartTextField
startElementDrag	elementspanel.cpp	/^void ElementsPanel::startElementDrag(const ElementsLocation &location) {$/;"	f	class:ElementsPanel
startMovement	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::startMovement() {$/;"	f	class:ElementPrimitiveDecorator
startTitleBlockTemplateDrag	elementspanel.cpp	/^void ElementsPanel::startTitleBlockTemplateDrag(const TitleBlockTemplateLocation &location) {$/;"	f	class:ElementsPanel
startUserTransformation	editor/graphicspart/abstractpartellipse.cpp	/^void AbstractPartEllipse::startUserTransformation(const QRectF &initial_selection_rect)$/;"	f	class:AbstractPartEllipse
startUserTransformation	editor/graphicspart/partline.cpp	/^void PartLine::startUserTransformation(const QRectF &initial_selection_rect)$/;"	f	class:PartLine
startUserTransformation	editor/graphicspart/partpolygon.cpp	/^void PartPolygon::startUserTransformation(const QRectF &initial_selection_rect)$/;"	f	class:PartPolygon
startUserTransformation	editor/graphicspart/partrectangle.cpp	/^void PartRectangle::startUserTransformation(const QRectF &initial_selection_rect)$/;"	f	class:PartRectangle
startUserTransformation	editor/graphicspart/partterminal.cpp	/^void PartTerminal::startUserTransformation(const QRectF &initial_selection_rect) {$/;"	f	class:PartTerminal
startUserTransformation	editor/graphicspart/parttext.cpp	/^void PartText::startUserTransformation(const QRectF &rect) {$/;"	f	class:PartText
startUserTransformation	editor/graphicspart/parttextfield.cpp	/^void PartTextField::startUserTransformation(const QRectF &initial_selection_rect) {$/;"	f	class:PartTextField
start_angle	editor/arceditor.h	/^	QSpinBox *angle, *start_angle;$/;"	m	class:ArcEditor
start_top_left_corner_	editor/elementview.h	/^	QPointF start_top_left_corner_;$/;"	m	class:ElementView
state	qetgraphicsitem/customelement.h	/^inline int CustomElement::state() const {$/;"	f	class:CustomElement
state	qetproject.cpp	/^QETProject::ProjectState QETProject::state() const {$/;"	f	class:QETProject
state_	qetproject.h	/^	ProjectState state_;$/;"	m	class:QETProject
storage_logos_	titleblocktemplate.h	/^	QHash<QString, QString>        storage_logos_;   \/\/\/< Logos applied storage type (e.g. "xml" or "base64")$/;"	m	class:TitleBlockTemplate
strategy_	numerotationcontextcommands.h	/^	NumStrategy *strategy_;$/;"	m	class:NumerotationContextCommands
string	ui/numparteditorw.h	/^	enum type {unit,ten,hundred,string,folio};$/;"	e	enum:NumPartEditorW::type
stringLongerThan	diagramcontext.cpp	/^bool DiagramContext::stringLongerThan(const QString &a, const QString &b) {$/;"	f	class:DiagramContext
stringToFileName	qet.cpp	/^QString QET::stringToFileName(const QString &name) {$/;"	f	class:QET
style	conductorproperties.h	/^	Qt::PenStyle style;$/;"	m	class:ConductorProperties
styleHint	qetapp.cpp	/^int QETStyle::styleHint (StyleHint hint, const QStyleOption *option, const QWidget *widget, QStyleHintReturn *returndata) const$/;"	f	class:QETStyle
style_	editor/arceditor.h	/^	StyleEditor *style_;$/;"	m	class:ArcEditor
style_	editor/ellipseeditor.h	/^	StyleEditor *style_;$/;"	m	class:EllipseEditor
style_	editor/lineeditor.h	/^		StyleEditor *style_;$/;"	m	class:LineEditor
style_	editor/polygoneditor.h	/^	StyleEditor *style_;$/;"	m	class:PolygonEditor
style_	editor/rectangleeditor.h	/^	StyleEditor *style_;$/;"	m	class:RectangleEditor
stylesFromXml	editor/graphicspart/customelementgraphicpart.cpp	/^void CustomElementGraphicPart::stylesFromXml(const QDomElement &qde)$/;"	f	class:CustomElementGraphicPart
stylesToXml	editor/graphicspart/customelementgraphicpart.cpp	/^void CustomElementGraphicPart::stylesToXml(QDomElement &qde) const$/;"	f	class:CustomElementGraphicPart
subWindowActivated	qetdiagrameditor.cpp	/^void QETDiagramEditor::subWindowActivated(QMdiSubWindow *subWindows)$/;"	f	class:QETDiagramEditor
subWindowForWidget	qetdiagrameditor.cpp	/^QMdiSubWindow *QETDiagramEditor::subWindowForWidget(QWidget *widget) const {$/;"	f	class:QETDiagramEditor
surLeMemeAxe	qet.cpp	/^bool Qet::surLeMemeAxe(Qet::Orientation a, Qet::Orientation b) {$/;"	f	class:Qet
switchLayout	qetapp.cpp	/^void QETApp::switchLayout (Qt::LayoutDirection direction)$/;"	f	class:QETApp
switchToSelectionModeIfNeeded	diagramview.cpp	/^bool DiagramView::switchToSelectionModeIfNeeded(QInputEvent *e) {$/;"	f	class:DiagramView
switchToVisualisationModeIfNeeded	diagramview.cpp	/^bool DiagramView::switchToVisualisationModeIfNeeded(QInputEvent *e) {$/;"	f	class:DiagramView
symbolicPath	qetapp.cpp	/^QString QETApp::symbolicPath (const QString &real_path)$/;"	f	class:QETApp
systray	qetapp.cpp	/^void QETApp::systray (QSystemTrayIcon::ActivationReason reason)$/;"	f	class:QETApp
tab	ui/ui_titleblockpropertieswidget.h	/^    QWidget *tab;$/;"	m	class:Ui_TitleBlockPropertiesWidget
tabBar	qettabwidget.cpp	/^QETTabBar *QETTabWidget::tabBar() const {$/;"	f	class:QETTabWidget
tabChanged	projectview.cpp	/^void ProjectView::tabChanged(int tab_id) {$/;"	f	class:ProjectView
tabDoubleClicked	projectview.cpp	/^void ProjectView::tabDoubleClicked(int tab_id) {$/;"	f	class:ProjectView
tabForMovedPosition	qettabbar.cpp	/^int QETTabBar::tabForMovedPosition(const QPoint &pos) {$/;"	f	class:QETTabBar
tabForPressedPosition	qettabbar.cpp	/^int QETTabBar::tabForPressedPosition(const QPoint &pos) {$/;"	f	class:QETTabBar
tabIndexChanged	richtext/richtexteditor.cpp	/^void RichTextEditorDialog::tabIndexChanged(int newIndex)$/;"	f	class:qdesigner_internal::RichTextEditorDialog
tabInserted	qettabbar.cpp	/^void QETTabBar::tabInserted(int index) {$/;"	f	class:QETTabBar
tabMoved	projectview.cpp	/^void ProjectView::tabMoved(int from, int to) {$/;"	f	class:ProjectView
tabRemoved	qettabbar.cpp	/^void QETTabBar::tabRemoved(int index) {$/;"	f	class:QETTabBar
tabWidget	ui/ui_dialogautonum.h	/^    QTabWidget *tabWidget;$/;"	m	class:Ui_DialogAutoNum
tabWidget	ui/ui_titleblockpropertieswidget.h	/^    QTabWidget *tabWidget;$/;"	m	class:Ui_TitleBlockPropertiesWidget
tab_	ui/elementpropertieswidget.h	/^		QTabWidget              *tab_;$/;"	m	class:elementpropertieswidget
tab_2	ui/ui_titleblockpropertieswidget.h	/^    QWidget *tab_2;$/;"	m	class:Ui_TitleBlockPropertiesWidget
tab_bar_	qettabwidget.h	/^	QETTabBar *tab_bar_;$/;"	m	class:QETTabWidget
tabbed_mode_	configpages.h	/^	QRadioButton *tabbed_mode_;$/;"	m	class:GeneralConfigurationPage
tabbed_view_mode	qetdiagrameditor.h	/^		QAction *tabbed_view_mode;   \/\/\/< Display projects as tabs$/;"	m	class:QETDiagramEditor
tableDiagram	ui/ui_diagramselection.h	/^    QTableWidget *tableDiagram;$/;"	m	class:Ui_diagramselection
table_	diagramcontextwidget.h	/^	QTableWidget *table_; \/\/\/< table used to enter key\/value pairs$/;"	m	class:DiagramContextWidget
tabs_	projectview.h	/^	QETTabWidget *tabs_;$/;"	m	class:ProjectView
tagg	editor/graphicspart/parttextfield.h	/^		QString tagg() const {return m_tagg;}$/;"	f	class:PartTextField
tagg	qetgraphicsitem/elementtextitem.h	/^		QString      tagg                     () const               {return tagg_;}$/;"	f	class:ElementTextItem
tagg_	qetgraphicsitem/elementtextitem.h	/^		QString  tagg_;$/;"	m	class:ElementTextItem
taggedText	qetgraphicsitem/customelement.cpp	/^ElementTextItem* CustomElement::taggedText(const QString &tagg) const {$/;"	f	class:CustomElement
takeColumn	titleblocktemplate.cpp	/^QList<TitleBlockCell *> TitleBlockTemplate::takeColumn(int i) {$/;"	f	class:TitleBlockTemplate
takeRow	titleblocktemplate.cpp	/^QList<TitleBlockCell *> TitleBlockTemplate::takeRow(int i) {$/;"	f	class:TitleBlockTemplate
tb_template_	titleblock/qettemplateeditor.h	/^	TitleBlockTemplate *tb_template_;$/;"	m	class:QETTitleBlockTemplateEditor
tb_templates_	genericpanel.h	/^	QHash<TitleBlockTemplateLocation, QTreeWidgetItem *> tb_templates_; \/\/\/< Allow quick retrieval of the item representing a title block template$/;"	m	class:GenericPanel
tbgrid_	titleblock/templateview.h	/^	QGraphicsGridLayout *tbgrid_;$/;"	m	class:TitleBlockTemplateView
tbt_add	elementspanelwidget.h	/^	QAction *tbt_add, *tbt_edit, *tbt_remove;$/;"	m	class:ElementsPanelWidget
tbt_edit	elementspanelwidget.h	/^	QAction *tbt_add, *tbt_edit, *tbt_remove;$/;"	m	class:ElementsPanelWidget
tbt_files_	qetarguments.h	/^	QList<QString> tbt_files_;$/;"	m	class:QETArguments
tbt_remove	elementspanelwidget.h	/^	QAction *tbt_add, *tbt_edit, *tbt_remove;$/;"	m	class:ElementsPanelWidget
tbtemplate_	titleblock/templatecommands.h	/^	TitleBlockTemplate *tbtemplate_; \/\/\/< Modified TitleBlock Template$/;"	m	class:TitleBlockTemplateCommand
tbtemplate_	titleblock/templatecommands.h	/^	TitleBlockTemplate *tbtemplate_;$/;"	m	class:ChangeTemplateInformationsCommand
tbtemplate_	titleblock/templateview.h	/^	TitleBlockTemplate *tbtemplate_;$/;"	m	class:TitleBlockTemplateView
templateAlreadyExists	titleblock/integrationmovetemplateshandler.cpp	/^QET::Action IntegrationMoveTitleBlockTemplatesHandler::templateAlreadyExists(const TitleBlockTemplateLocation &src, const TitleBlockTemplateLocation &dst) {$/;"	f	class:IntegrationMoveTitleBlockTemplatesHandler
templateHeight	titleblock/templateview.cpp	/^qreal TitleBlockTemplateView::templateHeight() const {$/;"	f	class:TitleBlockTemplateView
templateLocationForItem	genericpanel.cpp	/^TitleBlockTemplateLocation GenericPanel::templateLocationForItem(QTreeWidgetItem *item) const {$/;"	f	class:GenericPanel
templateSize	titleblock/templateview.cpp	/^QSizeF TitleBlockTemplateView::templateSize() const {$/;"	f	class:TitleBlockTemplateView
templateWidth	titleblock/templateview.cpp	/^qreal TitleBlockTemplateView::templateWidth() const {$/;"	f	class:TitleBlockTemplateView
template_	titleblock/templatevisualcell.h	/^	TitleBlockTemplate *template_; \/\/\/< Title block template of the previewed cell$/;"	m	class:TitleBlockTemplateVisualCell
template_cell_editor_dock_widget_	titleblock/qettemplateeditor.h	/^	QDockWidget *template_cell_editor_dock_widget_;$/;"	m	class:QETTitleBlockTemplateEditor
template_cell_editor_widget_	titleblock/qettemplateeditor.h	/^	TitleBlockTemplateCellWidget *template_cell_editor_widget_;$/;"	m	class:QETTitleBlockTemplateEditor
template_edition_area_scene_	titleblock/qettemplateeditor.h	/^	QGraphicsScene *template_edition_area_scene_;$/;"	m	class:QETTitleBlockTemplateEditor
template_edition_area_view_	titleblock/qettemplateeditor.h	/^	TitleBlockTemplateView *template_edition_area_view_;$/;"	m	class:QETTitleBlockTemplateEditor
template_location_	titleblock/templatedeleter.h	/^	TitleBlockTemplateLocation template_location_;$/;"	m	class:TitleBlockTemplateDeleter
template_name	titleblockproperties.h	/^	QString template_name;    \/\/\/< Name of the template used to render the title block - an empty string means "the default template provided by the application"$/;"	m	class:TitleBlockProperties
templates	titleblock/templatescollection.cpp	/^QStringList TitleBlockTemplatesFilesCollection::templates() {$/;"	f	class:TitleBlockTemplatesFilesCollection
templates	titleblock/templatescollection.cpp	/^QStringList TitleBlockTemplatesProjectCollection::templates() {$/;"	f	class:TitleBlockTemplatesProjectCollection
templatesCollectionChanged	genericpanel.cpp	/^void GenericPanel::templatesCollectionChanged(TitleBlockTemplatesCollection*collection, const QString &template_name) {$/;"	f	class:GenericPanel
templatesLocations	titleblock/templatescollection.cpp	/^QList<TitleBlockTemplateLocation> TitleBlockTemplatesCollection::templatesLocations() {$/;"	f	class:TitleBlockTemplatesCollection
templates_	titleblock/templatelocationchooser.h	/^	QComboBox *templates_;    \/\/\/< Existing templates combo box$/;"	m	class:TitleBlockTemplateLocationChooser
ten	ui/numparteditorw.h	/^	enum type {unit,ten,hundred,string,folio};$/;"	e	enum:NumPartEditorW::type
terminal1	qetgraphicsitem/conductor.h	/^	Terminal *terminal1;$/;"	m	class:Conductor
terminal2	qetgraphicsitem/conductor.h	/^	Terminal *terminal2;$/;"	m	class:Conductor
terminalSize	qetgraphicsitem/terminal.cpp	/^const qreal Terminal::terminalSize = 4.0;$/;"	m	class:Terminal	file:
terminalSize	qetgraphicsitem/terminal.h	/^	static const qreal terminalSize;$/;"	m	class:Terminal
terminals	qetgraphicsitem/customelement.cpp	/^QList<Terminal *> CustomElement::terminals() const {$/;"	f	class:CustomElement
terminalsCount	qetgraphicsitem/customelement.cpp	/^int CustomElement::terminalsCount() const {$/;"	f	class:CustomElement
terminalsFromXml	qetgraphicsitem/ghostelement.cpp	/^bool GhostElement::terminalsFromXml(QDomElement &e, QHash<int, Terminal *> &table_id_adr) {$/;"	f	class:GhostElement
text	conductorproperties.h	/^	QString text;$/;"	m	class:ConductorProperties
text	qetgraphicsitem/conductor.cpp	/^QString Conductor::text() const {$/;"	f	class:Conductor
text	richtext/richtexteditor.cpp	/^QString RichTextEditor::text(Qt::TextFormat format) const$/;"	f	class:qdesigner_internal::RichTextEditor
text	richtext/richtexteditor.cpp	/^QString RichTextEditorDialog::text(Qt::TextFormat format) const$/;"	f	class:qdesigner_internal::RichTextEditorDialog
text	ui/autonumselectorwidget.cpp	/^QString AutonumSelectorWidget::text() const {$/;"	f	class:AutonumSelectorWidget
text	ui/elementinfopartwidget.cpp	/^QString ElementInfoPartWidget::text() const {$/;"	f	class:ElementInfoPartWidget
textDisplayed	qtextorientationwidget.cpp	/^bool QTextOrientationWidget::textDisplayed() const {$/;"	f	class:QTextOrientationWidget
textFieldChanged	elementdialog.cpp	/^void ElementDialog::textFieldChanged(const QString &text) {$/;"	f	class:ElementDialog
textFields	diagramcontent.h	/^	QSet<IndependentTextItem *> textFields;$/;"	m	class:DiagramContent
textItem	qetgraphicsitem/conductor.cpp	/^ConductorTextItem *Conductor::textItem() const {$/;"	f	class:Conductor
text_after	diagramcommands.h	/^	QString text_after;$/;"	m	class:ChangeDiagramTextCommand
text_before	diagramcommands.h	/^	QString text_before;$/;"	m	class:ChangeDiagramTextCommand
text_font_	qtextorientationwidget.h	/^	QFont text_font_;$/;"	m	class:QTextOrientationWidget
text_item	diagramcommands.h	/^	DiagramTextItem *text_item;$/;"	m	class:ChangeDiagramTextCommand
text_item	qetgraphicsitem/conductor.h	/^	ConductorTextItem *text_item;$/;"	m	class:Conductor
text_pos_after_mov_	diagramcommands.h	/^	QPointF text_pos_after_mov_;$/;"	m	class:ChangeConductorCommand
text_pos_before_mov_	diagramcommands.h	/^	QPointF text_pos_before_mov_;$/;"	m	class:ChangeConductorCommand
text_size	conductorproperties.h	/^	int text_size;$/;"	m	class:ConductorProperties
text_size_hash_	qtextorientationwidget.h	/^	QHash<QString, qreal> text_size_hash_;$/;"	m	class:QTextOrientationWidget
textfield_	elementdialog.h	/^	QFileNameEdit *textfield_;$/;"	m	class:ElementDialog
texts	qetgraphicsitem/customelement.cpp	/^QList<ElementTextItem *> CustomElement::texts() const {$/;"	f	class:CustomElement
texts_to_move	diagramcommands.h	/^		QSet<ElementTextItem *> texts_to_move;$/;"	m	class:MoveElementsTextsCommand
texts_to_move_	diagramcommands.h	/^	QHash<ConductorTextItem *, QPair<QPointF, bool> > texts_to_move_;$/;"	m	class:MoveConductorsTextsCommand
texts_to_rotate	diagramcommands.h	/^	QHash<DiagramTextItem *, double> texts_to_rotate;$/;"	m	class:RotateTextsCommand
texts_to_rotate	diagramcommands.h	/^	QList<DiagramTextItem *> texts_to_rotate;$/;"	m	class:RotateElementsCommand
thin_weight	editor/styleeditor.h	/^		QRadioButton *none_weight, *thin_weight, *normal_weight, *no_filling;$/;"	m	class:StyleEditor
tile_window	qetdiagrameditor.h	/^		QAction *tile_window;        \/\/\/< Show MDI subwindows as tile$/;"	m	class:QETDiagramEditor
timeout_	qetsingleapplication.cpp	/^const int QETSingleApplication::timeout_ = 10000;$/;"	m	class:QETSingleApplication	file:
timeout_	qetsingleapplication.h	/^	static const int timeout_;$/;"	m	class:QETSingleApplication
title	aboutqet.cpp	/^QWidget *AboutQET::title() const {$/;"	f	class:AboutQET
title	bordertitleblock.h	/^	QString title() const { return(btb_title_); }$/;"	f	class:BorderTitleBlock
title	configpages.cpp	/^QString ExportConfigPage::title() const {$/;"	f	class:ExportConfigPage
title	configpages.cpp	/^QString GeneralConfigurationPage::title() const {$/;"	f	class:GeneralConfigurationPage
title	configpages.cpp	/^QString NewDiagramPage::title() const {$/;"	f	class:NewDiagramPage
title	configpages.cpp	/^QString PrintConfigPage::title() const {$/;"	f	class:PrintConfigPage
title	diagram.cpp	/^QString Diagram::title() const {$/;"	f	class:Diagram
title	diagramview.cpp	/^QString DiagramView::title() const {$/;"	f	class:DiagramView
title	elementscollection.cpp	/^QString ElementsCollection::title() const {$/;"	f	class:ElementsCollection
title	projectconfigpages.cpp	/^QString ProjectAutoNumConfigPage::title() const {$/;"	f	class:ProjectAutoNumConfigPage
title	projectconfigpages.cpp	/^QString ProjectMainConfigPage::title() const {$/;"	f	class:ProjectMainConfigPage
title	qetproject.cpp	/^QString QETProject::title() const {$/;"	f	class:QETProject
title	titleblock/templatescollection.cpp	/^QString TitleBlockTemplatesCollection::title() const {$/;"	f	class:TitleBlockTemplatesCollection
title	titleblock/templatescollection.cpp	/^QString TitleBlockTemplatesProjectCollection::title() const {$/;"	f	class:TitleBlockTemplatesProjectCollection
title	titleblockproperties.h	/^	QString title;            \/\/\/< Folio title (displayed by the default template)$/;"	m	class:TitleBlockProperties
title	xmlelementscollection.cpp	/^QString XmlElementsCollection::title() const {$/;"	f	class:XmlElementsCollection
titleBlockColumnLengthToString	qet.cpp	/^QString QET::titleBlockColumnLengthToString(const TitleBlockColumnLength  &icl) {$/;"	f	class:QET
titleBlockFromXml	bordertitleblock.cpp	/^void BorderTitleBlock::titleBlockFromXml(const QDomElement &xml_elmt) {$/;"	f	class:BorderTitleBlock
titleBlockHeight	bordertitleblock.cpp	/^qreal BorderTitleBlock::titleBlockHeight() const {$/;"	f	class:BorderTitleBlock
titleBlockIsDisplayed	bordertitleblock.h	/^	bool titleBlockIsDisplayed() const { return(display_titleblock_); }$/;"	f	class:BorderTitleBlock
titleBlockTemplate	bordertitleblock.cpp	/^const TitleBlockTemplate *BorderTitleBlock::titleBlockTemplate() {$/;"	f	class:BorderTitleBlock
titleBlockTemplate	titleblock/templatecommands.cpp	/^TitleBlockTemplate *TitleBlockTemplateCommand::titleBlockTemplate() const {$/;"	f	class:TitleBlockTemplateCommand
titleBlockTemplate	titleblock/templateview.cpp	/^TitleBlockTemplate *TitleBlockTemplateView::titleBlockTemplate() const {$/;"	f	class:TitleBlockTemplateView
titleBlockTemplate	titleblock/templatevisualcell.cpp	/^TitleBlockTemplate *TitleBlockTemplateVisualCell::titleBlockTemplate() const {$/;"	f	class:TitleBlockTemplateVisualCell
titleBlockTemplate	titleblocktemplaterenderer.cpp	/^const TitleBlockTemplate *TitleBlockTemplateRenderer::titleBlockTemplate() const {$/;"	f	class:TitleBlockTemplateRenderer
titleBlockTemplateChanged	bordertitleblock.cpp	/^void BorderTitleBlock::titleBlockTemplateChanged(const QString &template_name) {$/;"	f	class:BorderTitleBlock
titleBlockTemplateChanged	diagram.cpp	/^void Diagram::titleBlockTemplateChanged(const QString &template_name) {$/;"	f	class:Diagram
titleBlockTemplateCollectionWasModified	qetproject.cpp	/^bool QETProject::titleBlockTemplateCollectionWasModified() {$/;"	f	class:QETProject
titleBlockTemplateEditors	qetapp.cpp	/^QList<QETTitleBlockTemplateEditor *> QETApp::titleBlockTemplateEditors (QETProject *project)$/;"	f	class:QETApp
titleBlockTemplateEditors	qetapp.cpp	/^QList<QETTitleBlockTemplateEditor *> QETApp::titleBlockTemplateEditors()$/;"	f	class:QETApp
titleBlockTemplateFiles	qetarguments.cpp	/^QList<QString> QETArguments::titleBlockTemplateFiles() const {$/;"	f	class:QETArguments
titleBlockTemplateName	bordertitleblock.cpp	/^QString BorderTitleBlock::titleBlockTemplateName() const {$/;"	f	class:BorderTitleBlock
titleBlockTemplateRemoved	bordertitleblock.cpp	/^void BorderTitleBlock::titleBlockTemplateRemoved(const QString &removed_template_name, const TitleBlockTemplate *new_template) {$/;"	f	class:BorderTitleBlock
titleBlockTemplateRemoved	diagram.cpp	/^void Diagram::titleBlockTemplateRemoved(const QString &template_name, const QString &new_template) {$/;"	f	class:Diagram
titleBlockTemplatesCollection	qetapp.cpp	/^TitleBlockTemplatesCollection *QETApp::titleBlockTemplatesCollection (const QString &protocol)$/;"	f	class:QETApp
titleBlockToXml	bordertitleblock.cpp	/^void BorderTitleBlock::titleBlockToXml(QDomElement &xml_elmt) {$/;"	f	class:BorderTitleBlock
titleBlockWidth	bordertitleblock.h	/^	qreal titleBlockWidth()  const { return(titleblock_width_); }$/;"	f	class:BorderTitleBlock
titleChanged	diagram.cpp	/^void Diagram::titleChanged(const QString &title) {$/;"	f	class:Diagram
titleInput	richtext/ui_addlinkdialog.h	/^    QLineEdit *titleInput;$/;"	m	class:Ui_AddLinkDialog
titleInput	ui/ui_addlinkdialog.h	/^    QLineEdit *titleInput;$/;"	m	class:Ui_AddLinkDialog
title_	elementdialog.h	/^	QString title_;$/;"	m	class:ElementDialog
title_	elementscollection.h	/^	QString title_;$/;"	m	class:ElementsCollection
title_	titleblock/templatescollection.h	/^	QString title_;$/;"	m	class:TitleBlockTemplatesCollection
title_information_	projectconfigpages.h	/^	QLabel *title_information_;$/;"	m	class:ProjectMainConfigPage
title_label	exportdialog.h	/^		QLabel *title_label;$/;"	m	class:ExportDialog::ExportDiagramLine
title_label_	configpages.h	/^	QLabel *title_label_;$/;"	m	class:GeneralConfigurationPage
title_label_	projectconfigpages.h	/^	QLabel *title_label_;$/;"	m	class:ProjectMainConfigPage
title_value_	projectconfigpages.h	/^	QLineEdit *title_value_;$/;"	m	class:ProjectMainConfigPage
titleblock_height_	bordertitleblock.h	/^	qreal titleblock_height_;$/;"	m	class:BorderTitleBlock
titleblock_rect_	bordertitleblock.h	/^	QRectF titleblock_rect_;$/;"	m	class:BorderTitleBlock
titleblock_template_	titleblocktemplaterenderer.h	/^	const TitleBlockTemplate *titleblock_template_;$/;"	m	class:TitleBlockTemplateRenderer
titleblock_template_renderer_	bordertitleblock.h	/^	TitleBlockTemplateRenderer *titleblock_template_renderer_;$/;"	m	class:BorderTitleBlock
titleblock_templates_	titleblock/templatescollection.h	/^	QHash<QString, TitleBlockTemplate *> titleblock_templates_;$/;"	m	class:TitleBlockTemplatesCollection
titleblock_templates_xml_	titleblock/templatescollection.h	/^	QHash<QString, QDomElement> titleblock_templates_xml_;$/;"	m	class:TitleBlockTemplatesProjectCollection
titleblock_width_	bordertitleblock.h	/^	qreal titleblock_width_;$/;"	m	class:BorderTitleBlock
titleblocks_	qetproject.h	/^	TitleBlockTemplatesProjectCollection titleblocks_;$/;"	m	class:QETProject
tmp_uuids_link	qetgraphicsitem/element.h	/^		QList <QUuid>     tmp_uuids_link;$/;"	m	class:Element
toCategory	elementdefinition.cpp	/^ElementsCategory *ElementDefinition::toCategory() {$/;"	f	class:ElementDefinition
toCategory	elementscategory.cpp	/^ElementsCategory *ElementsCategory::toCategory() {$/;"	f	class:ElementsCategory
toCategory	elementscollection.cpp	/^ElementsCategory *ElementsCollection::toCategory() {$/;"	f	class:ElementsCollection
toCollection	elementdefinition.cpp	/^ElementsCollection *ElementDefinition::toCollection() {$/;"	f	class:ElementDefinition
toCollection	elementscategory.cpp	/^ElementsCollection *ElementsCategory::toCollection() {$/;"	f	class:ElementsCategory
toCollection	elementscollection.cpp	/^ElementsCollection *ElementsCollection::toCollection() {$/;"	f	class:ElementsCollection
toDXF	qetgraphicsitem/qetshapeitem.cpp	/^bool QetShapeItem::toDXF(const QString &filepath) {$/;"	f	class:QetShapeItem
toElement	elementdefinition.cpp	/^ElementDefinition *ElementDefinition::toElement() {$/;"	f	class:ElementDefinition
toElement	elementscategory.cpp	/^ElementDefinition *ElementsCategory::toElement() {$/;"	f	class:ElementsCategory
toElement	elementscollection.cpp	/^ElementDefinition *ElementsCollection::toElement() {$/;"	f	class:ElementsCollection
toFile	editor/qetelementeditor.cpp	/^bool QETElementEditor::toFile(const QString &fn) {$/;"	f	class:QETElementEditor
toFileName	titleblock/templatescollection.cpp	/^QString TitleBlockTemplatesFilesCollection::toFileName(const QString &template_name) {$/;"	f	class:TitleBlockTemplatesFilesCollection
toItem	editor/graphicspart/customelementpart.cpp	/^QGraphicsItem *CustomElementPart::toItem() {$/;"	f	class:CustomElementPart
toLocation	editor/qetelementeditor.cpp	/^bool QETElementEditor::toLocation(const ElementsLocation &location) {$/;"	f	class:QETElementEditor
toNumContext	ui/numparteditorw.cpp	/^NumerotationContext NumPartEditorW::toNumContext() {$/;"	f	class:NumPartEditorW
toNumContext	ui/selectautonumw.cpp	/^NumerotationContext SelectAutonumW::toNumContext() const {$/;"	f	class:SelectAutonumW
toPaintDevice	diagram.cpp	/^bool Diagram::toPaintDevice(QPaintDevice &pix, int width, int height, Qt::AspectRatioMode aspectRatioMode) {$/;"	f	class:Diagram
toPureCategory	elementdefinition.cpp	/^ElementsCategory *ElementDefinition::toPureCategory() {$/;"	f	class:ElementDefinition
toPureCategory	elementscategory.cpp	/^ElementsCategory *ElementsCategory::toPureCategory() {$/;"	f	class:ElementsCategory
toPureCategory	elementscollection.cpp	/^ElementsCategory *ElementsCollection::toPureCategory() {$/;"	f	class:ElementsCollection
toRepresentedString	numerotationcontextcommands.cpp	/^QString FolioNum::toRepresentedString(const QString str) const {$/;"	f	class:FolioNum
toRepresentedString	numerotationcontextcommands.cpp	/^QString HundredNum::toRepresentedString(const QString num) const {$/;"	f	class:HundredNum
toRepresentedString	numerotationcontextcommands.cpp	/^QString NumerotationContextCommands::toRepresentedString() {$/;"	f	class:NumerotationContextCommands
toRepresentedString	numerotationcontextcommands.cpp	/^QString StringNum::toRepresentedString(const QString str) const {$/;"	f	class:StringNum
toRepresentedString	numerotationcontextcommands.cpp	/^QString TenNum::toRepresentedString(const QString num) const {$/;"	f	class:TenNum
toRepresentedString	numerotationcontextcommands.cpp	/^QString UnitNum::toRepresentedString(const QString num) const {$/;"	f	class:UnitNum
toSettings	borderproperties.cpp	/^void BorderProperties::toSettings(QSettings &settings, const QString &prefix) const {$/;"	f	class:BorderProperties
toSettings	conductorproperties.cpp	/^void ConductorProperties::toSettings(QSettings &settings, const QString &prefix) const {$/;"	f	class:ConductorProperties
toSettings	conductorproperties.cpp	/^void SingleLineProperties::toSettings(QSettings &settings, const QString &prefix) const {$/;"	f	class:SingleLineProperties
toSettings	diagramcontext.cpp	/^void DiagramContext::toSettings(QSettings &settings, const QString &array_name) const {$/;"	f	class:DiagramContext
toSettings	exportproperties.cpp	/^void ExportProperties::toSettings(QSettings &settings, const QString &prefix) const {$/;"	f	class:ExportProperties
toSettings	properties/xrefproperties.cpp	/^void XRefProperties::toSettings(QSettings &settings, const QString prefix) const {$/;"	f	class:XRefProperties
toSettings	titleblockproperties.cpp	/^void TitleBlockProperties::toSettings(QSettings &settings, const QString &prefix) const {$/;"	f	class:TitleBlockProperties
toSettings	ui/reportpropertiewidget.cpp	/^void ReportPropertieWidget::toSettings(QSettings &settings, const QString &prefix) {$/;"	f	class:ReportPropertieWidget
toShortString	titleblock/dimension.cpp	/^QString TitleBlockDimension::toShortString() const {$/;"	f	class:TitleBlockDimension
toString	diagramposition.cpp	/^QString DiagramPosition::toString() {$/;"	f	class:DiagramPosition
toString	elementslocation.cpp	/^QString ElementsLocation::toString() const {$/;"	f	class:ElementsLocation
toString	orientationset.cpp	/^QString OrientationSet::toString() const {$/;"	f	class:OrientationSet
toString	titleblock/dimension.cpp	/^QString TitleBlockDimension::toString() const {$/;"	f	class:TitleBlockDimension
toString	titleblock/templatelocation.cpp	/^QString TitleBlockTemplateLocation::toString() const {$/;"	f	class:TitleBlockTemplateLocation
toString	titleblockcell.cpp	/^QString TitleBlockCell::toString() const {$/;"	f	class:TitleBlockCell
toString	titleblocktemplate.cpp	/^QString TitleBlockTemplate::toString() const {$/;"	f	class:TitleBlockTemplate
toTemplateName	titleblock/templatescollection.cpp	/^QString TitleBlockTemplatesFilesCollection::toTemplateName(const QString &file_name) {$/;"	f	class:TitleBlockTemplatesFilesCollection
toXml	borderproperties.cpp	/^void BorderProperties::toXml(QDomElement &e) const {$/;"	f	class:BorderProperties
toXml	conductorproperties.cpp	/^void ConductorProperties::toXml(QDomElement &e) const {$/;"	f	class:ConductorProperties
toXml	conductorproperties.cpp	/^void SingleLineProperties::toXml(QDomElement &e) const {$/;"	f	class:SingleLineProperties
toXml	diagram.cpp	/^QDomDocument Diagram::toXml(bool whole_content) {$/;"	f	class:Diagram
toXml	diagramcontext.cpp	/^void DiagramContext::toXml(QDomElement &e, const QString &tag_name) const {$/;"	f	class:DiagramContext
toXml	editor/elementscene.cpp	/^const QDomDocument ElementScene::toXml(bool all_parts) {$/;"	f	class:ElementScene
toXml	editor/graphicspart/partarc.cpp	/^const QDomElement PartArc::toXml(QDomDocument &xml_document) const {$/;"	f	class:PartArc
toXml	editor/graphicspart/partellipse.cpp	/^const QDomElement PartEllipse::toXml(QDomDocument &xml_document) const$/;"	f	class:PartEllipse
toXml	editor/graphicspart/partline.cpp	/^const QDomElement PartLine::toXml(QDomDocument &xml_document) const$/;"	f	class:PartLine
toXml	editor/graphicspart/partpolygon.cpp	/^const QDomElement PartPolygon::toXml(QDomDocument &xml_document) const$/;"	f	class:PartPolygon
toXml	editor/graphicspart/partrectangle.cpp	/^const QDomElement PartRectangle::toXml(QDomDocument &xml_document) const$/;"	f	class:PartRectangle
toXml	editor/graphicspart/partterminal.cpp	/^const QDomElement PartTerminal::toXml(QDomDocument &xml_document) const {$/;"	f	class:PartTerminal
toXml	editor/graphicspart/parttext.cpp	/^const QDomElement PartText::toXml(QDomDocument &xml_document) const {$/;"	f	class:PartText
toXml	editor/graphicspart/parttextfield.cpp	/^const QDomElement PartTextField::toXml(QDomDocument &xml_document) const {$/;"	f	class:PartTextField
toXml	nameslist.cpp	/^QDomElement NamesList::toXml(QDomDocument &xml_document, const QHash<QString, QString> &xml_options) const {$/;"	f	class:NamesList
toXml	numerotationcontext.cpp	/^QDomElement NumerotationContext::toXml(QDomDocument &d, QString str) {$/;"	f	class:NumerotationContext
toXml	properties/xrefproperties.cpp	/^void XRefProperties::toXml(QDomElement &xml_element) const {$/;"	f	class:XRefProperties
toXml	qetgraphicsitem/conductor.cpp	/^QDomElement Conductor::toXml(QDomDocument &d, QHash<Terminal *, int> &table_adr_id) const {$/;"	f	class:Conductor
toXml	qetgraphicsitem/conductortextitem.cpp	/^void ConductorTextItem::toXml(QDomElement &xml) const {$/;"	f	class:ConductorTextItem
toXml	qetgraphicsitem/diagramimageitem.cpp	/^QDomElement DiagramImageItem::toXml(QDomDocument &document) const {$/;"	f	class:DiagramImageItem
toXml	qetgraphicsitem/diagramtextitem.cpp	/^QDomElement DiagramTextItem::toXml(QDomDocument &) const {$/;"	f	class:DiagramTextItem
toXml	qetgraphicsitem/element.cpp	/^QDomElement Element::toXml(QDomDocument &document, QHash<Terminal *, int> &table_adr_id) const {$/;"	f	class:Element
toXml	qetgraphicsitem/elementtextitem.cpp	/^QDomElement ElementTextItem::toXml(QDomDocument &document) const {$/;"	f	class:ElementTextItem
toXml	qetgraphicsitem/independenttextitem.cpp	/^QDomElement IndependentTextItem::toXml(QDomDocument &document) const {$/;"	f	class:IndependentTextItem
toXml	qetgraphicsitem/qetshapeitem.cpp	/^QDomElement QetShapeItem::toXml(QDomDocument &document) const {$/;"	f	class:QetShapeItem
toXml	qetgraphicsitem/terminal.cpp	/^QDomElement Terminal::toXml(QDomDocument &doc) const {$/;"	f	class:Terminal
toXml	qetproject.cpp	/^QDomDocument QETProject::toXml() {$/;"	f	class:QETProject
toXml	titleblockproperties.cpp	/^void TitleBlockProperties::toXml(QDomElement &e) const {$/;"	f	class:TitleBlockProperties
to_paste_in_area_	editor/elementview.h	/^	QString to_paste_in_area_;$/;"	m	class:ElementView
toggleFullScreen	qetmainwindow.cpp	/^void QETMainWindow::toggleFullScreen() {$/;"	f	class:QETMainWindow
toggle_diagrams_list_	qetprintpreviewdialog.h	/^	QAction *toggle_diagrams_list_;$/;"	m	class:QETPrintPreviewDialog
toggle_print_options_	qetprintpreviewdialog.h	/^	QAction *toggle_print_options_;$/;"	m	class:QETPrintPreviewDialog
toolbar	elementscategorieswidget.h	/^	QToolBar *toolbar;$/;"	m	class:ElementsCategoriesWidget
toolbar	elementspanelwidget.h	/^	QToolBar *toolbar, *filter_toolbar;$/;"	m	class:ElementsPanelWidget
toolbar_	qetprintpreviewdialog.h	/^	QToolBar *toolbar_;$/;"	m	class:QETPrintPreviewDialog
tools_dock	editor/qetelementeditor.h	/^	QDockWidget *tools_dock;$/;"	m	class:QETElementEditor
tools_dock_scroll_area_	editor/qetelementeditor.h	/^	QScrollArea *tools_dock_scroll_area_;$/;"	m	class:QETElementEditor
tools_dock_stack_	editor/qetelementeditor.h	/^	QStackedWidget *tools_dock_stack_;$/;"	m	class:QETElementEditor
tools_menu	editor/qetelementeditor.h	/^	QMenu *file_menu, *edit_menu, *paste_from_menu, *display_menu, *tools_menu;$/;"	m	class:QETElementEditor
tooltip_text_	qfilenameedit.h	/^	QString tooltip_text_;$/;"	m	class:QFileNameEdit
topLeftCell	titleblock/templatecellsset.cpp	/^TitleBlockTemplateVisualCell *TitleBlockTemplateCellsSet::topLeftCell() const {$/;"	f	class:TitleBlockTemplateCellsSet
total_width_helper_cell_	titleblock/templateview.h	/^	SplittedHelperCell *total_width_helper_cell_;$/;"	m	class:TitleBlockTemplateView
transformation	editor/editorcommands.cpp	/^QPair<QRectF, QRectF> ScalePartsCommand::transformation() {$/;"	f	class:ScalePartsCommand
translateItems	editor/elementprimitivedecorator.cpp	/^void ElementPrimitiveDecorator::translateItems(const QPointF &movement) {$/;"	f	class:ElementPrimitiveDecorator
translation	qeticons.cpp	/^		QIcon translation;$/;"	m	namespace:QET::Icons	file:
translatorsTab	aboutqet.cpp	/^QWidget *AboutQET::translatorsTab() const {$/;"	f	class:AboutQET
tree_names	nameslistwidget.h	/^	QTreeWidget *tree_names;$/;"	m	class:NamesListWidget
tryClosing	projectview.cpp	/^bool ProjectView::tryClosing() {$/;"	f	class:ProjectView
tryClosingDiagrams	projectview.cpp	/^int ProjectView::tryClosingDiagrams() {$/;"	f	class:ProjectView
tryClosingElementEditors	projectview.cpp	/^bool ProjectView::tryClosingElementEditors() {$/;"	f	class:ProjectView
type	conductorproperties.h	/^	ConductorType type;$/;"	m	class:ConductorProperties
type	conductorsegment.cpp	/^QET::ConductorSegmentType ConductorSegment::type() const {$/;"	f	class:ConductorSegment
type	editor/elementprimitivedecorator.h	/^	virtual int type() const { return Type; }$/;"	f	class:ElementPrimitiveDecorator
type	editor/graphicspart/partarc.h	/^		virtual int type() const { return Type; }$/;"	f	class:PartArc
type	editor/graphicspart/partellipse.h	/^		virtual int type() const { return Type; }	$/;"	f	class:PartEllipse
type	editor/graphicspart/partline.h	/^		virtual int type() const { return Type; }$/;"	f	class:PartLine
type	editor/graphicspart/partpolygon.h	/^		virtual int type() const { return Type; }$/;"	f	class:PartPolygon
type	editor/graphicspart/partrectangle.h	/^		virtual int     type  () const { return Type; }$/;"	f	class:PartRectangle
type	editor/graphicspart/partterminal.h	/^		virtual int type() const { return Type; }$/;"	f	class:PartTerminal
type	editor/graphicspart/parttext.h	/^	virtual int type() const { return Type; }$/;"	f	class:PartText
type	editor/graphicspart/parttextfield.h	/^	virtual int type() const { return Type; }$/;"	f	class:PartTextField
type	qetgraphicsitem/conductor.h	/^	virtual int type() const { return Type; }$/;"	f	class:Conductor
type	qetgraphicsitem/conductortextitem.h	/^	virtual int type() const { return Type; }$/;"	f	class:ConductorTextItem
type	qetgraphicsitem/crossrefitem.h	/^	virtual int type() const { return Type; }$/;"	f	class:CrossRefItem
type	qetgraphicsitem/diagramimageitem.h	/^	virtual int type() const { return Type; }$/;"	f	class:DiagramImageItem
type	qetgraphicsitem/diagramtextitem.h	/^	virtual int type() const { return Type; }$/;"	f	class:DiagramTextItem
type	qetgraphicsitem/element.h	/^		virtual int type() const { return Type; }$/;"	f	class:Element
type	qetgraphicsitem/elementtextitem.h	/^		virtual int type () const { return Type; }$/;"	f	class:ElementTextItem
type	qetgraphicsitem/independenttextitem.h	/^	virtual int type() const { return Type; }$/;"	f	class:IndependentTextItem
type	qetgraphicsitem/qetshapeitem.h	/^	virtual int type() const { return Type; }$/;"	f	class:QetShapeItem
type	qetgraphicsitem/terminal.h	/^		virtual int type() const { return Type; }$/;"	f	class:Terminal
type	titleblock/dimension.h	/^	QET::TitleBlockColumnLength type; \/\/\/< Kind of length$/;"	m	struct:TitleBlockDimension
type	titleblock/templatecommands.cpp	/^int ModifyTemplateDimension::type() const {$/;"	f	class:ModifyTemplateDimension
type	titleblock/templatecommands.cpp	/^int ModifyTemplateGridCommand::type() const {$/;"	f	class:ModifyTemplateGridCommand
type	titleblockcell.cpp	/^TitleBlockCell::TemplateCellType TitleBlockCell::type() const {$/;"	f	class:TitleBlockCell
type	ui/numparteditorw.h	/^	enum type {unit,ten,hundred,string,folio};$/;"	g	class:NumPartEditorW
typeChanged	ui/xrefpropertieswidget.cpp	/^void XRefPropertiesWidget::typeChanged() {$/;"	f	class:XRefPropertiesWidget
typeId	qetgraphicsitem/customelement.h	/^inline QString CustomElement::typeId() const {$/;"	f	class:CustomElement
typeToString	conductorproperties.cpp	/^QString ConductorProperties::typeToString(ConductorType t) {$/;"	f	class:ConductorProperties
type_	titleblock/templatecommands.h	/^	bool type_;                     \/\/\/< true for a row, false for a column$/;"	m	class:ModifyTemplateGridCommand
type_	titleblock/templatecommands.h	/^	bool type_;                   \/\/\/< true for a row, false for a column$/;"	m	class:ModifyTemplateDimension
type_	ui/numparteditorw.h	/^	type type_;$/;"	m	class:NumPartEditorW
type_combo	ui/ui_numparteditorw.h	/^    QComboBox *type_combo;$/;"	m	class:Ui_NumPartEditorW
type_label	ui/ui_selectautonumw.h	/^    QLabel *type_label;$/;"	m	class:Ui_SelectAutonumW
type_logos_	titleblocktemplate.h	/^	QHash<QString, QString>        type_logos_;      \/\/\/< Logos types (e.g. "png", "jpeg", "svg")$/;"	m	class:TitleBlockTemplate
ui	editor/ui/elementpropertieseditorwidget.h	/^	Ui::ElementPropertiesEditorWidget *ui;$/;"	m	class:ElementPropertiesEditorWidget
ui	ui/autonumselectorwidget.h	/^		Ui::AutonumSelectorWidget *ui;$/;"	m	class:AutonumSelectorWidget
ui	ui/borderpropertieswidget.h	/^		Ui::BorderPropertiesWidget *ui;$/;"	m	class:BorderPropertiesWidget
ui	ui/conductorpropertiesdialog.h	/^		Ui::ConductorPropertiesDialog *ui;$/;"	m	class:ConductorPropertiesDialog
ui	ui/conductorpropertieswidget.h	/^		Ui::ConductorPropertiesWidget *ui;$/;"	m	class:ConductorPropertiesWidget
ui	ui/diagramselection.h	/^	Ui::diagramselection *ui;$/;"	m	class:diagramselection
ui	ui/dialogautonum.h	/^	Ui::DialogAutoNum *ui;$/;"	m	class:DialogAutoNum
ui	ui/dialogwaiting.h	/^	Ui::DialogWaiting *ui;$/;"	m	class:DialogWaiting
ui	ui/elementinfopartwidget.h	/^		Ui::ElementInfoPartWidget *ui;$/;"	m	class:ElementInfoPartWidget
ui	ui/elementinfowidget.h	/^		Ui::ElementInfoWidget           *ui;$/;"	m	class:ElementInfoWidget
ui	ui/elementselectorwidget.h	/^	Ui::ElementSelectorWidget *ui;$/;"	m	class:ElementSelectorWidget
ui	ui/linksingleelementwidget.h	/^	Ui::LinkSingleElementWidget *ui;$/;"	m	class:LinkSingleElementWidget
ui	ui/masterpropertieswidget.h	/^	Ui::MasterPropertiesWidget *ui;$/;"	m	class:MasterPropertiesWidget
ui	ui/numparteditorw.h	/^	Ui::NumPartEditorW *ui;$/;"	m	class:NumPartEditorW
ui	ui/potentialtextsdialog.h	/^		Ui::PotentialTextsDialog *ui;$/;"	m	class:PotentialTextsDialog
ui	ui/reportpropertiewidget.h	/^	Ui::ReportPropertieWidget *ui;$/;"	m	class:ReportPropertieWidget
ui	ui/selectautonumw.h	/^		Ui::SelectAutonumW *ui;$/;"	m	class:SelectAutonumW
ui	ui/titleblockpropertieswidget.h	/^		Ui::TitleBlockPropertiesWidget *ui;$/;"	m	class:TitleBlockPropertiesWidget
ui	ui/xrefpropertieswidget.h	/^	Ui::XRefPropertiesWidget *ui;$/;"	m	class:XRefPropertiesWidget
undo	diagramcommands.cpp	/^void ChangeBorderCommand::undo() {$/;"	f	class:ChangeBorderCommand
undo	diagramcommands.cpp	/^void ChangeConductorCommand::undo() {$/;"	f	class:ChangeConductorCommand
undo	diagramcommands.cpp	/^void ChangeConductorPropertiesCommand::undo() {$/;"	f	class:ChangeConductorPropertiesCommand
undo	diagramcommands.cpp	/^void ChangeDiagramTextCommand::undo() {$/;"	f	class:ChangeDiagramTextCommand
undo	diagramcommands.cpp	/^void ChangeSeveralConductorsPropertiesCommand::undo() {$/;"	f	class:ChangeSeveralConductorsPropertiesCommand
undo	diagramcommands.cpp	/^void ChangeShapeStyleCommand::undo() {$/;"	f	class:ChangeShapeStyleCommand
undo	diagramcommands.cpp	/^void ChangeTitleBlockCommand::undo() {$/;"	f	class:ChangeTitleBlockCommand
undo	diagramcommands.cpp	/^void DeleteElementsCommand::undo() {$/;"	f	class:DeleteElementsCommand
undo	diagramcommands.cpp	/^void ItemResizerCommand::undo() {$/;"	f	class:ItemResizerCommand
undo	diagramcommands.cpp	/^void LinkElementsCommand::undo() {$/;"	f	class:LinkElementsCommand
undo	diagramcommands.cpp	/^void MoveConductorsTextsCommand::undo() {$/;"	f	class:MoveConductorsTextsCommand
undo	diagramcommands.cpp	/^void MoveElementsCommand::undo() {$/;"	f	class:MoveElementsCommand
undo	diagramcommands.cpp	/^void MoveElementsTextsCommand::undo() {$/;"	f	class:MoveElementsTextsCommand
undo	diagramcommands.cpp	/^void PasteDiagramCommand::undo() {$/;"	f	class:PasteDiagramCommand
undo	diagramcommands.cpp	/^void ResetConductorCommand::undo() {$/;"	f	class:ResetConductorCommand
undo	diagramcommands.cpp	/^void RotateElementsCommand::undo() {$/;"	f	class:RotateElementsCommand
undo	diagramcommands.cpp	/^void RotateTextsCommand::undo() {$/;"	f	class:RotateTextsCommand
undo	diagramcommands.cpp	/^void unlinkElementsCommand::undo() {$/;"	f	class:unlinkElementsCommand
undo	diagramcommands.h	/^		virtual void undo() {$/;"	f	class:AddItemCommand
undo	editor/editorcommands.cpp	/^void AddPartCommand::undo() {$/;"	f	class:AddPartCommand
undo	editor/editorcommands.cpp	/^void ChangeInformationsCommand::undo() {$/;"	f	class:ChangeInformationsCommand
undo	editor/editorcommands.cpp	/^void ChangeNamesCommand::undo() {$/;"	f	class:ChangeNamesCommand
undo	editor/editorcommands.cpp	/^void ChangePartCommand::undo()$/;"	f	class:ChangePartCommand
undo	editor/editorcommands.cpp	/^void ChangePolygonPointsCommand::undo() {$/;"	f	class:ChangePolygonPointsCommand
undo	editor/editorcommands.cpp	/^void ChangePropertiesCommand::undo() {$/;"	f	class:ChangePropertiesCommand
undo	editor/editorcommands.cpp	/^void ChangeZValueCommand::undo() {$/;"	f	class:ChangeZValueCommand
undo	editor/editorcommands.cpp	/^void DeletePartsCommand::undo() {$/;"	f	class:DeletePartsCommand
undo	editor/editorcommands.cpp	/^void MovePartsCommand::undo() {$/;"	f	class:MovePartsCommand
undo	editor/editorcommands.cpp	/^void PastePartsCommand::undo() {$/;"	f	class:PastePartsCommand
undo	editor/editorcommands.cpp	/^void ScalePartsCommand::undo() {$/;"	f	class:ScalePartsCommand
undo	editor/qetelementeditor.h	/^	QAction *undo, *redo;$/;"	m	class:QETElementEditor
undo	qetdiagrameditor.h	/^		QAction *undo;               \/\/\/< Cancel the latest action$/;"	m	class:QETDiagramEditor
undo	titleblock/templatecommands.cpp	/^void ChangeTemplateInformationsCommand::undo() {$/;"	f	class:ChangeTemplateInformationsCommand
undo	titleblock/templatecommands.cpp	/^void CutTemplateCellsCommand::undo() {$/;"	f	class:CutTemplateCellsCommand
undo	titleblock/templatecommands.cpp	/^void MergeCellsCommand::undo() {$/;"	f	class:MergeCellsCommand
undo	titleblock/templatecommands.cpp	/^void ModifyTemplateDimension::undo() {$/;"	f	class:ModifyTemplateDimension
undo	titleblock/templatecommands.cpp	/^void ModifyTemplateGridCommand::undo() {$/;"	f	class:ModifyTemplateGridCommand
undo	titleblock/templatecommands.cpp	/^void ModifyTitleBlockCellCommand::undo() {$/;"	f	class:ModifyTitleBlockCellCommand
undo	titleblock/templatecommands.cpp	/^void PasteTemplateCellsCommand::undo() {$/;"	f	class:PasteTemplateCellsCommand
undo	titleblock/templatecommands.cpp	/^void SplitCellsCommand::undo() {$/;"	f	class:SplitCellsCommand
undo	undocommand/changeelementinformationcommand.cpp	/^void ChangeElementInformationCommand::undo() {$/;"	f	class:ChangeElementInformationCommand
undoStack	diagram.h	/^inline QUndoStack &Diagram::undoStack() {$/;"	f	class:Diagram
undoStack	editor/elementitemeditor.cpp	/^QUndoStack &ElementItemEditor::undoStack() const {$/;"	f	class:ElementItemEditor
undoStack	editor/elementscene.cpp	/^QUndoStack &ElementScene::undoStack() {$/;"	f	class:ElementScene
undoStack	editor/graphicspart/customelementpart.cpp	/^QUndoStack &CustomElementPart::undoStack() const {$/;"	f	class:CustomElementPart
undoStack	qetproject.h	/^		QUndoStack* undoStack() {return undo_stack_;}$/;"	f	class:QETProject
undoStackChanged	qetproject.h	/^	void undoStackChanged (bool a) {if (!a) setModified(true);}$/;"	f	class:QETProject
undo_	titleblock/qettemplateeditor.h	/^	QAction *undo_, *redo_, *cut_, *copy_, *paste_, *edit_logos_, *edit_info_, *add_row_, *add_col_, *merge_cells_, *split_cell_;$/;"	m	class:QETTitleBlockTemplateEditor
undo_dock	editor/qetelementeditor.h	/^	QDockWidget *undo_dock;$/;"	m	class:QETElementEditor
undo_dock_widget_	titleblock/qettemplateeditor.h	/^	QDockWidget *undo_dock_widget_;$/;"	m	class:QETTitleBlockTemplateEditor
undo_group	qetdiagrameditor.h	/^		QUndoGroup undo_group;$/;"	m	class:QETDiagramEditor
undo_hash	editor/editorcommands.h	/^	QHash<QGraphicsItem *, qreal> undo_hash;$/;"	m	class:ChangeZValueCommand
undo_stack	editor/elementscene.h	/^		QUndoStack undo_stack;$/;"	m	class:ElementScene
undo_stack_	qetproject.h	/^	QUndoStack *undo_stack_;$/;"	m	class:QETProject
undo_stack_	titleblock/qettemplateeditor.h	/^	QUndoStack *undo_stack_;$/;"	m	class:QETTitleBlockTemplateEditor
undo_view_	titleblock/qettemplateeditor.h	/^	QUndoView *undo_view_;$/;"	m	class:QETTitleBlockTemplateEditor
unescapeSpaces	qet.cpp	/^QString QET::unescapeSpaces(const QString &string) {$/;"	f	class:QET
unique_key_	qetsingleapplication.h	/^	QString unique_key_;$/;"	m	class:QETSingleApplication
unit	ui/numparteditorw.h	/^	enum type {unit,ten,hundred,string,folio};$/;"	e	enum:NumPartEditorW::type
unknownOptions	qetarguments.cpp	/^QList<QString> QETArguments::unknownOptions() const {$/;"	f	class:QETArguments
unknown_options_	qetarguments.h	/^	QList<QString> unknown_options_;$/;"	m	class:QETArguments
unlinkAllElements	qetgraphicsitem/element.h	/^		virtual void unlinkAllElements () {}$/;"	f	class:Element
unlinkAllElements	qetgraphicsitem/masterelement.cpp	/^void MasterElement::unlinkAllElements() {$/;"	f	class:MasterElement
unlinkAllElements	qetgraphicsitem/reportelement.cpp	/^void ReportElement::unlinkAllElements()$/;"	f	class:ReportElement
unlinkAllElements	qetgraphicsitem/slaveelement.cpp	/^void SlaveElement::unlinkAllElements() {$/;"	f	class:SlaveElement
unlinkClicked	ui/linksingleelementwidget.cpp	/^void LinkSingleElementWidget::unlinkClicked() {$/;"	f	class:LinkSingleElementWidget
unlinkElement	qetgraphicsitem/element.h	/^		virtual void unlinkElement     (Element *) {}$/;"	f	class:Element
unlinkElement	qetgraphicsitem/masterelement.cpp	/^void MasterElement::unlinkElement(Element *elmt)$/;"	f	class:MasterElement
unlinkElement	qetgraphicsitem/reportelement.cpp	/^void ReportElement::unlinkElement(Element *elmt) {$/;"	f	class:ReportElement
unlinkElement	qetgraphicsitem/slaveelement.cpp	/^void SlaveElement::unlinkElement(Element *elmt)$/;"	f	class:SlaveElement
unlinkElementsCommand	diagramcommands.cpp	/^unlinkElementsCommand::unlinkElementsCommand(Element *elmt1, Element *elmt2, QUndoCommand *parent):$/;"	f	class:unlinkElementsCommand
unlinkElementsCommand	diagramcommands.cpp	/^unlinkElementsCommand::unlinkElementsCommand(Element *elmt1, QList<Element *> &elmtList, QUndoCommand *parent):$/;"	f	class:unlinkElementsCommand
unlinkElementsCommand	diagramcommands.h	/^class unlinkElementsCommand : public QUndoCommand {$/;"	c
unlink_	ui/linksingleelementwidget.h	/^	bool unlink_;$/;"	m	class:LinkSingleElementWidget
unlink_button	ui/ui_masterpropertieswidget.h	/^    QPushButton *unlink_button;$/;"	m	class:Ui_MasterPropertiesWidget
unlink_widget	ui/linksingleelementwidget.h	/^	QWidget *unlink_widget;$/;"	m	class:LinkSingleElementWidget
unregisterItem	genericpanel.cpp	/^void GenericPanel::unregisterItem(QTreeWidgetItem *item) {$/;"	f	class:GenericPanel
unregisterProject	qetapp.cpp	/^bool QETApp::unregisterProject (QETProject *project)$/;"	f	class:QETApp
upDateInterface	editor/ui/elementpropertieseditorwidget.cpp	/^void ElementPropertiesEditorWidget::upDateInterface() {$/;"	f	class:ElementPropertiesEditorWidget
updateActions	richtext/richtexteditor.cpp	/^void RichTextEditorToolBar::updateActions()$/;"	f	class:qdesigner_internal::RichTextEditorToolBar
updateActions	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::updateActions() {$/;"	f	class:QETTitleBlockTemplateEditor
updateArc	editor/arceditor.cpp	/^void ArcEditor::updateArc() {$/;"	f	class:ArcEditor
updateArc	editor/esevent/eseventaddarc.cpp	/^void ESEventAddArc::updateArc()$/;"	f	class:ESEventAddArc
updateArcA	editor/arceditor.cpp	/^void ArcEditor::updateArcA() { addChangePartCommand(tr("angle"),                  part, "spanAngle",  angle -> value() * -16); }$/;"	f	class:ArcEditor
updateArcH	editor/arceditor.cpp	/^void ArcEditor::updateArcH() { addChangePartCommand(tr("diam\\350tre horizontal"), part, "diameter_h",  h  -> value()); }$/;"	f	class:ArcEditor
updateArcS	editor/arceditor.cpp	/^void ArcEditor::updateArcS() { addChangePartCommand(tr("angle de d\\351part"),     part, "startAngle", ((start_angle -> value() * -1) + 90) * 16); }$/;"	f	class:ArcEditor
updateArcV	editor/arceditor.cpp	/^void ArcEditor::updateArcV() { addChangePartCommand(tr("diam\\350tre vertical"),   part, "diameter_v",  v  -> value()); }$/;"	f	class:ArcEditor
updateArcX	editor/arceditor.cpp	/^void ArcEditor::updateArcX() { addChangePartCommand(tr("abscisse"),               part, "centerX",     x  -> value()); }$/;"	f	class:ArcEditor
updateArcY	editor/arceditor.cpp	/^void ArcEditor::updateArcY() { addChangePartCommand(tr("ordonn\\351e"),            part, "centerY",     y  -> value()); }$/;"	f	class:ArcEditor
updateButtons	elementscategorieswidget.cpp	/^void ElementsCategoriesWidget::updateButtons() {$/;"	f	class:ElementsCategoriesWidget
updateButtons	elementspanelwidget.cpp	/^void ElementsPanelWidget::updateButtons() {$/;"	f	class:ElementsPanelWidget
updateCollections	titleblock/templatelocationchooser.cpp	/^void TitleBlockTemplateLocationChooser::updateCollections() {$/;"	f	class:TitleBlockTemplateLocationChooser
updateColumnsHelperCells	titleblock/templateview.cpp	/^void TitleBlockTemplateView::updateColumnsHelperCells() {$/;"	f	class:TitleBlockTemplateView
updateConductor	qetgraphicsitem/terminal.cpp	/^void Terminal::updateConductor() {$/;"	f	class:Terminal
updateConductorPath	qetgraphicsitem/conductor.cpp	/^void Conductor::updateConductorPath(const QPointF &p1, Qet::Orientation o1, const QPointF &p2, Qet::Orientation o2) {$/;"	f	class:Conductor
updateContext	projectconfigpages.cpp	/^void ProjectAutoNumConfigPage::updateContext(QString str) {$/;"	f	class:ProjectAutoNumConfigPage
updateCurrentPartEditor	editor/graphicspart/customelementpart.cpp	/^void CustomElementPart::updateCurrentPartEditor() const {$/;"	f	class:CustomElementPart
updateCurrentPartEditor	editor/qetelementeditor.cpp	/^void QETElementEditor::updateCurrentPartEditor() {$/;"	f	class:QETElementEditor
updateCurrentValue	titleblock/gridlayoutanimation.cpp	/^void GridLayoutAnimation::updateCurrentValue(const QVariant &value) {$/;"	f	class:GridLayoutAnimation
updateCurrentValue	treecoloranimation.cpp	/^void TreeColorAnimation::updateCurrentValue(const QVariant &color) {$/;"	f	class:TreeColorAnimation
updateDiagramContextForTitleBlock	bordertitleblock.cpp	/^void BorderTitleBlock::updateDiagramContextForTitleBlock(const DiagramContext &initial_context) {$/;"	f	class:BorderTitleBlock
updateDiagramItem	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::updateDiagramItem(QTreeWidgetItem *diagram_qtwi, Diagram *diagram, PanelOptions options, bool freshly_created) {$/;"	f	class:GenericPanel
updateDiagramsFolioData	qetproject.cpp	/^void QETProject::updateDiagramsFolioData() {$/;"	f	class:QETProject
updateDiagramsTitleBlockTemplate	qetproject.cpp	/^void QETProject::updateDiagramsTitleBlockTemplate(TitleBlockTemplatesCollection *collection, const QString &template_name) {$/;"	f	class:QETProject
updateDisplay	ui/xrefpropertieswidget.cpp	/^void XRefPropertiesWidget::updateDisplay() {$/;"	f	class:XRefPropertiesWidget
updateDisplayedMinMaxWidth	titleblock/templateview.cpp	/^void TitleBlockTemplateView::updateDisplayedMinMaxWidth() {$/;"	f	class:TitleBlockTemplateView
updateEditorTitle	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::updateEditorTitle() {$/;"	f	class:QETTitleBlockTemplateEditor
updateElementItem	elementspanel.cpp	/^QTreeWidgetItem *ElementsPanel::updateElementItem(QTreeWidgetItem *element_qtwi, ElementDefinition *element, PanelOptions options, bool freshly_created) {$/;"	f	class:ElementsPanel
updateElementItem	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::updateElementItem(QTreeWidgetItem *element_qtwi, ElementDefinition *element, PanelOptions options, bool freshly_created) {$/;"	f	class:GenericPanel
updateElementsCategoryItem	elementspanel.cpp	/^QTreeWidgetItem *ElementsPanel::updateElementsCategoryItem(QTreeWidgetItem *category_qtwi, ElementsCategory *category, PanelOptions options, bool freshly_created) {$/;"	f	class:ElementsPanel
updateElementsCategoryItem	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::updateElementsCategoryItem(QTreeWidgetItem *category_qtwi, ElementsCategory *category, PanelOptions options, bool freshly_created) {$/;"	f	class:GenericPanel
updateElementsCollectionItem	elementspanel.cpp	/^QTreeWidgetItem *ElementsPanel::updateElementsCollectionItem(QTreeWidgetItem *collection_qtwi, ElementsCollection *collection, PanelOptions options, bool freshly_created) {$/;"	f	class:ElementsPanel
updateElementsCollectionItem	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::updateElementsCollectionItem(QTreeWidgetItem *collection_qtwi, ElementsCollection *collection, PanelOptions options, bool freshly_created) {$/;"	f	class:GenericPanel
updateEllipse	editor/ellipseeditor.cpp	/^void EllipseEditor::updateEllipse() {$/;"	f	class:EllipseEditor
updateEllipseH	editor/ellipseeditor.cpp	/^void EllipseEditor::updateEllipseH() { addChangePartCommand(tr("diam\\350tre horizontal"), part, "diameter_h",  h -> value());       }$/;"	f	class:EllipseEditor
updateEllipseV	editor/ellipseeditor.cpp	/^void EllipseEditor::updateEllipseV() { addChangePartCommand(tr("diam\\350tre vertical"),   part, "diameter_v",  v -> value());       }$/;"	f	class:EllipseEditor
updateEllipseX	editor/ellipseeditor.cpp	/^void EllipseEditor::updateEllipseX() { addChangePartCommand(tr("abscisse"),               part, "centerX",           x -> value());       }$/;"	f	class:EllipseEditor
updateEllipseY	editor/ellipseeditor.cpp	/^void EllipseEditor::updateEllipseY() { addChangePartCommand(tr("ordonn\\351e"),            part, "centerY",           y -> value());       }$/;"	f	class:EllipseEditor
updateForm	editor/arceditor.cpp	/^void ArcEditor::updateForm() {$/;"	f	class:ArcEditor
updateForm	editor/ellipseeditor.cpp	/^void EllipseEditor::updateForm() {$/;"	f	class:EllipseEditor
updateForm	editor/lineeditor.cpp	/^void LineEditor::updateForm() {$/;"	f	class:LineEditor
updateForm	editor/polygoneditor.cpp	/^void PolygonEditor::updateForm() {$/;"	f	class:PolygonEditor
updateForm	editor/rectangleeditor.cpp	/^void RectangleEditor::updateForm() {$/;"	f	class:RectangleEditor
updateForm	editor/styleeditor.cpp	/^void StyleEditor::updateForm()$/;"	f	class:StyleEditor
updateForm	editor/terminaleditor.cpp	/^void TerminalEditor::updateForm() {$/;"	f	class:TerminalEditor
updateForm	editor/texteditor.cpp	/^void TextEditor::updateForm() {$/;"	f	class:TextEditor
updateForm	editor/textfieldeditor.cpp	/^void TextFieldEditor::updateForm() {$/;"	f	class:TextFieldEditor
updateFormType	titleblock/templatecellwidget.cpp	/^void TitleBlockTemplateCellWidget::updateFormType(int cell_type) {$/;"	f	class:TitleBlockTemplateCellWidget
updateFullScreenAction	qetmainwindow.cpp	/^void QETMainWindow::updateFullScreenAction() {$/;"	f	class:QETMainWindow
updateHash	nameslistwidget.cpp	/^void NamesListWidget::updateHash() {$/;"	f	class:NamesListWidget
updateHelpCross	dvevent/dveventaddshape.cpp	/^void DVEventAddShape::updateHelpCross(const QPoint &p)$/;"	f	class:DVEventAddShape
updateHelpCross	editor/esevent/eseventinterface.cpp	/^void ESEventInterface::updateHelpCross(const QPointF &p) {$/;"	f	class:ESEventInterface
updateItem	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::updateItem(QTreeWidgetItem *qtwi, PanelOptions options, bool freshly_created) {$/;"	f	class:GenericPanel
updateLabel	qetgraphicsitem/commentitem.cpp	/^void CommentItem::updateLabel() {$/;"	f	class:CommentItem
updateLabel	qetgraphicsitem/crossrefitem.cpp	/^void CrossRefItem::updateLabel() {$/;"	f	class:CrossRefItem
updateLabel	qetgraphicsitem/masterelement.cpp	/^void MasterElement::updateLabel(DiagramContext old_info, DiagramContext new_info) {$/;"	f	class:MasterElement
updateLabel	qetgraphicsitem/reportelement.cpp	/^void ReportElement::updateLabel()$/;"	f	class:ReportElement
updateLabel	qetgraphicsitem/simpleelement.cpp	/^void SimpleElement::updateLabel(DiagramContext old_info, DiagramContext new_info) {$/;"	f	class:SimpleElement
updateLabel	qetgraphicsitem/slaveelement.cpp	/^void SlaveElement::updateLabel() {$/;"	f	class:SlaveElement
updateLastContextMenuCell	titleblock/templateview.cpp	/^void TitleBlockTemplateView::updateLastContextMenuCell(HelperCell *last_context_menu_cell) {$/;"	f	class:TitleBlockTemplateView
updateLayout	titleblock/templateview.cpp	/^void TitleBlockTemplateView::updateLayout() {$/;"	f	class:TitleBlockTemplateView
updateLine	editor/lineeditor.cpp	/^void LineEditor::updateLine() {$/;"	f	class:LineEditor
updateLineEndLength1	editor/lineeditor.cpp	/^void LineEditor::updateLineEndLength1() { addChangePartCommand(tr("longueur fin 1"), part, "length1", end1_length -> value()); }$/;"	f	class:LineEditor
updateLineEndLength2	editor/lineeditor.cpp	/^void LineEditor::updateLineEndLength2() { addChangePartCommand(tr("longueur fin 2"), part, "length2", end2_length -> value()); }$/;"	f	class:LineEditor
updateLineEndType1	editor/lineeditor.cpp	/^void LineEditor::updateLineEndType1() {   addChangePartCommand(tr("type fin 1"),     part, "end1",    end1_type -> itemData(end1_type->currentIndex()));   }$/;"	f	class:LineEditor
updateLineEndType2	editor/lineeditor.cpp	/^void LineEditor::updateLineEndType2() {   addChangePartCommand(tr("type fin 2"),     part, "end2",    end2_type -> itemData(end2_type->currentIndex()));   }$/;"	f	class:LineEditor
updateLineX1	editor/lineeditor.cpp	/^void LineEditor::updateLineX1() { addChangePartCommand(tr("abscisse point 1"),    part, "p1", editedP1()); }$/;"	f	class:LineEditor
updateLineX2	editor/lineeditor.cpp	/^void LineEditor::updateLineX2() { addChangePartCommand(tr("abscisse point 2"),    part, "p2", editedP2()); }$/;"	f	class:LineEditor
updateLineY1	editor/lineeditor.cpp	/^void LineEditor::updateLineY1() { addChangePartCommand(tr("ordonn\\351e point 1"), part, "p1", editedP1()); }$/;"	f	class:LineEditor
updateLineY2	editor/lineeditor.cpp	/^void LineEditor::updateLineY2() { addChangePartCommand(tr("ordonn\\351e point 2"), part, "p2", editedP2()); }$/;"	f	class:LineEditor
updateList	diagramschooser.cpp	/^void DiagramsChooser::updateList() {$/;"	f	class:DiagramsChooser
updateLogoInformations	titleblock/templatelogomanager.cpp	/^void TitleBlockTemplateLogoManager::updateLogoInformations(QListWidgetItem *current, QListWidgetItem *previous) {$/;"	f	class:TitleBlockTemplateLogoManager
updateLogosComboBox	titleblock/templatecellwidget.cpp	/^void TitleBlockTemplateCellWidget::updateLogosComboBox(const TitleBlockTemplate *parent_template) {$/;"	f	class:TitleBlockTemplateCellWidget
updateNewName	titleblock/templatelocationsaver.cpp	/^void TitleBlockTemplateLocationSaver::updateNewName() {$/;"	f	class:TitleBlockTemplateLocationSaver
updatePart	editor/styleeditor.cpp	/^void StyleEditor::updatePart() {$/;"	f	class:StyleEditor
updatePartAntialiasing	editor/styleeditor.cpp	/^void StyleEditor::updatePartAntialiasing()$/;"	f	class:StyleEditor
updatePartColor	editor/styleeditor.cpp	/^void StyleEditor::updatePartColor()$/;"	f	class:StyleEditor
updatePartFilling	editor/styleeditor.cpp	/^void StyleEditor::updatePartFilling()$/;"	f	class:StyleEditor
updatePartLineStyle	editor/styleeditor.cpp	/^void StyleEditor::updatePartLineStyle()$/;"	f	class:StyleEditor
updatePartLineWeight	editor/styleeditor.cpp	/^void StyleEditor::updatePartLineWeight()$/;"	f	class:StyleEditor
updatePath	qetgraphicsitem/conductor.cpp	/^void Conductor::updatePath(const QRectF &rect) {$/;"	f	class:Conductor
updatePathAnimate	qetgraphicsitem/conductor.h	/^	void updatePathAnimate(const int = 1) {updatePath();}$/;"	f	class:Conductor
updatePixmap	qetgraphicsitem/element.cpp	/^void Element::updatePixmap() {$/;"	f	class:Element
updatePolygon	editor/polygoneditor.cpp	/^void PolygonEditor::updatePolygon() {$/;"	f	class:PolygonEditor
updatePolygonClosedState	editor/polygoneditor.cpp	/^void PolygonEditor::updatePolygonClosedState() {$/;"	f	class:PolygonEditor
updatePolygonPoints	editor/polygoneditor.cpp	/^void PolygonEditor::updatePolygonPoints() {$/;"	f	class:PolygonEditor
updatePreview	ui/conductorpropertieswidget.cpp	/^void ConductorPropertiesWidget::updatePreview(bool b) {$/;"	f	class:ConductorPropertiesWidget
updatePreviewZoom	qetprintpreviewdialog.cpp	/^void QETPrintPreviewDialog::updatePreviewZoom() {$/;"	f	class:QETPrintPreviewDialog
updatePrintTypeDialog	diagramprintdialog.cpp	/^void DiagramPrintDialog::updatePrintTypeDialog() {$/;"	f	class:DiagramPrintDialog
updateProgressBar	elementspanelwidget.cpp	/^void ElementsPanelWidget::updateProgressBar(int current, int maximum) {$/;"	f	class:ElementsPanelWidget
updateProjectItem	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::updateProjectItem(QTreeWidgetItem *project_qtwi, QETProject *project, PanelOptions options, bool freshly_created) {$/;"	f	class:GenericPanel
updateProperties	qetgraphicsitem/crossrefitem.cpp	/^void CrossRefItem::updateProperties() {$/;"	f	class:CrossRefItem
updateRectangle	editor/rectangleeditor.cpp	/^void RectangleEditor::updateRectangle() {$/;"	f	class:RectangleEditor
updateRectangleH	editor/rectangleeditor.cpp	/^void RectangleEditor::updateRectangleH() { addChangePartCommand(tr("hauteur"),                part, "height",      h  -> value());}$/;"	f	class:RectangleEditor
updateRectangleW	editor/rectangleeditor.cpp	/^void RectangleEditor::updateRectangleW() { addChangePartCommand(tr("largeur"),                part, "width",       w  -> value());}$/;"	f	class:RectangleEditor
updateRectangleX	editor/rectangleeditor.cpp	/^void RectangleEditor::updateRectangleX() { addChangePartCommand(tr("abscisse"),               part, "rectTopLeft", editedTopLeft());}$/;"	f	class:RectangleEditor
updateRectangleY	editor/rectangleeditor.cpp	/^void RectangleEditor::updateRectangleY() { addChangePartCommand(tr("ordonn\\351e"),            part, "rectTopLeft", editedTopLeft());}$/;"	f	class:RectangleEditor
updateRectangles	bordertitleblock.cpp	/^void BorderTitleBlock::updateRectangles() {$/;"	f	class:BorderTitleBlock
updateRowsHelperCells	titleblock/templateview.cpp	/^void TitleBlockTemplateView::updateRowsHelperCells() {$/;"	f	class:TitleBlockTemplateView
updateSecondPoint	editor/graphicspart/partterminal.cpp	/^void PartTerminal::updateSecondPoint() {$/;"	f	class:PartTerminal
updateSpinBoxSuffix	titleblock/dimensionwidget.cpp	/^void TitleBlockDimensionWidget::updateSpinBoxSuffix() {$/;"	f	class:TitleBlockDimensionWidget
updateTabTitle	projectview.cpp	/^void ProjectView::updateTabTitle(DiagramView *diagram, const QString &diagram_title) {$/;"	f	class:ProjectView
updateTagg	editor/textfieldeditor.cpp	/^void TextFieldEditor::updateTagg() { addChangePartCommand(tr("tagg"), part, "tagg", m_tagg_cb->itemData(m_tagg_cb->currentIndex()).toString());}$/;"	f	class:TextFieldEditor
updateTemplateItem	elementspanel.cpp	/^QTreeWidgetItem *ElementsPanel::updateTemplateItem(QTreeWidgetItem *tb_template_qtwi, const TitleBlockTemplateLocation &tb_template, PanelOptions options, bool freshly_created) {$/;"	f	class:ElementsPanel
updateTemplateItem	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::updateTemplateItem(QTreeWidgetItem *tb_template_qtwi, const TitleBlockTemplateLocation &tb_template, PanelOptions options, bool freshly_created) {$/;"	f	class:GenericPanel
updateTemplateList	ui/titleblockpropertieswidget.cpp	/^void TitleBlockPropertiesWidget::updateTemplateList() {$/;"	f	class:TitleBlockPropertiesWidget
updateTemplates	titleblock/templatelocationchooser.cpp	/^void TitleBlockTemplateLocationChooser::updateTemplates() {$/;"	f	class:TitleBlockTemplateLocationChooser
updateTemplates	titleblock/templatelocationsaver.cpp	/^void TitleBlockTemplateLocationSaver::updateTemplates() {$/;"	f	class:TitleBlockTemplateLocationSaver
updateTemplatesCollectionItem	elementspanel.cpp	/^QTreeWidgetItem *ElementsPanel::updateTemplatesCollectionItem(QTreeWidgetItem *tbt_collection_qtwi, TitleBlockTemplatesCollection *tbt_collection, PanelOptions options, bool freshly_created) {$/;"	f	class:ElementsPanel
updateTemplatesCollectionItem	genericpanel.cpp	/^QTreeWidgetItem *GenericPanel::updateTemplatesCollectionItem(QTreeWidgetItem *tbt_collection_qtwi, TitleBlockTemplatesCollection *tbt_collection, PanelOptions options, bool freshly_created) {$/;"	f	class:GenericPanel
updateTerminal	editor/terminaleditor.cpp	/^void TerminalEditor::updateTerminal() {$/;"	f	class:TerminalEditor
updateTerminalO	editor/terminaleditor.cpp	/^void TerminalEditor::updateTerminalO() { addChangePartCommand(tr("orientation"), part, "orientation", orientation -> itemData(orientation -> currentIndex())); }$/;"	f	class:TerminalEditor
updateTerminalX	editor/terminaleditor.cpp	/^void TerminalEditor::updateTerminalX() { addChangePartCommand(tr("abscisse"),    part, "x",           qle_x -> value()); }$/;"	f	class:TerminalEditor
updateTerminalY	editor/terminaleditor.cpp	/^void TerminalEditor::updateTerminalY() { addChangePartCommand(tr("ordonn\\351e"), part, "y",           qle_y -> value()); }$/;"	f	class:TerminalEditor
updateText	editor/texteditor.cpp	/^void TextEditor::updateText() {$/;"	f	class:TextEditor
updateText	titleblock/templatecommands.cpp	/^void CutTemplateCellsCommand::updateText() {$/;"	f	class:CutTemplateCellsCommand
updateText	titleblock/templatecommands.cpp	/^void ModifyTemplateDimension::updateText() {$/;"	f	class:ModifyTemplateDimension
updateText	titleblock/templatecommands.cpp	/^void ModifyTemplateGridCommand::updateText() {$/;"	f	class:ModifyTemplateGridCommand
updateText	titleblock/templatecommands.cpp	/^void PasteTemplateCellsCommand::updateText() {$/;"	f	class:PasteTemplateCellsCommand
updateTextC	editor/texteditor.cpp	/^void TextEditor::updateTextC() { addChangePartCommand(tr("couleur", "undo caption"), part, "color", color_ -> checkedId()); }$/;"	f	class:TextEditor
updateTextField	editor/textfieldeditor.cpp	/^void TextFieldEditor::updateTextField() {$/;"	f	class:TextFieldEditor
updateTextFieldR	editor/textfieldeditor.cpp	/^void TextFieldEditor::updateTextFieldR() { addChangePartCommand(tr("propri\\351t\\351"), part, "rotate", !rotate -> isChecked());     }$/;"	f	class:TextFieldEditor
updateTextFieldRotationAngle	editor/textfieldeditor.cpp	/^void TextFieldEditor::updateTextFieldRotationAngle() { addChangePartCommand(tr("angle de rotation"), part, "rotation_angle", rotation_angle_ -> value()); }$/;"	f	class:TextFieldEditor
updateTextFieldS	editor/textfieldeditor.cpp	/^void TextFieldEditor::updateTextFieldS() { addChangePartCommand(tr("taille"),          part, "size",   font_size -> value());       }$/;"	f	class:TextFieldEditor
updateTextFieldT	editor/textfieldeditor.cpp	/^void TextFieldEditor::updateTextFieldT() { addChangePartCommand(tr("contenu"),         part, "text",   qle_text -> text());         }$/;"	f	class:TextFieldEditor
updateTextFieldX	editor/textfieldeditor.cpp	/^void TextFieldEditor::updateTextFieldX() { addChangePartCommand(tr("abscisse"),        part, "x",      qle_x -> value()); }$/;"	f	class:TextFieldEditor
updateTextFieldY	editor/textfieldeditor.cpp	/^void TextFieldEditor::updateTextFieldY() { addChangePartCommand(tr("ordonn\\351e"),     part, "y",      qle_y -> value()); }$/;"	f	class:TextFieldEditor
updateTextRotationAngle	editor/texteditor.cpp	/^void TextEditor::updateTextRotationAngle() { addChangePartCommand(tr("angle de rotation"), part, "rotation", rotation_angle_ -> value()); }$/;"	f	class:TextEditor
updateTextS	editor/texteditor.cpp	/^void TextEditor::updateTextS() { addChangePartCommand(tr("taille"),      part, "size", font_size -> value());       }$/;"	f	class:TextEditor
updateTextT	editor/texteditor.cpp	/^void TextEditor::updateTextT() { addChangePartCommand(tr("contenu"),     part, "text", qle_text -> text());         }$/;"	f	class:TextEditor
updateTextX	editor/texteditor.cpp	/^void TextEditor::updateTextX() { addChangePartCommand(tr("abscisse"),    part, "x",    qle_x -> value()); }$/;"	f	class:TextEditor
updateTextY	editor/texteditor.cpp	/^void TextEditor::updateTextY() { addChangePartCommand(tr("ordonn\\351e"), part, "y",    qle_y -> value()); }$/;"	f	class:TextEditor
updateTotalWidthLabel	titleblock/templateview.cpp	/^void TitleBlockTemplateView::updateTotalWidthLabel() {$/;"	f	class:TitleBlockTemplateView
updateWindowTitle	diagramview.cpp	/^void DiagramView::updateWindowTitle() {$/;"	f	class:DiagramView
updateWindowTitle	projectview.cpp	/^void ProjectView::updateWindowTitle() {$/;"	f	class:ProjectView
updateZoomList	qetprintpreviewdialog.cpp	/^void QETPrintPreviewDialog::updateZoomList() {$/;"	f	class:QETPrintPreviewDialog
urlInput	richtext/ui_addlinkdialog.h	/^    QLineEdit *urlInput;$/;"	m	class:Ui_AddLinkDialog
urlInput	ui/ui_addlinkdialog.h	/^    QLineEdit *urlInput;$/;"	m	class:Ui_AddLinkDialog
usableTexts	qtextorientationwidget.cpp	/^QStringList QTextOrientationWidget::usableTexts() const {$/;"	f	class:QTextOrientationWidget
useBorder	diagram.h	/^inline bool Diagram::useBorder() {$/;"	f	class:Diagram
useCache	titleblocktemplaterenderer.cpp	/^bool TitleBlockTemplateRenderer::useCache() const {$/;"	f	class:TitleBlockTemplateRenderer
useDate	titleblockproperties.h	/^	DateManagement useDate;   \/\/\/< Wheter to use the date attribute$/;"	m	class:TitleBlockProperties
useFullPage	qetprintpreviewdialog.cpp	/^void QETPrintPreviewDialog::useFullPage(bool full_page) {$/;"	f	class:QETPrintPreviewDialog
useSystemPalette	qetapp.cpp	/^void QETApp::useSystemPalette (bool use)$/;"	f	class:QETApp
use_border_	diagram.h	/^		bool use_border_;$/;"	m	class:Diagram
use_cache_	titleblocktemplaterenderer.h	/^	bool use_cache_;$/;"	m	class:TitleBlockTemplateRenderer
use_existing_elmt_	integrationmoveelementshandler.h	/^	QRadioButton *use_existing_elmt_;$/;"	m	class:IntegrationMoveElementsHandler
use_existing_template_	titleblock/integrationmovetemplateshandler.h	/^	QRadioButton *use_existing_template_;    \/\/\/< Radio button the user may click to use the existing template and stop the integration$/;"	m	class:IntegrationMoveTitleBlockTemplatesHandler
use_full_page_	qetprintpreviewdialog.h	/^	QCheckBox *use_full_page_;$/;"	m	class:QETPrintPreviewDialog
use_full_page_label_	qetprintpreviewdialog.h	/^	QLabel *use_full_page_label_;$/;"	m	class:QETPrintPreviewDialog
use_system_colors_	configpages.h	/^	QCheckBox *use_system_colors_;$/;"	m	class:GeneralConfigurationPage
use_trackpad_	configpages.h	/^	QCheckBox *use_trackpad_;$/;"	m	class:GeneralConfigurationPage
usedTitleBlockTemplateChanged	qetproject.cpp	/^void QETProject::usedTitleBlockTemplateChanged(const QString &template_name) {$/;"	f	class:QETProject
userName	qetapp.cpp	/^QString QETApp::userName()$/;"	f	class:QETApp
usesElement	diagram.cpp	/^bool Diagram::usesElement(const ElementsLocation &location) {$/;"	f	class:Diagram
usesElement	qetproject.cpp	/^bool QETProject::usesElement(const ElementsLocation &location) {$/;"	f	class:QETProject
usesTitleBlockTemplate	diagram.cpp	/^bool Diagram::usesTitleBlockTemplate(const QString &name) {$/;"	f	class:Diagram
usesTitleBlockTemplate	qetproject.cpp	/^bool QETProject::usesTitleBlockTemplate(const TitleBlockTemplateLocation &location) {$/;"	f	class:QETProject
uses_offset	editor/editorcommands.h	/^	bool uses_offset;$/;"	m	class:PastePartsCommand
uuid	qetgraphicsitem/element.h	/^inline QUuid Element::uuid() const {$/;"	f	class:Element
uuid_	qetgraphicsitem/element.h	/^		QUuid             uuid_;$/;"	m	class:Element
v	editor/arceditor.h	/^	QDoubleSpinBox *x, *y, *h, *v;$/;"	m	class:ArcEditor
v	editor/ellipseeditor.h	/^	QDoubleSpinBox *x, *y, *h, *v;$/;"	m	class:EllipseEditor
validColumn	editor/polygoneditor.cpp	/^void PolygonEditor::validColumn(QTreeWidgetItem *qtwi, int column) {$/;"	f	class:PolygonEditor
validKeyRegExp	diagramcontext.cpp	/^QString DiagramContext::validKeyRegExp() {$/;"	f	class:DiagramContext
validOrientationAttribute	qetgraphicsitem/customelement.cpp	/^bool CustomElement::validOrientationAttribute(const QDomElement &e) {$/;"	f	class:CustomElement
validRegExpNum	numerotationcontext.cpp	/^QString NumerotationContext::validRegExpNum () const {$/;"	f	class:NumerotationContext
validRegExpNumber	numerotationcontext.cpp	/^QString NumerotationContext::validRegExpNumber() const {$/;"	f	class:NumerotationContext
validStep1	newelementwizard.cpp	/^bool NewElementWizard::validStep1() {$/;"	f	class:NewElementWizard
validStep2	newelementwizard.cpp	/^bool NewElementWizard::validStep2() {$/;"	f	class:NewElementWizard
validate	qetregexpvalidator.cpp	/^QValidator::State QETRegExpValidator::validate(QString &input, int &pos) const {$/;"	f	class:QETRegExpValidator
validateCurrentPage	newelementwizard.cpp	/^bool NewElementWizard::validateCurrentPage() {$/;"	f	class:NewElementWizard
validationFailed	qfilenameedit.cpp	/^void QFileNameEdit::validationFailed() {$/;"	f	class:QFileNameEdit
validator_	qfilenameedit.h	/^	QETRegExpValidator *validator_;$/;"	m	class:QFileNameEdit
valideXml	qetgraphicsitem/conductor.cpp	/^bool Conductor::valideXml(QDomElement &e){$/;"	f	class:Conductor
valideXml	qetgraphicsitem/element.cpp	/^bool Element::valideXml(QDomElement &e) {$/;"	f	class:Element
valideXml	qetgraphicsitem/terminal.cpp	/^bool Terminal::valideXml(QDomElement &terminal) {$/;"	f	class:Terminal
value	qtextorientationspinboxwidget.cpp	/^double QTextOrientationSpinBoxWidget::value() const {$/;"	f	class:QTextOrientationSpinBoxWidget
value	titleblock/dimension.h	/^	int value;                        \/\/\/< Numeric value$/;"	m	struct:TitleBlockDimension
value	titleblock/dimensionwidget.cpp	/^TitleBlockDimension TitleBlockDimensionWidget::value() const {$/;"	f	class:TitleBlockDimensionWidget
value	titleblockcell.h	/^	NamesList value;                   \/\/\/< Text displayed by the cell$/;"	m	class:TitleBlockCell
valueForItem	genericpanel.cpp	/^T GenericPanel::valueForItem(QTreeWidgetItem *item) const {$/;"	f	class:GenericPanel
value_edit_	titleblock/templatecellwidget.h	/^	QPushButton   *value_edit_;$/;"	m	class:TitleBlockTemplateCellWidget
value_field	ui/ui_numparteditorw.h	/^    QLineEdit *value_field;$/;"	m	class:Ui_NumPartEditorW
value_input_	titleblock/templatecellwidget.h	/^	QLineEdit     *value_input_;$/;"	m	class:TitleBlockTemplateCellWidget
value_label	ui/ui_selectautonumw.h	/^    QLabel *value_label;$/;"	m	class:Ui_SelectAutonumW
value_label_	titleblock/templatecellwidget.h	/^	QLabel        *value_label_;$/;"	m	class:TitleBlockTemplateCellWidget
value_name	titleblockcell.h	/^	QString value_name;                \/\/\/< name of the cell; not displayed when the title block template is rendered$/;"	m	class:TitleBlockCell
variableShape	qetgraphicsitem/conductor.cpp	/^QPainterPath Conductor::variableShape(const qreal &thickness) const {$/;"	f	class:Conductor
vectorLogo	titleblocktemplate.cpp	/^QSvgRenderer *TitleBlockTemplate::vectorLogo(const QString &logo_name) const {$/;"	f	class:TitleBlockTemplate
vector_logos_	titleblocktemplate.h	/^	QHash<QString, QSvgRenderer *> vector_logos_;    \/\/\/< Rendered objects for vector logos$/;"	m	class:TitleBlockTemplate
version	qet.h	/^	const QString version = "0.4";$/;"	m	namespace:QET
vert_align_indexes_	titleblock/templatecellwidget.h	/^	QHash<int, int> vert_align_indexes_;$/;"	m	class:TitleBlockTemplateCellWidget
vert_align_input_	titleblock/templatecellwidget.h	/^	QComboBox     *vert_align_input_;$/;"	m	class:TitleBlockTemplateCellWidget
vert_align_label_	titleblock/templatecellwidget.h	/^	QLabel        *vert_align_label_;$/;"	m	class:TitleBlockTemplateCellWidget
verti_rotate_text	conductorproperties.h	/^	double verti_rotate_text;$/;"	m	class:ConductorProperties
verticalAlign	titleblockcell.cpp	/^int TitleBlockCell::verticalAlign() const {$/;"	f	class:TitleBlockCell
verticalAlignment	titleblock/templatecellwidget.cpp	/^int TitleBlockTemplateCellWidget::verticalAlignment() const {$/;"	f	class:TitleBlockTemplateCellWidget
verticalLayout	richtext/ui_addlinkdialog.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_AddLinkDialog
verticalLayout	ui/ui_addlinkdialog.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_AddLinkDialog
verticalLayout	ui/ui_borderpropertieswidget.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_BorderPropertiesWidget
verticalLayout	ui/ui_conductorpropertieswidget.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_ConductorPropertiesWidget
verticalLayout	ui/ui_diagramselection.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_diagramselection
verticalLayout	ui/ui_dialogautonum.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_DialogAutoNum
verticalLayout	ui/ui_dialogwaiting.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_DialogWaiting
verticalLayout	ui/ui_elementinfowidget.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_ElementInfoWidget
verticalLayout	ui/ui_elementpropertieseditorwidget.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_ElementPropertiesEditorWidget
verticalLayout	ui/ui_elementselectorwidget.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_ElementSelectorWidget
verticalLayout	ui/ui_potentialtextsdialog.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_PotentialTextsDialog
verticalLayout	ui/ui_reportpropertiewidget.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_ReportPropertieWidget
verticalLayout	ui/ui_selectautonumw.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_SelectAutonumW
verticalLayout	ui/ui_titleblockpropertieswidget.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_TitleBlockPropertiesWidget
verticalLayout	ui/ui_xrefpropertieswidget.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_XRefPropertiesWidget
verticalLayout_2	ui/ui_conductorpropertieswidget.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_ConductorPropertiesWidget
verticalLayout_2	ui/ui_diagramselection.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_diagramselection
verticalLayout_2	ui/ui_dialogautonum.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_DialogAutoNum
verticalLayout_2	ui/ui_dialogwaiting.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_DialogWaiting
verticalLayout_2	ui/ui_elementpropertieseditorwidget.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_ElementPropertiesEditorWidget
verticalLayout_2	ui/ui_reportpropertiewidget.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_ReportPropertieWidget
verticalLayout_2	ui/ui_titleblockpropertieswidget.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_TitleBlockPropertiesWidget
verticalLayout_2	ui/ui_xrefpropertieswidget.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_XRefPropertiesWidget
verticalLayout_3	ui/ui_conductorpropertieswidget.h	/^    QVBoxLayout *verticalLayout_3;$/;"	m	class:Ui_ConductorPropertiesWidget
verticalLayout_3	ui/ui_dialogautonum.h	/^    QVBoxLayout *verticalLayout_3;$/;"	m	class:Ui_DialogAutoNum
verticalLayout_3	ui/ui_potentialtextsdialog.h	/^    QVBoxLayout *verticalLayout_3;$/;"	m	class:Ui_PotentialTextsDialog
verticalLayout_3	ui/ui_reportpropertiewidget.h	/^    QVBoxLayout *verticalLayout_3;$/;"	m	class:Ui_ReportPropertieWidget
verticalLayout_3	ui/ui_selectautonumw.h	/^    QVBoxLayout *verticalLayout_3;$/;"	m	class:Ui_SelectAutonumW
verticalLayout_3	ui/ui_titleblockpropertieswidget.h	/^    QVBoxLayout *verticalLayout_3;$/;"	m	class:Ui_TitleBlockPropertiesWidget
verticalLayout_3	ui/ui_xrefpropertieswidget.h	/^    QVBoxLayout *verticalLayout_3;$/;"	m	class:Ui_XRefPropertiesWidget
verticalLayout_4	ui/ui_conductorpropertieswidget.h	/^    QVBoxLayout *verticalLayout_4;$/;"	m	class:Ui_ConductorPropertiesWidget
verticalLayout_4	ui/ui_dialogautonum.h	/^    QVBoxLayout *verticalLayout_4;$/;"	m	class:Ui_DialogAutoNum
verticalLayout_4	ui/ui_titleblockpropertieswidget.h	/^    QVBoxLayout *verticalLayout_4;$/;"	m	class:Ui_TitleBlockPropertiesWidget
verticalLayout_4	ui/ui_xrefpropertieswidget.h	/^    QVBoxLayout *verticalLayout_4;$/;"	m	class:Ui_XRefPropertiesWidget
verticalLayout_6	ui/ui_dialogautonum.h	/^    QVBoxLayout *verticalLayout_6;$/;"	m	class:Ui_DialogAutoNum
verticalLayout_Selection	ui/ui_dialogautonum.h	/^    QVBoxLayout *verticalLayout_Selection;$/;"	m	class:Ui_DialogAutoNum
verticalPagesCount	diagramprintdialog.cpp	/^int DiagramPrintDialog::verticalPagesCount(Diagram *diagram, const ExportProperties &options, bool fullpage) const {$/;"	f	class:DiagramPrintDialog
verticalSegments	conductorprofile.cpp	/^QList<ConductorSegmentProfile *> ConductorProfile::verticalSegments() {$/;"	f	class:ConductorProfile
verticalSpacer	richtext/ui_addlinkdialog.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_AddLinkDialog
verticalSpacer	ui/ui_addlinkdialog.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_AddLinkDialog
verticalSpacer	ui/ui_conductorpropertiesdialog.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_ConductorPropertiesDialog
verticalSpacer	ui/ui_dialogwaiting.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_DialogWaiting
verticalSpacer	ui/ui_elementpropertieseditorwidget.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_ElementPropertiesEditorWidget
verticalSpacer	ui/ui_elementselectorwidget.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_ElementSelectorWidget
verticalSpacer	ui/ui_masterpropertieswidget.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_MasterPropertiesWidget
verticalSpacer	ui/ui_potentialtextsdialog.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_PotentialTextsDialog
verticalSpacer	ui/ui_reportpropertiewidget.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_ReportPropertieWidget
verticalSpacer	ui/ui_selectautonumw.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_SelectAutonumW
verticalSpacer	ui/ui_xrefpropertieswidget.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_XRefPropertiesWidget
verticalSpacer_2	ui/ui_masterpropertieswidget.h	/^    QSpacerItem *verticalSpacer_2;$/;"	m	class:Ui_MasterPropertiesWidget
view	titleblock/templatecommands.cpp	/^TitleBlockTemplateView *ModifyTitleBlockCellCommand::view() const {$/;"	f	class:ModifyTitleBlockCellCommand
view	titleblock/templatecommands.cpp	/^TitleBlockTemplateView *TitleBlockTemplateCommand::view() const {$/;"	f	class:TitleBlockTemplateCommand
viewForFile	qetdiagrameditor.cpp	/^ProjectView *QETDiagramEditor::viewForFile(const QString &filepath) const {$/;"	f	class:QETDiagramEditor
view_	titleblock/templatecommands.h	/^	TitleBlockTemplateView *view_;        \/\/\/< This class may trigger a view update$/;"	m	class:ModifyTitleBlockCellCommand
view_	titleblock/templatecommands.h	/^	TitleBlockTemplateView *view_;   \/\/\/< This class may trigger a view update$/;"	m	class:TitleBlockTemplateCommand
view_bar	qetdiagrameditor.h	/^		QToolBar *view_bar;$/;"	m	class:QETDiagramEditor
view_toolbar	editor/qetelementeditor.h	/^	QToolBar *parts_toolbar, *main_toolbar, *view_toolbar, *depth_toolbar, *element_toolbar;$/;"	m	class:QETElementEditor
viewedSceneRect	diagramview.cpp	/^QRectF DiagramView::viewedSceneRect() const {$/;"	f	class:DiagramView
viewedSceneRect	editor/elementview.cpp	/^QRectF ElementView::viewedSceneRect() const {$/;"	f	class:ElementView
virtualPath	elementscollection.cpp	/^QString ElementsCollection::virtualPath() {$/;"	f	class:ElementsCollection
virtualPath	fileelementdefinition.cpp	/^QString FileElementDefinition::virtualPath() {$/;"	f	class:FileElementDefinition
virtualPath	fileelementscategory.cpp	/^QString FileElementsCategory::virtualPath() {$/;"	f	class:FileElementsCategory
virtualPath	xmlelementdefinition.cpp	/^QString XmlElementDefinition::virtualPath() {$/;"	f	class:XmlElementDefinition
virtualPath	xmlelementscategory.cpp	/^QString XmlElementsCategory::virtualPath() {$/;"	f	class:XmlElementsCategory
vlayout0_	diagramprintdialog.h	/^	QVBoxLayout *vlayout0_;$/;"	m	class:DiagramPrintDialog
vlayout0_	diagramschooser.h	/^	QVBoxLayout *vlayout0_;$/;"	m	class:DiagramsChooser
vlayout0_	qetprintpreviewdialog.h	/^	QVBoxLayout *vlayout0_;$/;"	m	class:QETPrintPreviewDialog
vlayout0_	titleblock/templatelogomanager.h	/^	QVBoxLayout *vlayout0_, *vlayout1_;    \/\/\/< vertical layouts$/;"	m	class:TitleBlockTemplateLogoManager
vlayout1_	qetprintpreviewdialog.h	/^	QVBoxLayout *vlayout1_;$/;"	m	class:QETPrintPreviewDialog
vlayout1_	titleblock/templatelogomanager.h	/^	QVBoxLayout *vlayout0_, *vlayout1_;    \/\/\/< vertical layouts$/;"	m	class:TitleBlockTemplateLogoManager
vlayout2_	qetprintpreviewdialog.h	/^	QVBoxLayout *vlayout2_;$/;"	m	class:QETPrintPreviewDialog
w	editor/rectangleeditor.h	/^	QDoubleSpinBox *x, *y, *w, *h;$/;"	m	class:RectangleEditor
warning	qetmessagebox.cpp	/^QMessageBox::StandardButton QET::MessageBox::warning    (QWidget *parent, const QString &title, const QString &text, QMessageBox::StandardButtons buttons, QMessageBox::StandardButton defaultButton) {$/;"	f	class:QET::MessageBox
warningColor	qetgraphicsitem/terminal.cpp	/^QColor Terminal::warningColor      = QColor("#ff8000");$/;"	m	class:Terminal	file:
warningColor	qetgraphicsitem/terminal.h	/^	static QColor warningColor;$/;"	m	class:Terminal
warning_view_mode_	configpages.h	/^	QLabel *warning_view_mode_;$/;"	m	class:GeneralConfigurationPage
wasCopiedFromThisElement	editor/elementscene.cpp	/^bool ElementScene::wasCopiedFromThisElement(const QString &clipboard_content) {$/;"	f	class:ElementScene
wasMovedByUser	qetgraphicsitem/conductortextitem.cpp	/^bool ConductorTextItem::wasMovedByUser() const {$/;"	f	class:ConductorTextItem
wasRotateByUser	qetgraphicsitem/conductortextitem.cpp	/^bool ConductorTextItem::wasRotateByUser() const {$/;"	f	class:ConductorTextItem
wasWritten	diagram.cpp	/^bool Diagram::wasWritten() const {$/;"	f	class:Diagram
watcher_	titleblock/templatescollection.h	/^	QFileSystemWatcher watcher_;$/;"	m	class:TitleBlockTemplatesFilesCollection
west	orientationset.h	/^inline bool OrientationSet::west() const {$/;"	f	class:OrientationSet
west_ori	orientationset.h	/^	bool west_ori;$/;"	m	class:OrientationSet
whatsthis_action_	qetmainwindow.h	/^	QAction *whatsthis_action_;              \/\/\/< Toggle "What's this" mode$/;"	m	class:QETMainWindow
wheelEvent	diagramview.cpp	/^void DiagramView::wheelEvent(QWheelEvent *e) {$/;"	f	class:DiagramView
wheelEvent	dvevent/dveventaddimage.cpp	/^bool DVEventAddImage::wheelEvent(QWheelEvent *event) {$/;"	f	class:DVEventAddImage
wheelEvent	dvevent/dveventinterface.cpp	/^bool DVEventInterface::wheelEvent(QWheelEvent *event) {$/;"	f	class:DVEventInterface
wheelEvent	editor/elementview.cpp	/^void ElementView::wheelEvent(QWheelEvent *e) {$/;"	f	class:ElementView
wheelEvent	editor/esevent/eseventinterface.cpp	/^bool ESEventInterface::wheelEvent(QGraphicsSceneWheelEvent *event) {$/;"	f	class:ESEventInterface
wheelEvent	qettabbar.cpp	/^void QETTabBar::wheelEvent(QWheelEvent *event) {$/;"	f	class:QETTabBar
wheelEvent	qettabwidget.cpp	/^void QETTabWidget::wheelEvent(QWheelEvent *event) {$/;"	f	class:QETTabWidget
wheelEvent	titleblock/templateview.cpp	/^void TitleBlockTemplateView::wheelEvent(QWheelEvent *e) {$/;"	f	class:TitleBlockTemplateView
white_color	editor/styleeditor.h	/^		QRadioButton *black_color, *white_color,  *normal_style, *dashed_style, *dashdotted_style, *dotted_style, *green_color, *red_color, *blue_color;$/;"	m	class:StyleEditor
white_color_	editor/texteditor.h	/^	QRadioButton *black_color_, *white_color_;$/;"	m	class:TextEditor
white_filling	editor/styleeditor.h	/^		QRadioButton *black_filling, *white_filling, *green_filling, *red_filling, *blue_filling;$/;"	m	class:StyleEditor
widget0_	diagramschooser.h	/^	QWidget *widget0_;$/;"	m	class:DiagramsChooser
width	conductorprofile.cpp	/^qreal ConductorProfile::width() const {$/;"	f	class:ConductorProfile
width	editor/graphicspart/abstractpartellipse.h	/^		qreal width() const {return rect().width();}$/;"	f	class:AbstractPartEllipse
width	editor/graphicspart/partrectangle.h	/^		qreal width    () const {return rect().width();}$/;"	f	class:PartRectangle
width	exportdialog.h	/^		QSpinBox *width;$/;"	m	class:ExportDialog::ExportDiagramLine
width	titleblocktemplate.cpp	/^int TitleBlockTemplate::width(int total_width) {$/;"	f	class:TitleBlockTemplate
width_mapper_	exportdialog.h	/^	QSignalMapper *width_mapper_;$/;"	m	class:ExportDialog
windowMapper	qetdiagrameditor.h	/^		QSignalMapper windowMapper;$/;"	m	class:QETDiagramEditor
window_geometries	qetapp.h	/^	QHash<QMainWindow *, QByteArray> window_geometries;$/;"	m	class:QETApp
window_states	qetapp.h	/^	QHash<QMainWindow *, QByteArray> window_states;$/;"	m	class:QETApp
windowed_mode_	configpages.h	/^	QRadioButton *windowed_mode_;$/;"	m	class:GeneralConfigurationPage
windowed_view_mode	qetdiagrameditor.h	/^		QAction *windowed_view_mode; \/\/\/< Display projects as windows$/;"	m	class:QETDiagramEditor
windows_menu	qetdiagrameditor.h	/^		QMenu *windows_menu;$/;"	m	class:QETDiagramEditor
workspace	qetdiagrameditor.h	/^		QMdiArea workspace;$/;"	m	class:QETDiagramEditor
writableSelectedCategory	elementspanelwidget.cpp	/^ElementsCategory *ElementsPanelWidget::writableSelectedCategory() {$/;"	f	class:ElementsPanelWidget
write	diagram.cpp	/^void Diagram::write() {$/;"	f	class:Diagram
write	diagram.cpp	/^void Diagram::write(const QDomElement &element) {$/;"	f	class:Diagram
write	fileelementdefinition.cpp	/^bool FileElementDefinition::write() {$/;"	f	class:FileElementDefinition
write	fileelementscategory.cpp	/^bool FileElementsCategory::write() {$/;"	f	class:FileElementsCategory
write	fileelementscollection.cpp	/^bool FileElementsCollection::write() {$/;"	f	class:FileElementsCollection
write	qetproject.cpp	/^QETResult QETProject::write() {$/;"	f	class:QETProject
write	xmlelementdefinition.cpp	/^bool XmlElementDefinition::write() {$/;"	f	class:XmlElementDefinition
write	xmlelementscategory.cpp	/^bool XmlElementsCategory::write() {$/;"	f	class:XmlElementsCategory
write	xmlelementscollection.cpp	/^bool XmlElementsCollection::write() {$/;"	f	class:XmlElementsCollection
writeDefaultPropertiesXml	qetproject.cpp	/^void QETProject::writeDefaultPropertiesXml(QDomElement &xml_element) {$/;"	f	class:QETProject
writeProjectPropertiesXml	qetproject.cpp	/^void QETProject::writeProjectPropertiesXml(QDomElement &xml_element) {$/;"	f	class:QETProject
writeSettings	editor/qetelementeditor.cpp	/^void QETElementEditor::writeSettings() {$/;"	f	class:QETElementEditor
writeSettings	qetdiagrameditor.cpp	/^void QETDiagramEditor::writeSettings() {$/;"	f	class:QETDiagramEditor
writeSettings	titleblock/qettemplateeditor.cpp	/^void QETTitleBlockTemplateEditor::writeSettings() {$/;"	f	class:QETTitleBlockTemplateEditor
writeStyle	conductorproperties.cpp	/^QString ConductorProperties::writeStyle() const {$/;"	f	class:ConductorProperties
writeXml	diagram.cpp	/^QDomElement Diagram::writeXml(QDomDocument &xml_doc) const {$/;"	f	class:Diagram
writeXml	xmlelementdefinition.cpp	/^QDomElement XmlElementDefinition::writeXml(QDomDocument &xml_doc) const {$/;"	f	class:XmlElementDefinition
writeXml	xmlelementscategory.cpp	/^QDomElement XmlElementsCategory::writeXml(QDomDocument &xml_doc) const {$/;"	f	class:XmlElementsCategory
writeXml	xmlelementscollection.cpp	/^QDomElement XmlElementsCollection::writeXml(QDomDocument &xml_doc) const {$/;"	f	class:XmlElementsCollection
writeXmlFile	qet.cpp	/^bool QET::writeXmlFile(QDomDocument &xml_doc, const QString &filepath, QString *error_message) {$/;"	f	class:QET
x	editor/arceditor.h	/^	QDoubleSpinBox *x, *y, *h, *v;$/;"	m	class:ArcEditor
x	editor/ellipseeditor.h	/^	QDoubleSpinBox *x, *y, *h, *v;$/;"	m	class:EllipseEditor
x	editor/rectangleeditor.h	/^	QDoubleSpinBox *x, *y, *w, *h;$/;"	m	class:RectangleEditor
x1	editor/lineeditor.h	/^		QDoubleSpinBox *x1, *y1, *x2, *y2;$/;"	m	class:LineEditor
x2	editor/lineeditor.h	/^		QDoubleSpinBox *x1, *y1, *x2, *y2;$/;"	m	class:LineEditor
xGrid	diagram.cpp	/^const int   Diagram::xGrid  = 10;$/;"	m	class:Diagram	file:
xGrid	diagram.h	/^		static const int xGrid;$/;"	m	class:Diagram
xGrid	editor/elementscene.cpp	/^int ElementScene::xGrid() const {$/;"	f	class:ElementScene
xScale	createdxf.cpp	/^double Createdxf::xScale = 1;$/;"	m	class:Createdxf	file:
xScale	createdxf.h	/^	static double		xScale;$/;"	m	class:Createdxf
x_grid	editor/elementscene.h	/^		int x_grid;$/;"	m	class:ElementScene
x_label	exportdialog.h	/^		QLabel *x_label;$/;"	m	class:ExportDialog::ExportDiagramLine
xml	fileelementdefinition.cpp	/^QDomElement FileElementDefinition::xml() {$/;"	f	class:FileElementDefinition
xml	xmlelementdefinition.cpp	/^QDomElement XmlElementDefinition::xml() {$/;"	f	class:XmlElementDefinition
xmlName	editor/graphicspart/partarc.h	/^		virtual QString xmlName() const { return(QString("arc")); }$/;"	f	class:PartArc
xmlName	editor/graphicspart/partellipse.h	/^		virtual QString xmlName() const { return(QString("ellipse")); }$/;"	f	class:PartEllipse
xmlName	editor/graphicspart/partline.h	/^		virtual QString xmlName() const { return(QString("line")); }$/;"	f	class:PartLine
xmlName	editor/graphicspart/partpolygon.h	/^		virtual QString xmlName() const { return(QString("polygon")); }$/;"	f	class:PartPolygon
xmlName	editor/graphicspart/partrectangle.h	/^		virtual QString           xmlName () const { return(QString("rect")); }$/;"	f	class:PartRectangle
xmlName	editor/graphicspart/partterminal.h	/^		virtual QString xmlName() const { return(QString("terminal")); }$/;"	f	class:PartTerminal
xmlName	editor/graphicspart/parttext.h	/^	virtual QString xmlName() const { return(QString("text")); }$/;"	f	class:PartText
xmlName	editor/graphicspart/parttextfield.h	/^	virtual QString xmlName() const { return(QString("input")); }$/;"	f	class:PartTextField
xmlPreview	editor/qetelementeditor.cpp	/^void QETElementEditor::xmlPreview() {$/;"	f	class:QETElementEditor
xml_document_	diagram.h	/^		QDomDocument xml_document_;$/;"	m	class:Diagram
xml_document_	titleblock/templatescollection.h	/^	QDomDocument xml_document_;$/;"	m	class:TitleBlockTemplatesProjectCollection
xml_element_	fileelementdefinition.h	/^	QDomDocument xml_element_;$/;"	m	class:FileElementDefinition
xml_element_	xmlelementdefinition.h	/^	QDomDocument xml_element_;$/;"	m	class:XmlElementDefinition
xml_element_	xmlelementscategory.h	/^	QDomDocument xml_element_;$/;"	m	class:XmlElementsCategory
xml_parent_category_	xmlelementscategory.h	/^	XmlElementsCategory   *xml_parent_category_;$/;"	m	class:XmlElementsCategory
xml_parent_collection_	xmlelementscategory.h	/^	XmlElementsCollection *xml_parent_collection_;$/;"	m	class:XmlElementsCategory
xrefpw	configpages.h	/^	XRefPropertiesWidget       *xrefpw;	   \/\/\/< Widget to edit default xref properties$/;"	m	class:NewDiagramPage
y	editor/arceditor.h	/^	QDoubleSpinBox *x, *y, *h, *v;$/;"	m	class:ArcEditor
y	editor/ellipseeditor.h	/^	QDoubleSpinBox *x, *y, *h, *v;$/;"	m	class:EllipseEditor
y	editor/rectangleeditor.h	/^	QDoubleSpinBox *x, *y, *w, *h;$/;"	m	class:RectangleEditor
y1	editor/lineeditor.h	/^		QDoubleSpinBox *x1, *y1, *x2, *y2;$/;"	m	class:LineEditor
y2	editor/lineeditor.h	/^		QDoubleSpinBox *x1, *y1, *x2, *y2;$/;"	m	class:LineEditor
yGrid	diagram.cpp	/^const int   Diagram::yGrid  = 10;$/;"	m	class:Diagram	file:
yGrid	diagram.h	/^		static const int yGrid;$/;"	m	class:Diagram
yGrid	editor/elementscene.cpp	/^int ElementScene::yGrid() const {$/;"	f	class:ElementScene
yScale	createdxf.cpp	/^double Createdxf::yScale = 1;$/;"	m	class:Createdxf	file:
yScale	createdxf.h	/^	static double		yScale;$/;"	m	class:Createdxf
y_grid	editor/elementscene.h	/^		int y_grid;$/;"	m	class:ElementScene
zItems	editor/elementscene.cpp	/^QList<QGraphicsItem *> ElementScene::zItems(ItemOptions options) const {$/;"	f	class:ElementScene
zValueLessThan	editor/elementscene.cpp	/^bool ElementScene::zValueLessThan(QGraphicsItem *item1, QGraphicsItem *item2) {$/;"	f	class:ElementScene
zoomContent	diagramview.cpp	/^void DiagramView::zoomContent() {$/;"	f	class:DiagramView
zoomFactor	titleblock/templateview.cpp	/^qreal TitleBlockTemplateView::zoomFactor() const {$/;"	f	class:TitleBlockTemplateView
zoomFit	diagramview.cpp	/^void DiagramView::zoomFit() {$/;"	f	class:DiagramView
zoomFit	editor/elementview.cpp	/^void ElementView::zoomFit() {$/;"	f	class:ElementView
zoomFit	titleblock/templateview.cpp	/^void TitleBlockTemplateView::zoomFit() {$/;"	f	class:TitleBlockTemplateView
zoomIn	diagramview.cpp	/^void DiagramView::zoomIn() {$/;"	f	class:DiagramView
zoomIn	editor/elementview.cpp	/^void ElementView::zoomIn() {$/;"	f	class:ElementView
zoomIn	qetprintpreviewdialog.cpp	/^void QETPrintPreviewDialog::zoomIn() {$/;"	f	class:QETPrintPreviewDialog
zoomIn	titleblock/templateview.cpp	/^void TitleBlockTemplateView::zoomIn() {$/;"	f	class:TitleBlockTemplateView
zoomInSlowly	diagramview.cpp	/^void DiagramView::zoomInSlowly() {$/;"	f	class:DiagramView
zoomInSlowly	editor/elementview.cpp	/^void ElementView::zoomInSlowly() {$/;"	f	class:ElementView
zoomOut	diagramview.cpp	/^void DiagramView::zoomOut() {$/;"	f	class:DiagramView
zoomOut	editor/elementview.cpp	/^void ElementView::zoomOut() {$/;"	f	class:ElementView
zoomOut	qetprintpreviewdialog.cpp	/^void QETPrintPreviewDialog::zoomOut() {$/;"	f	class:QETPrintPreviewDialog
zoomOut	titleblock/templateview.cpp	/^void TitleBlockTemplateView::zoomOut() {$/;"	f	class:TitleBlockTemplateView
zoomOutSlowly	diagramview.cpp	/^void DiagramView::zoomOutSlowly() {$/;"	f	class:DiagramView
zoomOutSlowly	editor/elementview.cpp	/^void ElementView::zoomOutSlowly() {$/;"	f	class:ElementView
zoomReset	diagramview.cpp	/^void DiagramView::zoomReset() {$/;"	f	class:DiagramView
zoomReset	editor/elementview.cpp	/^void ElementView::zoomReset() {$/;"	f	class:ElementView
zoomReset	titleblock/templateview.cpp	/^void TitleBlockTemplateView::zoomReset() {$/;"	f	class:TitleBlockTemplateView
zoom_box_	qetprintpreviewdialog.h	/^	QComboBox *zoom_box_;$/;"	m	class:QETPrintPreviewDialog
zoom_fit_	titleblock/qettemplateeditor.h	/^	QAction *zoom_in_, *zoom_out_, *zoom_fit_, *zoom_reset_;$/;"	m	class:QETTitleBlockTemplateEditor
zoom_in_	qetprintpreviewdialog.h	/^	QAction *zoom_in_;$/;"	m	class:QETPrintPreviewDialog
zoom_in_	titleblock/qettemplateeditor.h	/^	QAction *zoom_in_, *zoom_out_, *zoom_fit_, *zoom_reset_;$/;"	m	class:QETTitleBlockTemplateEditor
zoom_out_	qetprintpreviewdialog.h	/^	QAction *zoom_out_;$/;"	m	class:QETPrintPreviewDialog
zoom_out_	titleblock/qettemplateeditor.h	/^	QAction *zoom_in_, *zoom_out_, *zoom_fit_, *zoom_reset_;$/;"	m	class:QETTitleBlockTemplateEditor
zoom_reset_	titleblock/qettemplateeditor.h	/^	QAction *zoom_in_, *zoom_out_, *zoom_fit_, *zoom_reset_;$/;"	m	class:QETTitleBlockTemplateEditor
~AboutQET	aboutqet.cpp	/^AboutQET::~AboutQET() {$/;"	f	class:AboutQET
~AbstractPartEllipse	editor/graphicspart/abstractpartellipse.cpp	/^AbstractPartEllipse::~AbstractPartEllipse() {}$/;"	f	class:AbstractPartEllipse
~AddItemCommand	diagramcommands.h	/^		virtual ~AddItemCommand() {$/;"	f	class:AddItemCommand
~AddLinkDialog	richtext/richtexteditor.cpp	/^AddLinkDialog::~AddLinkDialog()$/;"	f	class:qdesigner_internal::AddLinkDialog
~AddPartCommand	editor/editorcommands.cpp	/^AddPartCommand::~AddPartCommand() {$/;"	f	class:AddPartCommand
~ArcEditor	editor/arceditor.cpp	/^ArcEditor::~ArcEditor() {$/;"	f	class:ArcEditor
~AutonumSelectorWidget	ui/autonumselectorwidget.cpp	/^AutonumSelectorWidget::~AutonumSelectorWidget() {$/;"	f	class:AutonumSelectorWidget
~BasicMoveElementsHandler	basicmoveelementshandler.cpp	/^BasicMoveElementsHandler::~BasicMoveElementsHandler() {$/;"	f	class:BasicMoveElementsHandler
~BorderProperties	borderproperties.cpp	/^BorderProperties::~BorderProperties() {$/;"	f	class:BorderProperties
~BorderPropertiesWidget	ui/borderpropertieswidget.cpp	/^BorderPropertiesWidget::~BorderPropertiesWidget()$/;"	f	class:BorderPropertiesWidget
~BorderTitleBlock	bordertitleblock.cpp	/^BorderTitleBlock::~BorderTitleBlock() {$/;"	f	class:BorderTitleBlock
~ChangeBorderCommand	diagramcommands.cpp	/^ChangeBorderCommand::~ChangeBorderCommand() {$/;"	f	class:ChangeBorderCommand
~ChangeConductorCommand	diagramcommands.cpp	/^ChangeConductorCommand::~ChangeConductorCommand() {$/;"	f	class:ChangeConductorCommand
~ChangeConductorPropertiesCommand	diagramcommands.cpp	/^ChangeConductorPropertiesCommand::~ChangeConductorPropertiesCommand() {$/;"	f	class:ChangeConductorPropertiesCommand
~ChangeDiagramTextCommand	diagramcommands.cpp	/^ChangeDiagramTextCommand::~ChangeDiagramTextCommand() {$/;"	f	class:ChangeDiagramTextCommand
~ChangeInformationsCommand	editor/editorcommands.cpp	/^ChangeInformationsCommand::~ChangeInformationsCommand() {$/;"	f	class:ChangeInformationsCommand
~ChangeNamesCommand	editor/editorcommands.cpp	/^ChangeNamesCommand::~ChangeNamesCommand() {$/;"	f	class:ChangeNamesCommand
~ChangePartCommand	editor/editorcommands.cpp	/^ChangePartCommand::~ChangePartCommand() {$/;"	f	class:ChangePartCommand
~ChangePolygonPointsCommand	editor/editorcommands.cpp	/^ChangePolygonPointsCommand::~ChangePolygonPointsCommand() {$/;"	f	class:ChangePolygonPointsCommand
~ChangePropertiesCommand	editor/editorcommands.cpp	/^ChangePropertiesCommand::~ChangePropertiesCommand() {}$/;"	f	class:ChangePropertiesCommand
~ChangeSeveralConductorsPropertiesCommand	diagramcommands.cpp	/^ChangeSeveralConductorsPropertiesCommand::~ChangeSeveralConductorsPropertiesCommand() {$/;"	f	class:ChangeSeveralConductorsPropertiesCommand
~ChangeShapeStyleCommand	diagramcommands.cpp	/^ChangeShapeStyleCommand::~ChangeShapeStyleCommand() {}$/;"	f	class:ChangeShapeStyleCommand
~ChangeTemplateInformationsCommand	titleblock/templatecommands.cpp	/^ChangeTemplateInformationsCommand::~ChangeTemplateInformationsCommand() {$/;"	f	class:ChangeTemplateInformationsCommand
~ChangeTitleBlockCommand	diagramcommands.cpp	/^ChangeTitleBlockCommand::~ChangeTitleBlockCommand() {$/;"	f	class:ChangeTitleBlockCommand
~ChangeZValueCommand	editor/editorcommands.cpp	/^ChangeZValueCommand::~ChangeZValueCommand() {$/;"	f	class:ChangeZValueCommand
~Conductor	qetgraphicsitem/conductor.cpp	/^Conductor::~Conductor() {$/;"	f	class:Conductor
~ConductorProfile	conductorprofile.cpp	/^ConductorProfile::~ConductorProfile() {$/;"	f	class:ConductorProfile
~ConductorProperties	conductorproperties.cpp	/^ConductorProperties::~ConductorProperties() {$/;"	f	class:ConductorProperties
~ConductorPropertiesDialog	ui/conductorpropertiesdialog.cpp	/^ConductorPropertiesDialog::~ConductorPropertiesDialog()$/;"	f	class:ConductorPropertiesDialog
~ConductorPropertiesWidget	ui/conductorpropertieswidget.cpp	/^ConductorPropertiesWidget::~ConductorPropertiesWidget()$/;"	f	class:ConductorPropertiesWidget
~ConductorSegment	conductorsegment.cpp	/^ConductorSegment::~ConductorSegment() {$/;"	f	class:ConductorSegment
~ConductorSegmentProfile	conductorsegmentprofile.h	/^	virtual ~ConductorSegmentProfile() {$/;"	f	class:ConductorSegmentProfile
~ConductorTextItem	qetgraphicsitem/conductortextitem.cpp	/^ConductorTextItem::~ConductorTextItem() {$/;"	f	class:ConductorTextItem
~ConfigDialog	configdialog.cpp	/^ConfigDialog::~ConfigDialog() {$/;"	f	class:ConfigDialog
~ConfigPage	configpage.h	/^	virtual ~ConfigPage() {};$/;"	f	class:ConfigPage
~Createdxf	createdxf.cpp	/^Createdxf::~Createdxf()$/;"	f	class:Createdxf
~CrossRefItem	qetgraphicsitem/crossrefitem.cpp	/^CrossRefItem::~CrossRefItem() {}$/;"	f	class:CrossRefItem
~CustomElement	qetgraphicsitem/customelement.cpp	/^CustomElement::~CustomElement() {$/;"	f	class:CustomElement
~CustomElementGraphicPart	editor/graphicspart/customelementgraphicpart.cpp	/^CustomElementGraphicPart::~CustomElementGraphicPart() {}$/;"	f	class:CustomElementGraphicPart
~CustomElementPart	editor/graphicspart/customelementpart.h	/^	virtual ~CustomElementPart() {}$/;"	f	class:CustomElementPart
~CutDiagramCommand	diagramcommands.cpp	/^CutDiagramCommand::~CutDiagramCommand() {$/;"	f	class:CutDiagramCommand
~CutPartsCommand	editor/editorcommands.cpp	/^CutPartsCommand::~CutPartsCommand() {$/;"	f	class:CutPartsCommand
~CutTemplateCellsCommand	titleblock/templatecommands.cpp	/^CutTemplateCellsCommand::~CutTemplateCellsCommand() {$/;"	f	class:CutTemplateCellsCommand
~DVEventAddImage	dvevent/dveventaddimage.cpp	/^DVEventAddImage::~DVEventAddImage() {$/;"	f	class:DVEventAddImage
~DVEventAddShape	dvevent/dveventaddshape.cpp	/^DVEventAddShape::~DVEventAddShape()$/;"	f	class:DVEventAddShape
~DVEventAddText	dvevent/dveventaddtext.cpp	/^DVEventAddText::~DVEventAddText() {}$/;"	f	class:DVEventAddText
~DVEventInterface	dvevent/dveventinterface.cpp	/^DVEventInterface::~DVEventInterface() {};$/;"	f	class:DVEventInterface
~DeleteElementsCommand	diagramcommands.cpp	/^DeleteElementsCommand::~DeleteElementsCommand() {$/;"	f	class:DeleteElementsCommand
~DeletePartsCommand	editor/editorcommands.cpp	/^DeletePartsCommand::~DeletePartsCommand() {$/;"	f	class:DeletePartsCommand
~Diagram	diagram.cpp	/^Diagram::~Diagram() {$/;"	f	class:Diagram
~DiagramContent	diagramcontent.cpp	/^DiagramContent::~DiagramContent() {$/;"	f	class:DiagramContent
~DiagramContextWidget	diagramcontextwidget.cpp	/^DiagramContextWidget::~DiagramContextWidget() {$/;"	f	class:DiagramContextWidget
~DiagramFolioList	diagramfoliolist.cpp	/^DiagramFolioList::~DiagramFolioList()$/;"	f	class:DiagramFolioList
~DiagramImageItem	qetgraphicsitem/diagramimageitem.cpp	/^DiagramImageItem::~DiagramImageItem() {$/;"	f	class:DiagramImageItem
~DiagramPosition	diagramposition.cpp	/^DiagramPosition::~DiagramPosition() {$/;"	f	class:DiagramPosition
~DiagramPrintDialog	diagramprintdialog.cpp	/^DiagramPrintDialog::~DiagramPrintDialog() {$/;"	f	class:DiagramPrintDialog
~DiagramTextItem	qetgraphicsitem/diagramtextitem.cpp	/^DiagramTextItem::~DiagramTextItem() {$/;"	f	class:DiagramTextItem
~DiagramView	diagramview.cpp	/^DiagramView::~DiagramView() {$/;"	f	class:DiagramView
~DiagramsChooser	diagramschooser.cpp	/^DiagramsChooser::~DiagramsChooser() {$/;"	f	class:DiagramsChooser
~DialogAutoNum	ui/dialogautonum.cpp	/^DialogAutoNum::~DialogAutoNum(){$/;"	f	class:DialogAutoNum
~DialogWaiting	ui/dialogwaiting.cpp	/^DialogWaiting::~DialogWaiting() {$/;"	f	class:DialogWaiting
~ESEventAddArc	editor/esevent/eseventaddarc.cpp	/^ESEventAddArc::~ESEventAddArc() {$/;"	f	class:ESEventAddArc
~ESEventAddEllipse	editor/esevent/eseventaddellipse.cpp	/^ESEventAddEllipse::~ESEventAddEllipse() {$/;"	f	class:ESEventAddEllipse
~ESEventAddLine	editor/esevent/eseventaddline.cpp	/^ESEventAddLine::~ESEventAddLine() {$/;"	f	class:ESEventAddLine
~ESEventAddPolygon	editor/esevent/eseventaddpolygon.cpp	/^ESEventAddPolygon::~ESEventAddPolygon() {$/;"	f	class:ESEventAddPolygon
~ESEventAddRect	editor/esevent/eseventaddrect.cpp	/^ESEventAddRect::~ESEventAddRect() {$/;"	f	class:ESEventAddRect
~ESEventAddTerminal	editor/esevent/eseventaddterminal.cpp	/^ESEventAddTerminal::~ESEventAddTerminal() {$/;"	f	class:ESEventAddTerminal
~ESEventAddText	editor/esevent/eseventaddtext.cpp	/^ESEventAddText::~ESEventAddText() {$/;"	f	class:ESEventAddText
~ESEventAddTextField	editor/esevent/eseventaddtextfield.cpp	/^ESEventAddTextField::~ESEventAddTextField() {$/;"	f	class:ESEventAddTextField
~ESEventInterface	editor/esevent/eseventinterface.cpp	/^ESEventInterface::~ESEventInterface() {$/;"	f	class:ESEventInterface
~Element	qetgraphicsitem/element.cpp	/^Element::~Element() {$/;"	f	class:Element
~ElementDefinition	elementdefinition.h	/^	virtual ~ElementDefinition() {};$/;"	f	class:ElementDefinition
~ElementDeleter	elementdeleter.cpp	/^ElementDeleter::~ElementDeleter() {$/;"	f	class:ElementDeleter
~ElementDialog	elementdialog.cpp	/^ElementDialog::~ElementDialog() {$/;"	f	class:ElementDialog
~ElementEditionCommand	editor/editorcommands.cpp	/^ElementEditionCommand::~ElementEditionCommand() {$/;"	f	class:ElementEditionCommand
~ElementFactory	factory/elementfactory.h	/^		~ElementFactory() {}$/;"	f	class:ElementFactory
~ElementInfoPartWidget	ui/elementinfopartwidget.cpp	/^ElementInfoPartWidget::~ElementInfoPartWidget()$/;"	f	class:ElementInfoPartWidget
~ElementInfoWidget	ui/elementinfowidget.cpp	/^ElementInfoWidget::~ElementInfoWidget()$/;"	f	class:ElementInfoWidget
~ElementItemEditor	editor/elementitemeditor.h	/^		virtual ~ElementItemEditor() {};$/;"	f	class:ElementItemEditor
~ElementPrimitiveDecorator	editor/elementprimitivedecorator.cpp	/^ElementPrimitiveDecorator::~ElementPrimitiveDecorator() {$/;"	f	class:ElementPrimitiveDecorator
~ElementPropertiesEditorWidget	editor/ui/elementpropertieseditorwidget.cpp	/^ElementPropertiesEditorWidget::~ElementPropertiesEditorWidget()$/;"	f	class:ElementPropertiesEditorWidget
~ElementScene	editor/elementscene.cpp	/^ElementScene::~ElementScene() {$/;"	f	class:ElementScene
~ElementSelectorWidget	ui/elementselectorwidget.cpp	/^ElementSelectorWidget::~ElementSelectorWidget()$/;"	f	class:ElementSelectorWidget
~ElementTextItem	qetgraphicsitem/elementtextitem.cpp	/^ElementTextItem::~ElementTextItem() {$/;"	f	class:ElementTextItem
~ElementTextsMover	elementtextsmover.cpp	/^ElementTextsMover::~ElementTextsMover() {$/;"	f	class:ElementTextsMover
~ElementView	editor/elementview.cpp	/^ElementView::~ElementView() {$/;"	f	class:ElementView
~ElementsCategoriesList	elementscategorieslist.cpp	/^ElementsCategoriesList::~ElementsCategoriesList() {$/;"	f	class:ElementsCategoriesList
~ElementsCategoriesWidget	elementscategorieswidget.cpp	/^ElementsCategoriesWidget::~ElementsCategoriesWidget() {$/;"	f	class:ElementsCategoriesWidget
~ElementsCategory	elementscategory.cpp	/^ElementsCategory::~ElementsCategory() {$/;"	f	class:ElementsCategory
~ElementsCategoryDeleter	elementscategorydeleter.cpp	/^ElementsCategoryDeleter::~ElementsCategoryDeleter() {$/;"	f	class:ElementsCategoryDeleter
~ElementsCategoryEditor	elementscategoryeditor.cpp	/^ElementsCategoryEditor::~ElementsCategoryEditor() {$/;"	f	class:ElementsCategoryEditor
~ElementsCollection	elementscollection.cpp	/^ElementsCollection::~ElementsCollection() {$/;"	f	class:ElementsCollection
~ElementsCollectionCache	elementscollectioncache.cpp	/^ElementsCollectionCache::~ElementsCollectionCache() {$/;"	f	class:ElementsCollectionCache
~ElementsCollectionItem	elementscollectionitem.h	/^	virtual ~ElementsCollectionItem() {};$/;"	f	class:ElementsCollectionItem
~ElementsLocation	elementslocation.cpp	/^ElementsLocation::~ElementsLocation() {$/;"	f	class:ElementsLocation
~ElementsMover	elementsmover.cpp	/^ElementsMover::~ElementsMover() {$/;"	f	class:ElementsMover
~ElementsPanel	elementspanel.cpp	/^ElementsPanel::~ElementsPanel() {$/;"	f	class:ElementsPanel
~ElementsPanelWidget	elementspanelwidget.cpp	/^ElementsPanelWidget::~ElementsPanelWidget() {$/;"	f	class:ElementsPanelWidget
~EllipseEditor	editor/ellipseeditor.cpp	/^EllipseEditor::~EllipseEditor() {$/;"	f	class:EllipseEditor
~ExportConfigPage	configpages.cpp	/^ExportConfigPage::~ExportConfigPage() {$/;"	f	class:ExportConfigPage
~ExportDiagramLine	exportdialog.cpp	/^ExportDialog::ExportDiagramLine::~ExportDiagramLine() {$/;"	f	class:ExportDialog::ExportDiagramLine
~ExportDialog	exportdialog.cpp	/^ExportDialog::~ExportDialog() {$/;"	f	class:ExportDialog
~ExportProperties	exportproperties.cpp	/^ExportProperties::~ExportProperties() {$/;"	f	class:ExportProperties
~ExportPropertiesWidget	exportpropertieswidget.cpp	/^ExportPropertiesWidget::~ExportPropertiesWidget() {$/;"	f	class:ExportPropertiesWidget
~FileElementDefinition	fileelementdefinition.cpp	/^FileElementDefinition::~FileElementDefinition() {$/;"	f	class:FileElementDefinition
~FileElementsCategory	fileelementscategory.cpp	/^FileElementsCategory::~FileElementsCategory() {$/;"	f	class:FileElementsCategory
~FileElementsCollection	fileelementscollection.cpp	/^FileElementsCollection::~FileElementsCollection() {$/;"	f	class:FileElementsCollection
~FixedElement	qetgraphicsitem/fixedelement.cpp	/^FixedElement::~FixedElement() {$/;"	f	class:FixedElement
~GeneralConfigurationPage	configpages.cpp	/^GeneralConfigurationPage::~GeneralConfigurationPage() {$/;"	f	class:GeneralConfigurationPage
~GenericPanel	genericpanel.cpp	/^GenericPanel::~GenericPanel() {$/;"	f	class:GenericPanel
~GhostElement	qetgraphicsitem/ghostelement.cpp	/^GhostElement::~GhostElement() {$/;"	f	class:GhostElement
~GridLayoutAnimation	titleblock/gridlayoutanimation.cpp	/^GridLayoutAnimation::~GridLayoutAnimation() {$/;"	f	class:GridLayoutAnimation
~HelperCell	titleblock/helpercell.cpp	/^HelperCell::~HelperCell() {$/;"	f	class:HelperCell
~IndependentTextItem	qetgraphicsitem/independenttextitem.cpp	/^IndependentTextItem::~IndependentTextItem() {$/;"	f	class:IndependentTextItem
~IntegrationMoveElementsHandler	integrationmoveelementshandler.cpp	/^IntegrationMoveElementsHandler::~IntegrationMoveElementsHandler() {$/;"	f	class:IntegrationMoveElementsHandler
~IntegrationMoveTitleBlockTemplatesHandler	titleblock/integrationmovetemplateshandler.cpp	/^IntegrationMoveTitleBlockTemplatesHandler::~IntegrationMoveTitleBlockTemplatesHandler() {$/;"	f	class:IntegrationMoveTitleBlockTemplatesHandler
~InteractiveMoveElementsHandler	interactivemoveelementshandler.cpp	/^InteractiveMoveElementsHandler::~InteractiveMoveElementsHandler() {$/;"	f	class:InteractiveMoveElementsHandler
~ItemResizerCommand	diagramcommands.cpp	/^ItemResizerCommand::~ItemResizerCommand() {}$/;"	f	class:ItemResizerCommand
~LineEditor	editor/lineeditor.cpp	/^LineEditor::~LineEditor() {$/;"	f	class:LineEditor
~LinkElementsCommand	diagramcommands.cpp	/^LinkElementsCommand::~LinkElementsCommand(){}$/;"	f	class:LinkElementsCommand
~LinkSingleElementWidget	ui/linksingleelementwidget.cpp	/^LinkSingleElementWidget::~LinkSingleElementWidget()$/;"	f	class:LinkSingleElementWidget
~MasterElement	qetgraphicsitem/masterelement.cpp	/^MasterElement::~MasterElement() {$/;"	f	class:MasterElement
~MasterPropertiesWidget	ui/masterpropertieswidget.cpp	/^MasterPropertiesWidget::~MasterPropertiesWidget()$/;"	f	class:MasterPropertiesWidget
~MergeCellsCommand	titleblock/templatecommands.cpp	/^MergeCellsCommand::~MergeCellsCommand() {$/;"	f	class:MergeCellsCommand
~ModifyTemplateDimension	titleblock/templatecommands.cpp	/^ModifyTemplateDimension::~ModifyTemplateDimension() {$/;"	f	class:ModifyTemplateDimension
~ModifyTemplateGridCommand	titleblock/templatecommands.cpp	/^ModifyTemplateGridCommand::~ModifyTemplateGridCommand() {$/;"	f	class:ModifyTemplateGridCommand
~ModifyTitleBlockCellCommand	titleblock/templatecommands.cpp	/^ModifyTitleBlockCellCommand::~ModifyTitleBlockCellCommand() {$/;"	f	class:ModifyTitleBlockCellCommand
~MoveConductorsTextsCommand	diagramcommands.cpp	/^MoveConductorsTextsCommand::~MoveConductorsTextsCommand() {$/;"	f	class:MoveConductorsTextsCommand
~MoveElementsCommand	diagramcommands.cpp	/^MoveElementsCommand::~MoveElementsCommand() {$/;"	f	class:MoveElementsCommand
~MoveElementsDescription	moveelementsdescription.cpp	/^MoveElementsDescription::~MoveElementsDescription() {$/;"	f	class:MoveElementsDescription
~MoveElementsHandler	moveelementshandler.h	/^	virtual ~MoveElementsHandler() {};$/;"	f	class:MoveElementsHandler
~MoveElementsTextsCommand	diagramcommands.cpp	/^MoveElementsTextsCommand::~MoveElementsTextsCommand() {$/;"	f	class:MoveElementsTextsCommand
~MovePartsCommand	editor/editorcommands.cpp	/^MovePartsCommand::~MovePartsCommand() {$/;"	f	class:MovePartsCommand
~MoveTitleBlockTemplatesHandler	titleblock/movetemplateshandler.h	/^	virtual ~MoveTitleBlockTemplatesHandler() {}$/;"	f	class:MoveTitleBlockTemplatesHandler
~NamesList	nameslist.cpp	/^NamesList::~NamesList() {$/;"	f	class:NamesList
~NamesListWidget	nameslistwidget.cpp	/^NamesListWidget::~NamesListWidget() {$/;"	f	class:NamesListWidget
~NewDiagramPage	configpages.cpp	/^NewDiagramPage::~NewDiagramPage() {$/;"	f	class:NewDiagramPage
~NewElementWizard	newelementwizard.cpp	/^NewElementWizard::~NewElementWizard() {$/;"	f	class:NewElementWizard
~NumPartEditorW	ui/numparteditorw.cpp	/^NumPartEditorW::~NumPartEditorW()$/;"	f	class:NumPartEditorW
~NumStrategy	numerotationcontextcommands.cpp	/^NumStrategy::~NumStrategy() {}$/;"	f	class:NumStrategy
~NumerotationContextCommands	numerotationcontextcommands.cpp	/^NumerotationContextCommands::~NumerotationContextCommands() {$/;"	f	class:NumerotationContextCommands
~OrientationSet	orientationset.h	/^	virtual ~OrientationSet() {};$/;"	f	class:OrientationSet
~PartArc	editor/graphicspart/partarc.cpp	/^PartArc::~PartArc() {}$/;"	f	class:PartArc
~PartEllipse	editor/graphicspart/partellipse.cpp	/^PartEllipse::~PartEllipse() {}$/;"	f	class:PartEllipse
~PartLine	editor/graphicspart/partline.cpp	/^PartLine::~PartLine() {}$/;"	f	class:PartLine
~PartPolygon	editor/graphicspart/partpolygon.cpp	/^PartPolygon::~PartPolygon() {}$/;"	f	class:PartPolygon
~PartRectangle	editor/graphicspart/partrectangle.cpp	/^PartRectangle::~PartRectangle() {}$/;"	f	class:PartRectangle
~PartTerminal	editor/graphicspart/partterminal.cpp	/^PartTerminal::~PartTerminal() {$/;"	f	class:PartTerminal
~PartText	editor/graphicspart/parttext.cpp	/^PartText::~PartText() {$/;"	f	class:PartText
~PartTextField	editor/graphicspart/parttextfield.cpp	/^PartTextField::~PartTextField() {$/;"	f	class:PartTextField
~PasteDiagramCommand	diagramcommands.cpp	/^PasteDiagramCommand::~PasteDiagramCommand() {$/;"	f	class:PasteDiagramCommand
~PastePartsCommand	editor/editorcommands.cpp	/^PastePartsCommand::~PastePartsCommand() {$/;"	f	class:PastePartsCommand
~PasteTemplateCellsCommand	titleblock/templatecommands.cpp	/^PasteTemplateCellsCommand::~PasteTemplateCellsCommand() {$/;"	f	class:PasteTemplateCellsCommand
~PolygonEditor	editor/polygoneditor.cpp	/^PolygonEditor::~PolygonEditor() {$/;"	f	class:PolygonEditor
~PotentialTextsDialog	ui/potentialtextsdialog.cpp	/^PotentialTextsDialog::~PotentialTextsDialog()$/;"	f	class:PotentialTextsDialog
~PrintConfigPage	configpages.cpp	/^PrintConfigPage::~PrintConfigPage() {$/;"	f	class:PrintConfigPage
~ProjectConfigPage	projectconfigpages.cpp	/^ProjectConfigPage::~ProjectConfigPage() {$/;"	f	class:ProjectConfigPage
~ProjectMainConfigPage	projectconfigpages.cpp	/^ProjectMainConfigPage::~ProjectMainConfigPage() {$/;"	f	class:ProjectMainConfigPage
~ProjectPropertiesDialog	ui/projectpropertiesdialog.cpp	/^ProjectPropertiesDialog::~ProjectPropertiesDialog () {$/;"	f	class:ProjectPropertiesDialog
~ProjectView	projectview.cpp	/^ProjectView::~ProjectView() {$/;"	f	class:ProjectView
~QETApp	qetapp.cpp	/^QETApp::~QETApp()$/;"	f	class:QETApp
~QETArguments	qetarguments.cpp	/^QETArguments::~QETArguments() {$/;"	f	class:QETArguments
~QETDiagramEditor	qetdiagrameditor.cpp	/^QETDiagramEditor::~QETDiagramEditor() {$/;"	f	class:QETDiagramEditor
~QETElementEditor	editor/qetelementeditor.cpp	/^QETElementEditor::~QETElementEditor() {$/;"	f	class:QETElementEditor
~QETMainWindow	qetmainwindow.cpp	/^QETMainWindow::~QETMainWindow() {$/;"	f	class:QETMainWindow
~QETPrintPreviewDialog	qetprintpreviewdialog.cpp	/^QETPrintPreviewDialog::~QETPrintPreviewDialog() {$/;"	f	class:QETPrintPreviewDialog
~QETProject	qetproject.cpp	/^QETProject::~QETProject() {$/;"	f	class:QETProject
~QETRegExpValidator	qetregexpvalidator.cpp	/^QETRegExpValidator::~QETRegExpValidator() {$/;"	f	class:QETRegExpValidator
~QETResult	qetresult.cpp	/^QETResult::~QETResult() {$/;"	f	class:QETResult
~QETSingleApplication	qetsingleapplication.cpp	/^QETSingleApplication::~QETSingleApplication() {$/;"	f	class:QETSingleApplication
~QETStyle	qetapp.cpp	/^QETStyle::~QETStyle()$/;"	f	class:QETStyle
~QETTabBar	qettabbar.cpp	/^QETTabBar::~QETTabBar() {$/;"	f	class:QETTabBar
~QETTabWidget	qettabwidget.cpp	/^QETTabWidget::~QETTabWidget() {$/;"	f	class:QETTabWidget
~QETTitleBlockTemplateEditor	titleblock/qettemplateeditor.cpp	/^QETTitleBlockTemplateEditor::~QETTitleBlockTemplateEditor() {$/;"	f	class:QETTitleBlockTemplateEditor
~QFileNameEdit	qfilenameedit.cpp	/^QFileNameEdit::~QFileNameEdit() {$/;"	f	class:QFileNameEdit
~QGIManager	qgimanager.cpp	/^QGIManager::~QGIManager(){$/;"	f	class:QGIManager
~QTextOrientationSpinBoxWidget	qtextorientationspinboxwidget.cpp	/^QTextOrientationSpinBoxWidget::~QTextOrientationSpinBoxWidget() {$/;"	f	class:QTextOrientationSpinBoxWidget
~QTextOrientationWidget	qtextorientationwidget.cpp	/^QTextOrientationWidget::~QTextOrientationWidget() {$/;"	f	class:QTextOrientationWidget
~QetGraphicsItem	qetgraphicsitem/qetgraphicsitem.cpp	/^QetGraphicsItem::~QetGraphicsItem()$/;"	f	class:QetGraphicsItem
~QetShapeItem	qetgraphicsitem/qetshapeitem.cpp	/^QetShapeItem::~QetShapeItem()$/;"	f	class:QetShapeItem
~RecentFiles	recentfiles.cpp	/^RecentFiles::~RecentFiles() {$/;"	f	class:RecentFiles
~RectangleEditor	editor/rectangleeditor.cpp	/^RectangleEditor::~RectangleEditor() {$/;"	f	class:RectangleEditor
~ReportElement	qetgraphicsitem/reportelement.cpp	/^ReportElement::~ReportElement() {$/;"	f	class:ReportElement
~ReportPropertieWidget	ui/reportpropertiewidget.cpp	/^ReportPropertieWidget::~ReportPropertieWidget()$/;"	f	class:ReportPropertieWidget
~ResetConductorCommand	diagramcommands.cpp	/^ResetConductorCommand::~ResetConductorCommand() {$/;"	f	class:ResetConductorCommand
~RichTextEditorDialog	richtext/richtexteditor.cpp	/^RichTextEditorDialog::~RichTextEditorDialog()$/;"	f	class:qdesigner_internal::RichTextEditorDialog
~RotateElementsCommand	diagramcommands.cpp	/^RotateElementsCommand::~RotateElementsCommand() {$/;"	f	class:RotateElementsCommand
~RotateTextsCommand	diagramcommands.cpp	/^RotateTextsCommand::~RotateTextsCommand() {$/;"	f	class:RotateTextsCommand
~ScalePartsCommand	editor/editorcommands.cpp	/^ScalePartsCommand::~ScalePartsCommand() {$/;"	f	class:ScalePartsCommand
~SelectAutonumW	ui/selectautonumw.cpp	/^SelectAutonumW::~SelectAutonumW()$/;"	f	class:SelectAutonumW
~SimpleElement	qetgraphicsitem/simpleelement.cpp	/^SimpleElement::~SimpleElement() {$/;"	f	class:SimpleElement
~SingleLineProperties	conductorproperties.cpp	/^SingleLineProperties::~SingleLineProperties() {$/;"	f	class:SingleLineProperties
~SlaveElement	qetgraphicsitem/slaveelement.cpp	/^SlaveElement::~SlaveElement() {$/;"	f	class:SlaveElement
~SplitCellsCommand	titleblock/templatecommands.cpp	/^SplitCellsCommand::~SplitCellsCommand() {$/;"	f	class:SplitCellsCommand
~SplittedHelperCell	titleblock/splittedhelpercell.cpp	/^SplittedHelperCell::~SplittedHelperCell() {$/;"	f	class:SplittedHelperCell
~StyleEditor	editor/styleeditor.cpp	/^StyleEditor::~StyleEditor() {$/;"	f	class:StyleEditor
~Terminal	qetgraphicsitem/terminal.cpp	/^Terminal::~Terminal() {$/;"	f	class:Terminal
~TerminalEditor	editor/terminaleditor.cpp	/^TerminalEditor::~TerminalEditor() {$/;"	f	class:TerminalEditor
~TerminalElement	qetgraphicsitem/terminalelement.cpp	/^TerminalElement::~TerminalElement() {}$/;"	f	class:TerminalElement
~TextEditor	editor/texteditor.cpp	/^TextEditor::~TextEditor() {$/;"	f	class:TextEditor
~TextFieldEditor	editor/textfieldeditor.cpp	/^TextFieldEditor::~TextFieldEditor() {$/;"	f	class:TextFieldEditor
~TitleBlockCell	titleblockcell.cpp	/^TitleBlockCell::~TitleBlockCell() {$/;"	f	class:TitleBlockCell
~TitleBlockDimensionWidget	titleblock/dimensionwidget.cpp	/^TitleBlockDimensionWidget::~TitleBlockDimensionWidget() {$/;"	f	class:TitleBlockDimensionWidget
~TitleBlockProperties	titleblockproperties.cpp	/^TitleBlockProperties::~TitleBlockProperties() {$/;"	f	class:TitleBlockProperties
~TitleBlockPropertiesWidget	ui/titleblockpropertieswidget.cpp	/^TitleBlockPropertiesWidget::~TitleBlockPropertiesWidget()$/;"	f	class:TitleBlockPropertiesWidget
~TitleBlockTemplate	titleblocktemplate.cpp	/^TitleBlockTemplate::~TitleBlockTemplate() {$/;"	f	class:TitleBlockTemplate
~TitleBlockTemplateCellWidget	titleblock/templatecellwidget.cpp	/^TitleBlockTemplateCellWidget::~TitleBlockTemplateCellWidget() {$/;"	f	class:TitleBlockTemplateCellWidget
~TitleBlockTemplateCellsSet	titleblock/templatecellsset.cpp	/^TitleBlockTemplateCellsSet::~TitleBlockTemplateCellsSet() {$/;"	f	class:TitleBlockTemplateCellsSet
~TitleBlockTemplateCommand	titleblock/templatecommands.cpp	/^TitleBlockTemplateCommand::~TitleBlockTemplateCommand() {$/;"	f	class:TitleBlockTemplateCommand
~TitleBlockTemplateDeleter	titleblock/templatedeleter.cpp	/^TitleBlockTemplateDeleter::~TitleBlockTemplateDeleter() {$/;"	f	class:TitleBlockTemplateDeleter
~TitleBlockTemplateLocation	titleblock/templatelocation.cpp	/^TitleBlockTemplateLocation::~TitleBlockTemplateLocation() {$/;"	f	class:TitleBlockTemplateLocation
~TitleBlockTemplateLocationChooser	titleblock/templatelocationchooser.cpp	/^TitleBlockTemplateLocationChooser::~TitleBlockTemplateLocationChooser() {$/;"	f	class:TitleBlockTemplateLocationChooser
~TitleBlockTemplateLocationSaver	titleblock/templatelocationsaver.cpp	/^TitleBlockTemplateLocationSaver::~TitleBlockTemplateLocationSaver() {$/;"	f	class:TitleBlockTemplateLocationSaver
~TitleBlockTemplateLogoManager	titleblock/templatelogomanager.cpp	/^TitleBlockTemplateLogoManager::~TitleBlockTemplateLogoManager() {$/;"	f	class:TitleBlockTemplateLogoManager
~TitleBlockTemplateRenderer	titleblocktemplaterenderer.cpp	/^TitleBlockTemplateRenderer::~TitleBlockTemplateRenderer() {$/;"	f	class:TitleBlockTemplateRenderer
~TitleBlockTemplateView	titleblock/templateview.cpp	/^TitleBlockTemplateView::~TitleBlockTemplateView() {$/;"	f	class:TitleBlockTemplateView
~TitleBlockTemplateVisualCell	titleblock/templatevisualcell.cpp	/^TitleBlockTemplateVisualCell::~TitleBlockTemplateVisualCell() {$/;"	f	class:TitleBlockTemplateVisualCell
~TitleBlockTemplatesCollection	titleblock/templatescollection.cpp	/^TitleBlockTemplatesCollection::~TitleBlockTemplatesCollection() {$/;"	f	class:TitleBlockTemplatesCollection
~TitleBlockTemplatesFilesCollection	titleblock/templatescollection.cpp	/^TitleBlockTemplatesFilesCollection::~TitleBlockTemplatesFilesCollection() {$/;"	f	class:TitleBlockTemplatesFilesCollection
~TitleBlockTemplatesProjectCollection	titleblock/templatescollection.cpp	/^TitleBlockTemplatesProjectCollection::~TitleBlockTemplatesProjectCollection() {$/;"	f	class:TitleBlockTemplatesProjectCollection
~TreeColorAnimation	treecoloranimation.cpp	/^TreeColorAnimation::~TreeColorAnimation() {$/;"	f	class:TreeColorAnimation
~XRefPropertiesWidget	ui/xrefpropertieswidget.cpp	/^XRefPropertiesWidget::~XRefPropertiesWidget()$/;"	f	class:XRefPropertiesWidget
~XmlElementDefinition	xmlelementdefinition.cpp	/^XmlElementDefinition::~XmlElementDefinition() {$/;"	f	class:XmlElementDefinition
~XmlElementsCategory	xmlelementscategory.cpp	/^XmlElementsCategory::~XmlElementsCategory() {$/;"	f	class:XmlElementsCategory
~XmlElementsCollection	xmlelementscollection.cpp	/^XmlElementsCollection::~XmlElementsCollection() {$/;"	f	class:XmlElementsCollection
~diagramselection	ui/diagramselection.cpp	/^diagramselection::~diagramselection() {$/;"	f	class:diagramselection
~nomenclature	nomenclature.cpp	/^nomenclature::~nomenclature() {$/;"	f	class:nomenclature
~unlinkElementsCommand	diagramcommands.cpp	/^unlinkElementsCommand::~unlinkElementsCommand(){}$/;"	f	class:unlinkElementsCommand
